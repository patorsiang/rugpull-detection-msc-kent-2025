{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH1 SHR DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH1 AND PUSH1 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 MLOAD DUP1 PUSH1 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH32 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 DUP2 PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 AND CALLER PUSH20 AND PUSH32 DUP5 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP3 PUSH1 DUP1 DUP8 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP1 DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH2 DUP3 PUSH1 PUSH1 DUP8 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 PUSH1 DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH2 DUP3 PUSH1 DUP1 DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 AND DUP5 PUSH20 AND PUSH32 DUP5 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 DUP2 JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP3 PUSH1 DUP1 DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH2 DUP3 PUSH1 DUP1 PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP1 PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 MLOAD DUP1 PUSH1 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH32 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 DUP1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP3 PUSH1 DUP1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH2 DUP3 PUSH1 DUP1 DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 AND CALLER PUSH20 AND PUSH32 DUP5 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP3 DUP3 GT ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP UNKNOWN_0xfe LOG1 PUSH6 SHA3 UNKNOWN_0x23 UNKNOWN_0xa8 PUSH14 SWAP8 PUSH15",
  "opcode_entropy": 4.596916960499443,
  "opcode_count": 1697,
  "unique_opcodes": 52,
  "byte_entropy": 4.285600376043655,
  "byte_0x": 0.00026014568158168577,
  "byte_60": 0.06347554630593132,
  "byte_80": 0.02991675338189386,
  "byte_40": 0.010145681581685745,
  "byte_52": 0.021071800208116546,
  "byte_34": 0.00026014568158168577,
  "byte_15": 0.00858480749219563,
  "byte_61": 0.019771071800208116,
  "byte_00": 0.038761706555671176,
  "byte_10": 0.003121748178980229,
  "byte_57": 0.008064516129032258,
  "byte_fd": 0.0036420395421436005,
  "byte_5b": 0.01768990634755463,
  "byte_50": 0.027055150884495317,
  "byte_04": 0.004422476586888657,
  "byte_36": 0.002081165452653486,
  "byte_a9": 0.0007804370447450572,
  "byte_35": 0.003902185223725286,
  "byte_e0": 0.00026014568158168577,
  "byte_1c": 0.0005202913631633715,
  "byte_63": 0.005463059313215401,
  "byte_70": 0.0005202913631633715,
  "byte_a0": 0.0005202913631633715,
  "byte_82": 0.010145681581685745,
  "byte_31": 0.001040582726326743,
  "byte_11": 0.0015608740894901144,
  "byte_71": 0.0005202913631633715,
  "byte_14": 0.0033818938605619147,
  "byte_02": 0.0026014568158168575,
  "byte_5f": 0.0005202913631633715,
  "byte_79": 0.0007804370447450572,
  "byte_cc": 0.00026014568158168577,
  "byte_67": 0.001040582726326743,
  "byte_90": 0.03590010405827263,
  "byte_b7": 0.00026014568158168577,
  "byte_8d": 0.0007804370447450572,
  "byte_a5": 0.00026014568158168577,
  "byte_cb": 0.0005202913631633715,
  "byte_03": 0.011706555671175858,
  "byte_1d": 0.0005202913631633715,
  "byte_95": 0.0007804370447450572,
  "byte_d8": 0.00026014568158168577,
  "byte_9b": 0.0007804370447450572,
  "byte_41": 0.0007804370447450572,
  "byte_05": 0.0013007284079084287,
  "byte_9c": 0.00026014568158168577,
  "byte_bb": 0.001040582726326743,
  "byte_ea": 0.00026014568158168577,
  "byte_dd": 0.0015608740894901144,
  "byte_62": 0.0005202913631633715,
  "byte_ed": 0.00026014568158168577,
  "byte_3e": 0.00026014568158168577,
  "byte_56": 0.008844953173777315,
  "byte_06": 0.001040582726326743,
  "byte_de": 0.00026014568158168577,
  "byte_ae": 0.00026014568158168577,
  "byte_09": 0.001040582726326743,
  "byte_5e": 0.00026014568158168577,
  "byte_a7": 0.0007804370447450572,
  "byte_b3": 0.001040582726326743,
  "byte_01": 0.03355879292403746,
  "byte_18": 0.00026014568158168577,
  "byte_16": 0.023413111342351717,
  "byte_0d": 0.0005202913631633715,
  "byte_97": 0.0005202913631633715,
  "byte_23": 0.0013007284079084287,
  "byte_b8": 0.00026014568158168577,
  "byte_72": 0.0005202913631633715,
  "byte_b5": 0.00026014568158168577,
  "byte_3c": 0.00026014568158168577,
  "byte_e5": 0.0005202913631633715,
  "byte_3b": 0.0005202913631633715,
  "byte_b6": 0.0005202913631633715,
  "byte_c8": 0.001040582726326743,
  "byte_51": 0.009885535900104058,
  "byte_20": 0.031217481789802288,
  "byte_81": 0.029656607700312174,
  "byte_83": 0.0036420395421436005,
  "byte_91": 0.014828303850156087,
  "byte_f6": 0.00026014568158168577,
  "byte_84": 0.0026014568158168575,
  "byte_db": 0.00026014568158168577,
  "byte_1f": 0.0005202913631633715,
  "byte_0a": 0.0026014568158168575,
  "byte_19": 0.0005202913631633715,
  "byte_92": 0.005463059313215401,
  "byte_f3": 0.0033818938605619147,
  "byte_7d": 0.0007804370447450572,
  "byte_47": 0.00026014568158168577,
  "byte_73": 0.01951092611862643,
  "byte_ff": 0.3928199791883455,
  "byte_9f": 0.00026014568158168577,
  "byte_21": 0.00026014568158168577,
  "byte_f9": 0.00026014568158168577,
  "byte_43": 0.00026014568158168577,
  "byte_74": 0.00026014568158168577,
  "byte_a1": 0.001040582726326743,
  "byte_75": 0.0007804370447450572,
  "byte_cd": 0.0005202913631633715,
  "byte_c1": 0.00026014568158168577,
  "byte_25": 0.0005202913631633715,
  "byte_0b": 0.0005202913631633715,
  "byte_dc": 0.0005202913631633715,
  "byte_6f": 0.00026014568158168577,
  "byte_0c": 0.001040582726326743,
  "byte_af": 0.00026014568158168577,
  "byte_94": 0.0005202913631633715,
  "byte_b2": 0.0005202913631633715,
  "byte_66": 0.00026014568158168577,
  "byte_0e": 0.0028616024973985433,
  "byte_7f": 0.0013007284079084287,
  "byte_64": 0.00026014568158168577,
  "byte_69": 0.0007804370447450572,
  "byte_33": 0.0026014568158168575,
  "byte_85": 0.0015608740894901144,
  "byte_55": 0.0026014568158168575,
  "byte_8c": 0.00026014568158168577,
  "byte_e1": 0.0005202913631633715,
  "byte_eb": 0.00026014568158168577,
  "byte_ec": 0.00026014568158168577,
  "byte_d1": 0.00026014568158168577,
  "byte_4f": 0.00026014568158168577,
  "byte_42": 0.00026014568158168577,
  "byte_1e": 0.0007804370447450572,
  "byte_c0": 0.00026014568158168577,
  "byte_f7": 0.00026014568158168577,
  "byte_29": 0.0007804370447450572,
  "byte_c7": 0.00026014568158168577,
  "byte_c3": 0.00026014568158168577,
  "byte_b9": 0.0005202913631633715,
  "byte_a3": 0.0007804370447450572,
  "byte_54": 0.004942767950052029,
  "byte_46": 0.00026014568158168577,
  "byte_cf": 0.00026014568158168577,
  "byte_07": 0.0005202913631633715,
  "byte_87": 0.0005202913631633715,
  "byte_a4": 0.001040582726326743,
  "byte_86": 0.0013007284079084287,
  "byte_f1": 0.0007804370447450572,
  "byte_08": 0.00026014568158168577,
  "byte_c2": 0.0007804370447450572,
  "byte_f2": 0.0005202913631633715,
  "byte_ad": 0.0005202913631633715,
  "byte_1b": 0.0005202913631633715,
  "byte_e2": 0.0005202913631633715,
  "byte_b0": 0.0007804370447450572,
  "byte_68": 0.0007804370447450572,
  "byte_fc": 0.0005202913631633715,
  "byte_37": 0.0005202913631633715,
  "byte_aa": 0.0005202913631633715,
  "byte_2b": 0.0005202913631633715,
  "byte_c4": 0.0007804370447450572,
  "byte_28": 0.0005202913631633715,
  "byte_f5": 0.001040582726326743,
  "byte_5a": 0.0005202913631633715,
  "byte_4d": 0.0005202913631633715,
  "byte_ef": 0.0005202913631633715,
  "byte_93": 0.00026014568158168577,
  "byte_12": 0.00026014568158168577,
  "byte_6e": 0.001040582726326743,
  "byte_44": 0.00026014568158168577,
  "byte_49": 0.00026014568158168577,
  "byte_88": 0.00026014568158168577,
  "byte_d9": 0.00026014568158168577,
  "byte_6c": 0.00026014568158168577,
  "byte_fe": 0.001040582726326743,
  "byte_65": 0.0005202913631633715,
  "byte_7a": 0.0005202913631633715,
  "byte_30": 0.00026014568158168577,
  "byte_58": 0.00026014568158168577,
  "byte_a8": 0.00026014568158168577,
  "byte_6d": 0.00026014568158168577,
  "byte_2f": 0.00026014568158168577,
  "byte_53": 0.00026014568158168577,
  "byte_e4": 0.00026014568158168577,
  "byte_8b": 0.00026014568158168577,
  "byte_4a": 0.00026014568158168577,
  "byte_78": 0.00026014568158168577,
  "byte_3d": 0.00026014568158168577,
  "byte_26": 0.00026014568158168577,
  "num_nodes": 96,
  "num_edges": 62,
  "avg_degree": 1.2916666666666667,
  "density": 0.006798245614035088,
  "connected_components": 36,
  "avg_clustering": 0.0,
  "timeline_sequence": [],
  "sourcecode": "pragma solidity 0.5.8;\n\ncontract Audius {\n    string public constant  name= \"Audius\";\n    string public constant  symbol = \"AUDIU\";\n    uint8 public constant decimals = 18;\n\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n    event Transfer(address indexed from, address indexed to, uint tokens);\n\n    mapping (address => uint256) internal balances;\n    mapping (address => mapping (address => uint256)) internal allowed;\n\n    uint256 public totalSupply;\n    address public owner;\n\n    using SafeMath for uint256;\n\n    constructor() public {\n        totalSupply = 50000000000000000000000;\n        owner = msg.sender;\n        balances[owner] = totalSupply;\n    }\n\n    function balanceOf(address tokenOwner) public view returns (uint) {\n        return balances[tokenOwner];\n    }\n\n    function transfer(address receiver, uint numTokens) public returns (bool) {\n        require(numTokens <= balances[msg.sender]);\n        balances[msg.sender] = balances[msg.sender].sub(numTokens);\n        balances[receiver] = balances[receiver].add(numTokens);\n        emit Transfer(msg.sender, receiver, numTokens);\n        return true;\n    }\n\n    function approve(address delegate, uint numTokens) public returns (bool) {\n        allowed[msg.sender][delegate] = numTokens;\n        emit Approval(msg.sender, delegate, numTokens);\n        return true;\n    }\n\n    function allowance(address from, address delegate) public view returns (uint) {\n        return allowed[from][delegate];\n    }\n\n    function transferFrom(address from, address buyer, uint numTokens) public returns (bool) {\n        require(numTokens <= balances[from]);\n        require(numTokens <= allowed[from][msg.sender]);\n\n        balances[from] = balances[from].sub(numTokens);\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(numTokens);\n        balances[buyer] = balances[buyer].add(numTokens);\n        emit Transfer(from, buyer, numTokens);\n        return true;\n    }\n\n    function burnFrom(address from, uint numTokens) public returns (bool) {\n        require(numTokens <= balances[from]);\n        require(msg.sender == owner);\n        balances[from] = balances[from].sub(numTokens);\n        balances[owner] = balances[owner].add(numTokens);\n        return true;\n    }\n}\n\nlibrary SafeMath {\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}"
}