{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE PUSH1 MLOAD PUSH3 CODESIZE SUB DUP1 PUSH3 DUP4 CODECOPY DUP2 ADD PUSH1 DUP2 SWAP1 MSTORE PUSH3 SWAP2 PUSH3 JUMP JUMPDEST DUP1 PUSH1 MLOAD DUP1 PUSH1 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH13 PUSH1 SHL DUP2 MSTORE POP DUP5 DUP8 DUP8 DUP2 PUSH1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 PUSH3 SWAP3 SWAP2 SWAP1 PUSH3 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 SWAP1 PUSH1 SWAP1 PUSH1 DUP5 ADD SWAP1 PUSH3 JUMP JUMPDEST POP POP POP PUSH1 SHL PUSH32 AND PUSH1 MSTORE PUSH1 MLOAD PUSH4 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND SWAP1 PUSH4 SWAP1 CALLVALUE SWAP1 PUSH3 SWAP1 DUP6 SWAP1 PUSH1 ADD PUSH3 JUMP JUMPDEST PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP POP POP POP PUSH1 DUP3 GT PUSH3 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 DUP1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH4 PUSH1 SHL PUSH1 DUP3 ADD MSTORE PUSH1 ADD JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 CALLER DUP4 PUSH3 JUMP JUMPDEST POP POP POP POP POP PUSH3 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND PUSH3 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH1 ADD PUSH3 JUMP JUMPDEST DUP1 PUSH1 PUSH1 DUP3 DUP3 SLOAD PUSH3 SWAP2 SWAP1 PUSH3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP2 SWAP1 MSTORE PUSH1 DUP2 SHA3 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 SWAP1 DUP5 SWAP1 PUSH3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 MLOAD DUP2 DUP2 MSTORE PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND SWAP1 PUSH1 SWAP1 PUSH32 SWAP1 PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 SWAP1 PUSH3 JUMP JUMPDEST SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 PUSH1 ADD PUSH1 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 JUMPI PUSH1 DUP6 SSTORE PUSH3 JUMP JUMPDEST DUP3 PUSH1 LT PUSH3 JUMPI DUP1 MLOAD PUSH1 NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 ADD SWAP2 SWAP1 PUSH1 ADD SWAP1 PUSH3 JUMP JUMPDEST POP PUSH3 SWAP3 SWAP2 POP PUSH3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 JUMPI PUSH1 DUP2 SSTORE PUSH1 ADD PUSH3 JUMP JUMPDEST PUSH1 DUP3 PUSH1 DUP4 ADD SLT PUSH3 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 PUSH1 PUSH1 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 JUMPI PUSH3 PUSH3 JUMP JUMPDEST PUSH1 MLOAD PUSH1 DUP4 ADD PUSH1 NOT SWAP1 DUP2 AND PUSH1 ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 JUMPI PUSH3 PUSH3 JUMP JUMPDEST DUP2 PUSH1 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH3 DUP5 PUSH1 DUP4 ADD PUSH1 DUP10 ADD PUSH3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP1 PUSH1 PUSH1 DUP7 DUP9 SUB SLT ISZERO PUSH3 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 PUSH1 PUSH1 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH3 DUP10 DUP4 DUP11 ADD PUSH3 JUMP JUMPDEST SWAP7 POP PUSH1 DUP9 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH3 DUP9 DUP3 DUP10 ADD PUSH3 JUMP JUMPDEST SWAP5 POP POP PUSH1 DUP7 ADD MLOAD PUSH1 DUP2 AND DUP2 EQ PUSH3 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP8 ADD MLOAD PUSH1 DUP9 ADD MLOAD SWAP2 SWAP5 POP SWAP3 POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 AND DUP2 EQ PUSH3 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 DUP2 MSTORE PUSH1 DUP3 MLOAD DUP1 PUSH1 DUP5 ADD MSTORE PUSH3 DUP2 PUSH1 DUP6 ADD PUSH1 DUP8 ADD PUSH3 JUMP JUMPDEST PUSH1 ADD PUSH1 NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP3 NOT DUP3 GT ISZERO PUSH3 JUMPI PUSH4 PUSH1 SHL PUSH1 MSTORE PUSH1 PUSH1 MSTORE PUSH1 PUSH1 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 ADD PUSH3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 JUMPI PUSH1 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 JUMPI PUSH1 DUP3 AND SWAP2 POP JUMPDEST PUSH1 DUP3 LT DUP2 EQ ISZERO PUSH3 JUMPI PUSH4 PUSH1 SHL PUSH1 MSTORE PUSH1 PUSH1 MSTORE PUSH1 PUSH1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 PUSH1 SHL PUSH1 MSTORE PUSH1 PUSH1 MSTORE PUSH1 PUSH1 REVERT JUMPDEST PUSH1 MLOAD PUSH1 SHR PUSH2 PUSH3 PUSH1 CODECOPY PUSH1 PUSH2 ADD MSTORE PUSH2 PUSH1 RETURN UNKNOWN_0xfe PUSH1 PUSH1 MSTORE CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH1 SHR DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH2 CALLDATASIZE PUSH1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH1 SLOAD JUMPDEST PUSH1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH2 PUSH2 CALLDATASIZE PUSH1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH1 PUSH32 AND DUP2 MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH2 PUSH2 CALLDATASIZE PUSH1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH2 PUSH2 CALLDATASIZE PUSH1 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP2 SWAP1 MSTORE PUSH1 SWAP1 SHA3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH2 CALLDATASIZE PUSH1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH2 PUSH2 CALLDATASIZE PUSH1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH2 PUSH2 CALLDATASIZE PUSH1 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB SWAP2 DUP3 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SHA3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 PUSH1 DUP1 SLOAD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP3 DUP1 SLOAD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 ADD SWAP1 PUSH1 ADD DUP1 DUP4 GT PUSH2 JUMPI DUP3 SWAP1 SUB PUSH1 AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 PUSH2 CALLER DUP5 DUP5 PUSH2 JUMP JUMPDEST POP PUSH1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH2 DUP5 DUP5 DUP5 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP5 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SHA3 SLOAD DUP3 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH8 PUSH1 SHL PUSH1 DUP3 ADD MSTORE PUSH1 ADD JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 DUP6 CALLER PUSH2 DUP7 DUP6 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST POP PUSH1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 SHA3 SLOAD SWAP1 SWAP2 PUSH2 SWAP2 DUP6 SWAP1 PUSH2 SWAP1 DUP7 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 DUP1 SLOAD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 SHA3 SLOAD DUP3 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH5 PUSH1 SHL PUSH1 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH2 CALLER DUP6 PUSH2 DUP7 DUP6 PUSH2 JUMP JUMPDEST POP PUSH1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 PUSH2 CALLER DUP5 DUP5 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND PUSH2 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 DUP1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH4 PUSH1 SHL PUSH1 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND PUSH2 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH2 PUSH1 SHL PUSH1 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP4 DUP2 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 SHA3 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 SWAP2 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND PUSH2 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH5 PUSH1 SHL PUSH1 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND PUSH2 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH3 PUSH1 SHL PUSH1 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP2 SWAP1 MSTORE PUSH1 SWAP1 SHA3 SLOAD DUP2 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH6 PUSH1 SHL PUSH1 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH2 DUP3 DUP3 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP1 DUP7 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP2 SWAP1 MSTORE PUSH1 DUP1 DUP3 SHA3 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 SHA3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 SWAP1 DUP5 SWAP1 PUSH2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 PUSH1 PUSH1 SHL SUB AND DUP5 PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH32 DUP5 PUSH1 MLOAD PUSH2 SWAP2 DUP2 MSTORE PUSH1 ADD SWAP1 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB DUP2 AND DUP2 EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 DUP5 SUB SLT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP3 PUSH2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP4 DUP6 SUB SLT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 PUSH1 DUP5 ADD PUSH2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 PUSH1 DUP5 DUP7 SUB SLT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP5 PUSH2 JUMP JUMPDEST SWAP3 POP PUSH2 PUSH1 DUP6 ADD PUSH2 JUMP JUMPDEST SWAP2 POP PUSH1 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP4 DUP6 SUB SLT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP4 PUSH2 JUMP JUMPDEST SWAP5 PUSH1 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 ADD MSTORE DUP3 ADD PUSH2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 JUMPI PUSH1 PUSH1 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 ADD PUSH1 NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 DUP3 NOT DUP3 GT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 DUP3 DUP3 LT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 JUMPI PUSH1 DUP3 AND SWAP2 POP JUMPDEST PUSH1 DUP3 LT DUP2 EQ ISZERO PUSH2 JUMPI PUSH4 PUSH1 SHL PUSH1 MSTORE PUSH1 PUSH1 MSTORE PUSH1 PUSH1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 PUSH1 SHL PUSH1 MSTORE PUSH1 PUSH1 MSTORE PUSH1 PUSH1 REVERT UNKNOWN_0xfe LOG2 PUSH5 UNKNOWN_0x22 SLT SHA3 UNKNOWN_0xd8 CALLDATACOPY UNKNOWN_0xd0 UNKNOWN_0xbc UNKNOWN_0xed UNKNOWN_0xa6 UNKNOWN_0x2d BASEFEE SELFDESTRUCT UNKNOWN_0xfc SAR EQ UNOFFICIAL_DUP DELEGATECALL UNKNOWN_0xc5 CREATE DUP9 SELFBALANCE UNKNOWN_0x2d JUMPI PUSH19 SDIV STOP CALLER STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP LOG0 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP UNKNOWN_0xe0 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP SLT STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP BALANCE UNKNOWN_0x4d UNKNOWN_0xc6 DIFFICULTY DUP14 SWAP4 CODESIZE UNKNOWN_0xc1 JUMPDEST EXP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP CALLER UNKNOWN_0x2d UNKNOWN_0xe8 DUP1 NUMBER SUB DUP4 UNKNOWN_0xf9 UNKNOWN_0xa5 PUSH30 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP UNKNOWN_0xf MSTORE8 PUSH17 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP EXP MSTORE8 SLOAD MSTORE COINBASE UNKNOWN_0x49 UNKNOWN_0x4e CREATE SWAP16 SWAP11 DUP6 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP",
  "opcode_entropy": 4.911198711817947,
  "opcode_count": 2473,
  "unique_opcodes": 108,
  "byte_entropy": 5.906305485309522,
  "byte_0x": 0.00025150905432595576,
  "byte_60": 0.09934607645875251,
  "byte_a0": 0.006287726358148894,
  "byte_40": 0.01358148893360161,
  "byte_52": 0.03194164989939638,
  "byte_51": 0.011317907444668008,
  "byte_62": 0.01936619718309859,
  "byte_00": 0.11443661971830986,
  "byte_0e": 0.0007545271629778672,
  "byte_67": 0.0012575452716297787,
  "byte_38": 0.0005030181086519115,
  "byte_03": 0.017605633802816902,
  "byte_80": 0.023641851106639838,
  "byte_83": 0.009305835010060362,
  "byte_39": 0.001006036217303823,
  "byte_81": 0.023390342052313884,
  "byte_01": 0.0505533199195171,
  "byte_90": 0.027414486921529174,
  "byte_26": 0.0007545271629778672,
  "byte_91": 0.011820925553319919,
  "byte_a4": 0.0005030181086519115,
  "byte_56": 0.023641851106639838,
  "byte_5b": 0.03420523138832998,
  "byte_0d": 0.0005030181086519115,
  "byte_20": 0.028420523138832997,
  "byte_6c": 0.0022635814889336017,
  "byte_05": 0.002766599597585513,
  "byte_37": 0.001006036217303823,
  "byte_46": 0.0035211267605633804,
  "byte_16": 0.01006036217303823,
  "byte_e6": 0.00025150905432595576,
  "byte_17": 0.0007545271629778672,
  "byte_44": 0.002766599597585513,
  "byte_55": 0.0030181086519114686,
  "byte_24": 0.003772635814889336,
  "byte_33": 0.002766599597585513,
  "byte_23": 0.0017605633802816902,
  "byte_9c": 0.0007545271629778672,
  "byte_1b": 0.014839034205231388,
  "byte_50": 0.02766599597585513,
  "byte_84": 0.009557344064386318,
  "byte_87": 0.002766599597585513,
  "byte_68": 0.0022635814889336017,
  "byte_92": 0.006036217303822937,
  "byte_02": 0.007545271629778672,
  "byte_6d": 0.0022635814889336017,
  "byte_7e": 0.00025150905432595576,
  "byte_04": 0.012575452716297788,
  "byte_f8": 0.0012575452716297787,
  "byte_7f": 0.004024144869215292,
  "byte_ff": 0.0012575452716297787,
  "byte_63": 0.008048289738430584,
  "byte_15": 0.008551307847082495,
  "byte_b3": 0.0012575452716297787,
  "byte_6b": 0.0005030181086519115,
  "byte_97": 0.0007545271629778672,
  "byte_e1": 0.0005030181086519115,
  "byte_2b": 0.0007545271629778672,
  "byte_66": 0.0022635814889336017,
  "byte_d7": 0.0007545271629778672,
  "byte_2e": 0.00025150905432595576,
  "byte_34": 0.0012575452716297787,
  "byte_d9": 0.0005030181086519115,
  "byte_85": 0.005784708249496982,
  "byte_54": 0.004778672032193159,
  "byte_88": 0.002012072434607646,
  "byte_3b": 0.0005030181086519115,
  "byte_f3": 0.0015090543259557343,
  "byte_57": 0.015090543259557344,
  "byte_fd": 0.006539235412474849,
  "byte_5a": 0.001006036217303823,
  "byte_f1": 0.0007545271629778672,
  "byte_08": 0.005533199195171026,
  "byte_3d": 0.0005030181086519115,
  "byte_3e": 0.0005030181086519115,
  "byte_82": 0.023390342052313884,
  "byte_11": 0.004024144869215292,
  "byte_71": 0.002012072434607646,
  "byte_cd": 0.0030181086519114686,
  "byte_e5": 0.002766599597585513,
  "byte_53": 0.0012575452716297787,
  "byte_74": 0.005030181086519115,
  "byte_61": 0.03822937625754527,
  "byte_6e": 0.003772635814889336,
  "byte_64": 0.007293762575452716,
  "byte_72": 0.007293762575452716,
  "byte_45": 0.002766599597585513,
  "byte_43": 0.002766599597585513,
  "byte_32": 0.0022635814889336017,
  "byte_30": 0.003772635814889336,
  "byte_3a": 0.0022635814889336017,
  "byte_73": 0.005030181086519115,
  "byte_75": 0.001006036217303823,
  "byte_70": 0.002766599597585513,
  "byte_79": 0.00025150905432595576,
  "byte_6f": 0.005784708249496982,
  "byte_65": 0.01006036217303823,
  "byte_7a": 0.002012072434607646,
  "byte_e0": 0.002766599597585513,
  "byte_7d": 0.0012575452716297787,
  "byte_36": 0.0032696177062374247,
  "byte_1f": 0.0032696177062374247,
  "byte_69": 0.0012575452716297787,
  "byte_f4": 0.0005030181086519115,
  "byte_89": 0.0015090543259557343,
  "byte_dd": 0.002766599597585513,
  "byte_f2": 0.0005030181086519115,
  "byte_ad": 0.0005030181086519115,
  "byte_e2": 0.0005030181086519115,
  "byte_c8": 0.0007545271629778672,
  "byte_9b": 0.0007545271629778672,
  "byte_c2": 0.001006036217303823,
  "byte_b0": 0.001006036217303823,
  "byte_fc": 0.001006036217303823,
  "byte_8d": 0.0007545271629778672,
  "byte_aa": 0.0007545271629778672,
  "byte_95": 0.0017605633802816902,
  "byte_a7": 0.0007545271629778672,
  "byte_c4": 0.0005030181086519115,
  "byte_a1": 0.0007545271629778672,
  "byte_28": 0.0007545271629778672,
  "byte_f5": 0.001006036217303823,
  "byte_4d": 0.0007545271629778672,
  "byte_ef": 0.0007545271629778672,
  "byte_a3": 0.0007545271629778672,
  "byte_7b": 0.0015090543259557343,
  "byte_e3": 0.0005030181086519115,
  "byte_9f": 0.001006036217303823,
  "byte_ea": 0.001006036217303823,
  "byte_10": 0.0032696177062374247,
  "byte_ba": 0.00025150905432595576,
  "byte_19": 0.0015090543259557343,
  "byte_12": 0.0025150905432595573,
  "byte_25": 0.001006036217303823,
  "byte_42": 0.0007545271629778672,
  "byte_3f": 0.00025150905432595576,
  "byte_86": 0.002766599597585513,
  "byte_9a": 0.0007545271629778672,
  "byte_96": 0.001006036217303823,
  "byte_bd": 0.0005030181086519115,
  "byte_d5": 0.00025150905432595576,
  "byte_8a": 0.0005030181086519115,
  "byte_13": 0.0005030181086519115,
  "byte_fa": 0.00025150905432595576,
  "byte_09": 0.001006036217303823,
  "byte_94": 0.002012072434607646,
  "byte_14": 0.004778672032193159,
  "byte_21": 0.00025150905432595576,
  "byte_93": 0.0035211267605633804,
  "byte_ab": 0.00025150905432595576,
  "byte_4e": 0.0015090543259557343,
  "byte_48": 0.0015090543259557343,
  "byte_1c": 0.001006036217303823,
  "byte_1a": 0.00025150905432595576,
  "byte_22": 0.0012575452716297787,
  "byte_41": 0.0007545271629778672,
  "byte_fe": 0.0005030181086519115,
  "byte_a9": 0.0005030181086519115,
  "byte_35": 0.001006036217303823,
  "byte_31": 0.0007545271629778672,
  "byte_58": 0.001006036217303823,
  "byte_d8": 0.001006036217303823,
  "byte_bb": 0.0005030181086519115,
  "byte_ed": 0.0005030181086519115,
  "byte_af": 0.00025150905432595576,
  "byte_06": 0.0012575452716297787,
  "byte_de": 0.00025150905432595576,
  "byte_ae": 0.00025150905432595576,
  "byte_5e": 0.0005030181086519115,
  "byte_cc": 0.00025150905432595576,
  "byte_18": 0.0005030181086519115,
  "byte_b8": 0.00025150905432595576,
  "byte_3c": 0.00025150905432595576,
  "byte_b6": 0.0007545271629778672,
  "byte_e8": 0.0007545271629778672,
  "byte_c3": 0.0012575452716297787,
  "byte_07": 0.006539235412474849,
  "byte_df": 0.0012575452716297787,
  "byte_da": 0.00025150905432595576,
  "byte_0f": 0.0005030181086519115,
  "byte_4c": 0.00025150905432595576,
  "byte_8c": 0.0005030181086519115,
  "byte_27": 0.0005030181086519115,
  "byte_f7": 0.001006036217303823,
  "byte_8b": 0.0007545271629778672,
  "byte_9d": 0.00025150905432595576,
  "byte_78": 0.0005030181086519115,
  "byte_77": 0.0007545271629778672,
  "byte_c0": 0.0007545271629778672,
  "byte_5c": 0.0005030181086519115,
  "byte_1e": 0.0022635814889336017,
  "byte_1d": 0.0005030181086519115,
  "byte_76": 0.0005030181086519115,
  "byte_f0": 0.0012575452716297787,
  "byte_eb": 0.00025150905432595576,
  "byte_ec": 0.0005030181086519115,
  "byte_d1": 0.00025150905432595576,
  "byte_4f": 0.00025150905432595576,
  "byte_b2": 0.00025150905432595576,
  "byte_29": 0.0005030181086519115,
  "byte_0a": 0.0007545271629778672,
  "byte_c7": 0.00025150905432595576,
  "byte_b9": 0.0005030181086519115,
  "byte_bc": 0.0005030181086519115,
  "byte_d0": 0.0005030181086519115,
  "byte_d6": 0.00025150905432595576,
  "byte_47": 0.0005030181086519115,
  "byte_98": 0.00025150905432595576,
  "byte_bf": 0.00025150905432595576,
  "byte_f9": 0.0005030181086519115,
  "byte_c6": 0.0007545271629778672,
  "byte_a2": 0.00025150905432595576,
  "byte_a6": 0.00025150905432595576,
  "byte_2d": 0.0007545271629778672,
  "byte_b1": 0.00025150905432595576,
  "byte_c5": 0.00025150905432595576,
  "byte_2c": 0.00025150905432595576,
  "byte_d3": 0.00025150905432595576,
  "byte_c1": 0.00025150905432595576,
  "byte_a5": 0.00025150905432595576,
  "byte_cb": 0.00025150905432595576,
  "byte_49": 0.00025150905432595576,
  "num_nodes": 5,
  "num_edges": 4,
  "avg_degree": 1.6,
  "density": 0.2,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 5,
  "event_nums": 14,
  "creation_block": 12652354,
  "creation_timestamp": 1623938359,
  "life_time": 3560.0,
  "duration_seconds": 46900.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 6,
  "num_buyers": 2,
  "num_sellers": 4,
  "num_creator_transfers": 1,
  "buy_amt": 1e+17,
  "sell_amt": 1e+17,
  "avg_value": 3.3333333333333332e+16,
  "txn_per_block": 0.0014040999719180005,
  "avg_gas_limit": 357970.0,
  "std_gas_limit": 365624.76333312,
  "avg_gas_used": 163947.6,
  "std_gas_used": 260633.56633219752,
  "avg_gas_price": 16000000000.0,
  "std_gas_price": 9939818911.831343,
  "transfer_num": 1,
  "approve_num": 2,
  "timeline_sequence": [
    [
      12652354,
      1623938359,
      281,
      24,
      100000000000000000,
      889649,
      28000000000,
      0,
      1,
      1872976,
      684346,
      10478048
    ],
    [
      12652678,
      1623943044,
      283,
      132,
      0,
      77545,
      25000000000,
      0,
      1,
      10979646,
      36697,
      10477724
    ],
    [
      12655877,
      1623984653,
      6,
      255,
      0,
      55875,
      13000000000,
      0,
      1,
      13837966,
      46563,
      10474525
    ],
    [
      12655914,
      1623985259,
      118,
      354,
      0,
      55875,
      14000000000,
      0,
      1,
      13624492,
      46563,
      10474488
    ],
    [
      12652354,
      1623938359,
      0,
      0,
      100000000000000000,
      710906,
      0,
      0,
      0,
      0,
      5569,
      0
    ]
  ],
  "sourcecode": "// SPDX-License-Identifier: MIT\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n\npragma solidity ^0.8.0;\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The defaut value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        _approve(sender, _msgSender(), currentAllowance - amount);\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[sender] = senderBalance - amount;\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        _balances[account] = accountBalance - amount;\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n\n// File: contracts/token/ERC20/behaviours/ERC20Decimals.sol\n\n\n\npragma solidity ^0.8.0;\n\n\n/**\n * @title ERC20Decimals\n * @dev Implementation of the ERC20Decimals. Extension of {ERC20} that adds decimals storage slot.\n */\nabstract contract ERC20Decimals is ERC20 {\n    uint8 private immutable _decimals;\n\n    /**\n     * @dev Sets the value of the `decimals`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor(uint8 decimals_) {\n        _decimals = decimals_;\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n}\n\n// File: contracts/service/ServicePayer.sol\n\n\n\npragma solidity ^0.8.0;\n\ninterface IPayable {\n    function pay(string memory serviceName) external payable;\n}\n\n/**\n * @title ServicePayer\n * @dev Implementation of the ServicePayer\n */\nabstract contract ServicePayer {\n    constructor(address payable receiver, string memory serviceName) payable {\n        IPayable(receiver).pay{value: msg.value}(serviceName);\n    }\n}\n\n// File: contracts/token/ERC20/StandardERC20.sol\n\n\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @title StandardERC20\n * @dev Implementation of the StandardERC20\n */\ncontract StandardERC20 is ERC20Decimals, ServicePayer {\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint8 decimals_,\n        uint256 initialBalance_,\n        address payable feeReceiver_\n    ) payable ERC20(name_, symbol_) ERC20Decimals(decimals_) ServicePayer(feeReceiver_, \"StandardERC20\") {\n        require(initialBalance_ > 0, \"StandardERC20: supply cannot be zero\");\n\n        _mint(_msgSender(), initialBalance_);\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return super.decimals();\n    }\n}\n"
}