{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH1 SHR DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH2 CALLDATASIZE PUSH1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH1 SLOAD JUMPDEST PUSH1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH2 PUSH2 CALLDATASIZE PUSH1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH1 SLOAD PUSH2 JUMP JUMPDEST PUSH2 PUSH2 CALLDATASIZE PUSH1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH2 PUSH2 CALLDATASIZE PUSH1 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP2 SWAP1 MSTORE PUSH1 SWAP1 SHA3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH2 CALLDATASIZE PUSH1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH2 PUSH2 CALLDATASIZE PUSH1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH2 PUSH2 CALLDATASIZE PUSH1 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB SWAP2 DUP3 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SHA3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 PUSH1 DUP1 SLOAD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP3 DUP1 SLOAD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 ADD SWAP1 PUSH1 ADD DUP1 DUP4 GT PUSH2 JUMPI DUP3 SWAP1 SUB PUSH1 AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 PUSH2 CALLER DUP5 DUP5 PUSH2 JUMP JUMPDEST POP PUSH1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH2 DUP5 DUP5 DUP5 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP5 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SHA3 SLOAD DUP3 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH8 PUSH1 SHL PUSH1 DUP3 ADD MSTORE PUSH1 ADD JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 DUP6 CALLER PUSH2 DUP7 DUP6 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST POP PUSH1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 SHA3 SLOAD SWAP1 SWAP2 PUSH2 SWAP2 DUP6 SWAP1 PUSH2 SWAP1 DUP7 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 DUP1 SLOAD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 SHA3 SLOAD DUP3 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH5 PUSH1 SHL PUSH1 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH2 CALLER DUP6 PUSH2 DUP7 DUP6 PUSH2 JUMP JUMPDEST POP PUSH1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 PUSH2 CALLER DUP5 DUP5 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND PUSH2 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 DUP1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH4 PUSH1 SHL PUSH1 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND PUSH2 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH2 PUSH1 SHL PUSH1 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP4 DUP2 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 SHA3 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 SWAP2 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND PUSH2 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH5 PUSH1 SHL PUSH1 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND PUSH2 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH3 PUSH1 SHL PUSH1 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP2 SWAP1 MSTORE PUSH1 SWAP1 SHA3 SLOAD DUP2 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 MLOAD PUSH3 PUSH1 SHL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH6 PUSH1 SHL PUSH1 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH2 DUP3 DUP3 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP1 DUP7 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP2 SWAP1 MSTORE PUSH1 DUP1 DUP3 SHA3 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 SHA3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 SWAP1 DUP5 SWAP1 PUSH2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 PUSH1 PUSH1 SHL SUB AND DUP5 PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH32 DUP5 PUSH1 MLOAD PUSH2 SWAP2 DUP2 MSTORE PUSH1 ADD SWAP1 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 ADD MSTORE DUP3 ADD PUSH2 JUMP JUMPDEST POP PUSH1 PUSH1 DUP3 DUP7 ADD ADD MSTORE PUSH1 PUSH1 NOT PUSH1 DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB DUP2 AND DUP2 EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP4 DUP6 SUB SLT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP4 PUSH2 JUMP JUMPDEST SWAP5 PUSH1 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 PUSH1 DUP5 DUP7 SUB SLT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP5 PUSH2 JUMP JUMPDEST SWAP3 POP PUSH2 PUSH1 DUP6 ADD PUSH2 JUMP JUMPDEST SWAP2 POP PUSH1 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 PUSH1 DUP3 DUP5 SUB SLT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP3 PUSH2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP4 DUP6 SUB SLT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 PUSH1 DUP5 ADD PUSH2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 JUMPI PUSH1 DUP3 AND SWAP2 POP JUMPDEST PUSH1 DUP3 LT DUP2 SUB PUSH2 JUMPI PUSH4 PUSH1 SHL PUSH1 MSTORE PUSH1 PUSH1 MSTORE PUSH1 PUSH1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 PUSH1 SHL PUSH1 MSTORE PUSH1 PUSH1 MSTORE PUSH1 PUSH1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP UNKNOWN_0xfe LOG2 PUSH5 UNKNOWN_0x22 SLT SHA3 PUSH17 LOG3 LT EXTCODEHASH UNKNOWN_0xda SWAP12 UNKNOWN_0xf6 JUMP POP UNKNOWN_0x28 INVALID_0x7f",
  "opcode_entropy": 4.6572826553548845,
  "opcode_count": 1351,
  "unique_opcodes": 60,
  "byte_entropy": 5.982876945896207,
  "byte_0x": 0.000441306266548985,
  "byte_60": 0.10635481023830538,
  "byte_80": 0.025154457193292144,
  "byte_40": 0.01412180052956752,
  "byte_52": 0.038834951456310676,
  "byte_34": 0.000441306266548985,
  "byte_15": 0.00617828773168579,
  "byte_61": 0.06266548984995587,
  "byte_00": 0.025154457193292144,
  "byte_10": 0.00441306266548985,
  "byte_57": 0.015445719329214475,
  "byte_fd": 0.00529567519858782,
  "byte_5b": 0.037069726390114736,
  "byte_50": 0.025154457193292144,
  "byte_04": 0.01059135039717564,
  "byte_36": 0.00353045013239188,
  "byte_a9": 0.00088261253309797,
  "byte_35": 0.002206531332744925,
  "byte_e0": 0.00176522506619594,
  "byte_1c": 0.00176522506619594,
  "byte_63": 0.010150044130626656,
  "byte_39": 0.00088261253309797,
  "byte_93": 0.0048543689320388345,
  "byte_51": 0.009708737864077669,
  "byte_11": 0.00264783759929391,
  "byte_71": 0.00176522506619594,
  "byte_14": 0.00617828773168579,
  "byte_01": 0.05472197705207414,
  "byte_70": 0.003089143865842895,
  "byte_a0": 0.00706090026478376,
  "byte_82": 0.02471315092674316,
  "byte_31": 0.00088261253309797,
  "byte_2f": 0.000441306266548985,
  "byte_95": 0.00088261253309797,
  "byte_d8": 0.00176522506619594,
  "byte_9b": 0.001323918799646955,
  "byte_41": 0.00088261253309797,
  "byte_58": 0.00088261253309797,
  "byte_a4": 0.000441306266548985,
  "byte_c2": 0.00088261253309797,
  "byte_d7": 0.00088261253309797,
  "byte_05": 0.00264783759929391,
  "byte_9c": 0.00088261253309797,
  "byte_bb": 0.000441306266548985,
  "byte_73": 0.00794351279788173,
  "byte_dd": 0.00264783759929391,
  "byte_62": 0.006619593998234775,
  "byte_ed": 0.000441306266548985,
  "byte_3e": 0.000441306266548985,
  "byte_86": 0.00353045013239188,
  "byte_06": 0.002206531332744925,
  "byte_de": 0.000441306266548985,
  "byte_03": 0.017210944395410415,
  "byte_ae": 0.00088261253309797,
  "byte_09": 0.000441306266548985,
  "byte_5e": 0.00176522506619594,
  "byte_a7": 0.00088261253309797,
  "byte_b3": 0.00088261253309797,
  "byte_cc": 0.000441306266548985,
  "byte_18": 0.000441306266548985,
  "byte_16": 0.011032656663724626,
  "byte_0d": 0.00088261253309797,
  "byte_ef": 0.00088261253309797,
  "byte_23": 0.001323918799646955,
  "byte_b8": 0.000441306266548985,
  "byte_72": 0.011915269196822596,
  "byte_3c": 0.00088261253309797,
  "byte_e5": 0.003971756398940865,
  "byte_67": 0.00176522506619594,
  "byte_b6": 0.00088261253309797,
  "byte_bf": 0.000441306266548985,
  "byte_56": 0.03089143865842895,
  "byte_c3": 0.00176522506619594,
  "byte_91": 0.012797881729920565,
  "byte_90": 0.029567519858781994,
  "byte_07": 0.01059135039717564,
  "byte_08": 0.007502206531332745,
  "byte_f3": 0.00264783759929391,
  "byte_df": 0.002206531332744925,
  "byte_da": 0.00088261253309797,
  "byte_02": 0.01059135039717564,
  "byte_81": 0.025154457193292144,
  "byte_20": 0.03486319505736982,
  "byte_54": 0.00617828773168579,
  "byte_0f": 0.000441306266548985,
  "byte_68": 0.00264783759929391,
  "byte_2a": 0.00088261253309797,
  "byte_1e": 0.001323918799646955,
  "byte_3d": 0.000441306266548985,
  "byte_1b": 0.017210944395410415,
  "byte_55": 0.00176522506619594,
  "byte_6e": 0.00529567519858782,
  "byte_64": 0.01059135039717564,
  "byte_ff": 0.00088261253309797,
  "byte_94": 0.003089143865842895,
  "byte_fa": 0.001323918799646955,
  "byte_83": 0.0088261253309797,
  "byte_ce": 0.00088261253309797,
  "byte_2d": 0.001323918799646955,
  "byte_1f": 0.002206531332744925,
  "byte_92": 0.00617828773168579,
  "byte_47": 0.00088261253309797,
  "byte_33": 0.00353045013239188,
  "byte_84": 0.01323918799646955,
  "byte_0c": 0.00088261253309797,
  "byte_75": 0.001323918799646955,
  "byte_30": 0.003971756398940865,
  "byte_46": 0.003089143865842895,
  "byte_cd": 0.003089143865842895,
  "byte_28": 0.001323918799646955,
  "byte_24": 0.0048543689320388345,
  "byte_7f": 0.0048543689320388345,
  "byte_45": 0.003089143865842895,
  "byte_43": 0.00353045013239188,
  "byte_32": 0.003089143865842895,
  "byte_3a": 0.003089143865842895,
  "byte_74": 0.00529567519858782,
  "byte_66": 0.003089143865842895,
  "byte_65": 0.014563106796116505,
  "byte_6d": 0.00264783759929391,
  "byte_6f": 0.007502206531332745,
  "byte_78": 0.00176522506619594,
  "byte_44": 0.003089143865842895,
  "byte_6c": 0.003089143865842895,
  "byte_77": 0.001323918799646955,
  "byte_c0": 0.00088261253309797,
  "byte_13": 0.000441306266548985,
  "byte_85": 0.006619593998234775,
  "byte_0e": 0.001323918799646955,
  "byte_7d": 0.002206531332744925,
  "byte_87": 0.00088261253309797,
  "byte_e6": 0.000441306266548985,
  "byte_25": 0.001323918799646955,
  "byte_7a": 0.002206531332744925,
  "byte_f6": 0.00353045013239188,
  "byte_f5": 0.001323918799646955,
  "byte_76": 0.00088261253309797,
  "byte_cf": 0.001323918799646955,
  "byte_22": 0.001323918799646955,
  "byte_f0": 0.000441306266548985,
  "byte_8c": 0.000441306266548985,
  "byte_e1": 0.000441306266548985,
  "byte_eb": 0.000441306266548985,
  "byte_ec": 0.000441306266548985,
  "byte_d1": 0.000441306266548985,
  "byte_4f": 0.000441306266548985,
  "byte_42": 0.000441306266548985,
  "byte_f7": 0.000441306266548985,
  "byte_b2": 0.000441306266548985,
  "byte_29": 0.000441306266548985,
  "byte_0a": 0.000441306266548985,
  "byte_c8": 0.001323918799646955,
  "byte_c7": 0.000441306266548985,
  "byte_b9": 0.000441306266548985,
  "byte_a3": 0.00176522506619594,
  "byte_e8": 0.00088261253309797,
  "byte_26": 0.000441306266548985,
  "byte_d0": 0.000441306266548985,
  "byte_f2": 0.000441306266548985,
  "byte_ad": 0.000441306266548985,
  "byte_e2": 0.000441306266548985,
  "byte_69": 0.00088261253309797,
  "byte_b0": 0.000441306266548985,
  "byte_fc": 0.000441306266548985,
  "byte_37": 0.000441306266548985,
  "byte_8d": 0.000441306266548985,
  "byte_aa": 0.000441306266548985,
  "byte_2b": 0.000441306266548985,
  "byte_f1": 0.000441306266548985,
  "byte_c4": 0.000441306266548985,
  "byte_a1": 0.000441306266548985,
  "byte_5a": 0.000441306266548985,
  "byte_4d": 0.000441306266548985,
  "byte_19": 0.00088261253309797,
  "byte_12": 0.002206531332744925,
  "byte_8e": 0.000441306266548985,
  "byte_b1": 0.000441306266548985,
  "byte_ba": 0.000441306266548985,
  "byte_ea": 0.000441306266548985,
  "byte_4e": 0.00088261253309797,
  "byte_48": 0.00088261253309797,
  "byte_7b": 0.00088261253309797,
  "byte_fe": 0.000441306266548985,
  "byte_a2": 0.000441306266548985,
  "byte_7c": 0.000441306266548985,
  "byte_2e": 0.000441306266548985,
  "byte_4b": 0.000441306266548985,
  "byte_bd": 0.000441306266548985,
  "byte_9f": 0.000441306266548985,
  "byte_3f": 0.000441306266548985,
  "byte_d6": 0.000441306266548985,
  "byte_a6": 0.000441306266548985,
  "num_nodes": 121,
  "num_edges": 61,
  "avg_degree": 1.0082644628099173,
  "density": 0.004201101928374655,
  "connected_components": 70,
  "avg_clustering": 0.011019283746556472,
  "timeline_sequence": [],
  "sourcecode": "// https://t.me/TheApeProtocol\n\n// SPDX-License-Identifier: MIT\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint256);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n\npragma solidity ^0.8.0;\n\n\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n\npragma solidity ^0.8.0;\n\n\n\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n    uint256 private _decimals;\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The defaut value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_,uint256 initialBalance_,uint256 decimals_,address tokenOwner) {\n        _name = name_;\n        _symbol = symbol_;\n        _totalSupply = initialBalance_* 10**decimals_;\n        _balances[tokenOwner] = _totalSupply;\n        _decimals = decimals_;\n        emit Transfer(address(0), tokenOwner, _totalSupply);\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint256) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        _approve(sender, _msgSender(), currentAllowance - amount);\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n\n        return true;\n    }\n\n\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[sender] = senderBalance - amount;\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n    }\n\n\n\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n}\n\n\n\n\n\npragma solidity ^0.8.0;\n\n\n\n\ncontract TheApeProtocol is ERC20 {\n    constructor(\n       string memory name_,\n        string memory symbol_,\n        uint256 decimals_,\n        uint256 initialBalance_,\n        address tokenOwner_,\n        address payable feeReceiver_\n    ) payable ERC20(name_, symbol_,initialBalance_,decimals_,tokenOwner_) {\n        payable(feeReceiver_).transfer(msg.value);\n    }\n}"
}