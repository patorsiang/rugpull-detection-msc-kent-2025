{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE PUSH8 PUSH1 NOT PUSH3 SWAP2 SWAP1 PUSH3 JUMP JUMPDEST PUSH1 NOT PUSH3 SWAP2 SWAP1 PUSH3 JUMP JUMPDEST PUSH1 SSTORE PUSH1 PUSH1 SSTORE PUSH1 PUSH1 SSTORE PUSH1 PUSH1 SSTORE PUSH1 PUSH1 SSTORE PUSH1 SLOAD PUSH1 SSTORE PUSH1 SLOAD PUSH1 SSTORE PUSH1 SLOAD PUSH1 SSTORE PUSH1 SLOAD PUSH1 SSTORE PUSH20 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH20 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH1 PUSH1 DUP1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH7 PUSH1 SSTORE PUSH7 PUSH1 SSTORE PUSH5 PUSH1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH3 PUSH3 PUSH1 SHL PUSH1 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 DUP1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 AND PUSH1 PUSH20 AND PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 SLOAD PUSH1 PUSH1 PUSH3 PUSH3 PUSH1 SHL PUSH1 SHR JUMP JUMPDEST PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH1 PUSH20 SWAP1 POP DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 AND PUSH4 PUSH1 MLOAD DUP2 PUSH4 AND PUSH1 SHL DUP2 MSTORE PUSH1 ADD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 NOT PUSH1 DUP3 ADD AND DUP3 ADD DUP1 PUSH1 MSTORE POP DUP2 ADD SWAP1 PUSH3 SWAP2 SWAP1 PUSH3 JUMP JUMPDEST PUSH20 AND PUSH4 ADDRESS DUP4 PUSH20 AND PUSH4 PUSH1 MLOAD DUP2 PUSH4 AND PUSH1 SHL DUP2 MSTORE PUSH1 ADD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 NOT PUSH1 DUP3 ADD AND DUP3 ADD DUP1 PUSH1 MSTORE POP DUP2 ADD SWAP1 PUSH3 SWAP2 SWAP1 PUSH3 JUMP JUMPDEST PUSH1 MLOAD DUP4 PUSH4 AND PUSH1 SHL DUP2 MSTORE PUSH1 ADD PUSH3 SWAP3 SWAP2 SWAP1 PUSH3 JUMP JUMPDEST PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 NOT PUSH1 DUP3 ADD AND DUP3 ADD DUP1 PUSH1 MSTORE POP DUP2 ADD SWAP1 PUSH3 SWAP2 SWAP1 PUSH3 JUMP JUMPDEST PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH1 PUSH1 PUSH1 PUSH3 PUSH3 PUSH1 SHL PUSH1 SHR JUMP JUMPDEST PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 PUSH1 PUSH1 ADDRESS PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 PUSH1 PUSH1 PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 PUSH1 PUSH1 PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 PUSH3 PUSH1 SHL PUSH1 SHR JUMP JUMPDEST PUSH20 AND PUSH1 PUSH20 AND PUSH32 PUSH8 PUSH1 MLOAD PUSH3 SWAP2 SWAP1 PUSH3 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 JUMP JUMPDEST PUSH1 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 DUP1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 MSTORE PUSH1 PUSH1 MSTORE PUSH1 PUSH1 REVERT JUMPDEST PUSH1 PUSH3 DUP3 PUSH3 JUMP JUMPDEST SWAP2 POP PUSH3 DUP4 PUSH3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 JUMPI PUSH3 PUSH3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 PUSH1 MSTORE PUSH1 PUSH1 MSTORE PUSH1 PUSH1 REVERT JUMPDEST PUSH1 PUSH3 DUP3 PUSH3 JUMP JUMPDEST SWAP2 POP PUSH3 DUP4 PUSH3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH3 JUMPI PUSH3 PUSH3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH3 DUP3 PUSH3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 DUP2 PUSH3 JUMP JUMPDEST DUP2 EQ PUSH3 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 DUP2 MLOAD SWAP1 POP PUSH3 DUP2 PUSH3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 DUP5 SUB SLT ISZERO PUSH3 JUMPI PUSH3 PUSH3 JUMP JUMPDEST JUMPDEST PUSH1 PUSH3 DUP5 DUP3 DUP6 ADD PUSH3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 DUP2 PUSH3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP PUSH3 PUSH1 DUP4 ADD DUP6 PUSH3 JUMP JUMPDEST PUSH3 PUSH1 DUP4 ADD DUP5 PUSH3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 DUP2 PUSH3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP PUSH3 PUSH1 DUP4 ADD DUP5 PUSH3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 DUP1 PUSH3 PUSH1 CODECOPY PUSH1 RETURN UNKNOWN_0xfe PUSH1 PUSH1 MSTORE PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH1 SHR DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH3 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST CALLDATASIZE PUSH2 JUMPI STOP JUMPDEST PUSH1 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST STOP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND PUSH1 DUP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 JUMPI PUSH1 PUSH1 PUSH1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 MUL PUSH1 ADD ADD MLOAD PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 SWAP1 PUSH2 JUMP JUMPDEST SWAP2 POP POP PUSH2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 PUSH1 MLOAD DUP1 PUSH1 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH32 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 PUSH2 PUSH2 PUSH2 JUMP JUMPDEST DUP5 DUP5 PUSH2 JUMP JUMPDEST PUSH1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 PUSH2 DUP5 DUP5 DUP5 PUSH2 JUMP JUMPDEST PUSH2 DUP5 PUSH2 PUSH2 JUMP JUMPDEST PUSH2 DUP6 PUSH1 MLOAD DUP1 PUSH1 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH2 PUSH1 SWAP2 CODECOPY PUSH1 PUSH1 DUP12 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND PUSH1 DUP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND PUSH1 DUP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND EQ DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND EQ JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SELFBALANCE SWAP1 POP PUSH2 DUP2 PUSH2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 PUSH1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND PUSH1 DUP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 PUSH20 AND PUSH1 DUP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 DUP1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND PUSH1 DUP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 MSTORE DUP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 PUSH1 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND PUSH1 DUP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 MLOAD DUP1 PUSH1 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH32 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND PUSH1 DUP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND PUSH1 DUP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 DUP5 LT ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP5 GT ISZERO JUMPDEST PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP3 GT ISZERO JUMPDEST PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 DUP4 LT ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP4 GT ISZERO JUMPDEST PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 DUP2 LT ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP2 GT ISZERO JUMPDEST PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 PUSH2 PUSH2 PUSH2 JUMP JUMPDEST DUP5 DUP5 PUSH2 JUMP JUMPDEST PUSH1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 MSTORE DUP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 PUSH1 SWAP2 POP SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND EQ DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND EQ JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH2 ADDRESS PUSH2 JUMP JUMPDEST SWAP1 POP PUSH2 DUP2 PUSH2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND PUSH1 DUP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 JUMPI DUP2 PUSH1 PUSH1 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 MUL ADD PUSH1 DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 SWAP1 PUSH2 JUMP JUMPDEST SWAP2 POP POP PUSH2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND PUSH1 DUP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND PUSH1 DUP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 AND PUSH1 DUP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 DUP1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 PUSH20 AND DUP4 PUSH20 AND EQ ISZERO PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP3 PUSH20 AND EQ ISZERO PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 AND DUP4 PUSH20 AND PUSH32 DUP4 PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 PUSH20 AND DUP4 PUSH20 AND EQ ISZERO PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP3 PUSH20 AND EQ ISZERO PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 DUP2 GT PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND DUP4 PUSH20 AND EQ ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND DUP3 PUSH20 AND EQ ISZERO JUMPDEST ISZERO PUSH2 JUMPI PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST PUSH20 AND DUP4 PUSH20 AND EQ PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 SLOAD DUP2 GT ISZERO PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 PUSH1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO JUMPDEST PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND DUP3 PUSH20 AND EQ PUSH2 JUMPI PUSH1 SLOAD DUP2 PUSH2 DUP5 PUSH2 JUMP JUMPDEST PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST LT PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 PUSH2 ADDRESS PUSH2 JUMP JUMPDEST SWAP1 POP PUSH1 PUSH1 SLOAD DUP3 LT ISZERO SWAP1 POP PUSH1 SLOAD DUP3 LT PUSH2 JUMPI PUSH1 SLOAD SWAP2 POP JUMPDEST DUP1 DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND DUP6 PUSH20 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO JUMPDEST ISZERO PUSH2 JUMPI PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 SELFBALANCE SWAP1 POP PUSH1 DUP2 GT ISZERO PUSH2 JUMPI PUSH2 SELFBALANCE PUSH2 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP JUMPDEST PUSH1 PUSH1 SWAP1 POP PUSH1 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND JUMPDEST DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND DUP5 PUSH20 AND EQ ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND DUP4 PUSH20 AND EQ ISZERO JUMPDEST JUMPDEST ISZERO PUSH2 JUMPI PUSH1 SWAP1 POP PUSH2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND DUP5 PUSH20 AND EQ DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND DUP4 PUSH20 AND EQ ISZERO JUMPDEST ISZERO PUSH2 JUMPI PUSH1 SLOAD PUSH1 DUP2 SWAP1 SSTORE POP PUSH1 SLOAD PUSH1 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND DUP4 PUSH20 AND EQ DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND DUP5 PUSH20 AND EQ ISZERO JUMPDEST ISZERO PUSH2 JUMPI PUSH1 SLOAD PUSH1 DUP2 SWAP1 SSTORE POP PUSH1 SLOAD PUSH1 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH2 DUP5 DUP5 DUP5 DUP5 PUSH2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 DUP4 DUP6 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH2 DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 PUSH1 SLOAD DUP3 GT ISZERO PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 PUSH2 PUSH2 JUMP JUMPDEST SWAP1 POP PUSH2 DUP2 DUP5 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 PUSH1 PUSH8 DUP2 GT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 MUL PUSH1 ADD DUP3 ADD PUSH1 MSTORE DUP1 ISZERO PUSH2 JUMPI DUP2 PUSH1 ADD PUSH1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP ADDRESS DUP2 PUSH1 DUP2 MLOAD DUP2 LT PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 MUL PUSH1 ADD ADD SWAP1 PUSH20 AND SWAP1 DUP2 PUSH20 AND DUP2 MSTORE POP POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 PUSH1 MLOAD DUP2 PUSH4 AND PUSH1 SHL DUP2 MSTORE PUSH1 ADD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 NOT PUSH1 DUP3 ADD AND DUP3 ADD DUP1 PUSH1 MSTORE POP DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST DUP2 PUSH1 DUP2 MLOAD DUP2 LT PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 MUL PUSH1 ADD ADD SWAP1 PUSH20 AND SWAP1 DUP2 PUSH20 AND DUP2 MSTORE POP POP PUSH2 ADDRESS PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP5 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 DUP4 PUSH1 DUP5 ADDRESS TIMESTAMP PUSH1 MLOAD DUP7 PUSH4 AND PUSH1 SHL DUP2 MSTORE PUSH1 ADD PUSH2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP POP PUSH1 PUSH1 DUP1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH2 DUP5 DUP5 DUP5 PUSH2 JUMP JUMPDEST DUP1 PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 PUSH2 PUSH2 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 DUP2 DUP4 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 PUSH2 DUP4 DUP4 PUSH1 MLOAD DUP1 PUSH1 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH32 DUP2 MSTORE POP PUSH2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 SLOAD EQ DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 SLOAD EQ JUMPDEST ISZERO PUSH2 JUMPI PUSH2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 DUP2 SWAP1 SSTORE POP PUSH1 SLOAD PUSH1 DUP2 SWAP1 SSTORE POP PUSH1 PUSH1 DUP2 SWAP1 SSTORE POP PUSH1 PUSH1 DUP2 SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP1 PUSH1 DUP1 PUSH2 DUP8 PUSH2 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP PUSH2 DUP7 PUSH1 PUSH1 DUP13 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 PUSH1 DUP12 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH2 DUP6 PUSH1 PUSH1 DUP12 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 PUSH1 DUP11 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH2 DUP2 PUSH2 JUMP JUMPDEST PUSH2 DUP5 DUP4 PUSH2 JUMP JUMPDEST DUP8 PUSH20 AND DUP10 PUSH20 AND PUSH32 DUP6 PUSH1 MLOAD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 DUP2 SWAP1 SSTORE POP PUSH1 SLOAD PUSH1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 PUSH1 SLOAD SWAP1 POP PUSH1 PUSH8 SWAP1 POP PUSH2 PUSH8 PUSH1 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST DUP3 LT ISZERO PUSH2 JUMPI PUSH1 SLOAD PUSH8 SWAP4 POP SWAP4 POP POP POP PUSH2 JUMP JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 DUP4 DUP6 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP1 PUSH1 DUP1 PUSH1 DUP1 PUSH1 PUSH2 DUP11 PUSH1 SLOAD PUSH1 SLOAD PUSH2 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 PUSH2 PUSH2 JUMP JUMPDEST SWAP1 POP PUSH1 DUP1 PUSH1 PUSH2 DUP15 DUP8 DUP8 DUP8 PUSH2 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 DUP3 DUP3 DUP10 DUP10 DUP10 SWAP13 POP SWAP13 POP SWAP13 POP SWAP13 POP SWAP13 POP SWAP13 POP POP POP POP POP POP POP POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH1 PUSH2 DUP4 DUP4 PUSH1 MLOAD DUP1 PUSH1 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH32 DUP2 MSTORE POP PUSH2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP1 DUP3 DUP5 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH2 PUSH2 JUMP JUMPDEST SWAP1 POP PUSH1 PUSH2 DUP3 DUP5 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 POP PUSH2 DUP2 PUSH1 PUSH1 ADDRESS PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 PUSH1 ADDRESS PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 DUP3 PUSH1 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP2 SWAP1 SSTORE POP PUSH2 DUP2 PUSH1 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP1 PUSH2 PUSH1 PUSH2 DUP9 DUP11 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 POP PUSH1 PUSH2 PUSH1 PUSH2 DUP9 DUP12 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 POP PUSH1 PUSH2 DUP3 PUSH2 DUP6 DUP13 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP1 PUSH2 DUP6 DUP10 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 POP PUSH1 PUSH2 DUP7 DUP10 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 POP PUSH1 PUSH2 DUP8 DUP10 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 POP PUSH1 PUSH2 DUP3 PUSH2 DUP6 DUP8 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 POP DUP4 DUP2 DUP5 SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP1 DUP4 EQ ISZERO PUSH2 JUMPI PUSH1 SWAP1 POP PUSH2 JUMP JUMPDEST PUSH1 DUP3 DUP5 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST EQ PUSH2 JUMPI PUSH1 MLOAD PUSH32 DUP2 MSTORE PUSH1 ADD PUSH2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 NOT PUSH1 DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 MSTORE PUSH1 PUSH1 MSTORE PUSH1 PUSH1 REVERT JUMPDEST PUSH2 DUP3 PUSH2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 DUP3 GT OR ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 PUSH2 PUSH2 JUMP JUMPDEST SWAP1 POP PUSH2 DUP3 DUP3 PUSH2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH8 DUP3 GT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 DUP3 MUL SWAP1 POP PUSH1 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH2 DUP3 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST DUP2 EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 DUP2 CALLDATALOAD SWAP1 POP PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH2 PUSH2 DUP5 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 DUP3 ADD SWAP1 POP PUSH1 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 JUMPI DUP1 PUSH2 DUP9 DUP3 PUSH2 JUMP JUMPDEST DUP5 MSTORE PUSH1 DUP5 ADD SWAP4 POP POP PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 DUP3 PUSH1 DUP4 ADD SLT PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 DUP5 DUP3 PUSH1 DUP7 ADD PUSH2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 DUP5 SUB SLT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 DUP3 ADD CALLDATALOAD PUSH8 DUP2 GT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH2 DUP5 DUP3 DUP6 ADD PUSH2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 DUP3 DUP3 MSTORE PUSH1 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 JUMPI PUSH1 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH2 DUP2 DUP6 PUSH2 JUMP JUMPDEST SWAP4 POP PUSH2 DUP2 DUP6 PUSH1 DUP7 ADD PUSH2 JUMP JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 DUP5 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST DUP2 EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 DUP2 CALLDATALOAD SWAP1 POP PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP4 DUP6 SUB SLT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 PUSH2 DUP6 DUP3 DUP7 ADD PUSH2 JUMP JUMPDEST SWAP3 POP POP PUSH1 PUSH2 DUP6 DUP3 DUP7 ADD PUSH2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP PUSH2 PUSH1 DUP4 ADD DUP5 PUSH2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH2 PUSH2 PUSH2 DUP5 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH2 DUP3 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH2 DUP3 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP PUSH2 PUSH1 DUP4 ADD DUP5 PUSH2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP PUSH2 PUSH1 DUP4 ADD DUP5 PUSH2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 PUSH1 DUP5 DUP7 SUB SLT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 PUSH2 DUP7 DUP3 DUP8 ADD PUSH2 JUMP JUMPDEST SWAP4 POP POP PUSH1 PUSH2 DUP7 DUP3 DUP8 ADD PUSH2 JUMP JUMPDEST SWAP3 POP POP PUSH1 PUSH2 DUP7 DUP3 DUP8 ADD PUSH2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 PUSH1 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP PUSH2 PUSH1 DUP4 ADD DUP5 PUSH2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP PUSH2 PUSH1 DUP4 ADD DUP5 PUSH2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 DUP5 SUB SLT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 PUSH2 DUP5 DUP3 DUP6 ADD PUSH2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST DUP2 EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 DUP2 CALLDATALOAD SWAP1 POP PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 DUP5 SUB SLT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 PUSH2 DUP5 DUP3 DUP6 ADD PUSH2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 DUP5 SUB SLT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 PUSH2 DUP5 DUP3 DUP6 ADD PUSH2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP1 PUSH1 DUP6 DUP8 SUB SLT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 PUSH2 DUP8 DUP3 DUP9 ADD PUSH2 JUMP JUMPDEST SWAP5 POP POP PUSH1 PUSH2 DUP8 DUP3 DUP9 ADD PUSH2 JUMP JUMPDEST SWAP4 POP POP PUSH1 PUSH2 DUP8 DUP3 DUP9 ADD PUSH2 JUMP JUMPDEST SWAP3 POP POP PUSH1 PUSH2 DUP8 DUP3 DUP9 ADD PUSH2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 DUP4 PUSH1 DUP5 ADD SLT PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 DUP2 GT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 DUP4 ADD SWAP2 POP DUP4 PUSH1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 PUSH1 DUP5 DUP7 SUB SLT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 DUP5 ADD CALLDATALOAD PUSH8 DUP2 GT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH2 DUP7 DUP3 DUP8 ADD PUSH2 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 PUSH2 DUP7 DUP3 DUP8 ADD PUSH2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP4 DUP6 SUB SLT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 PUSH2 DUP6 DUP3 DUP7 ADD PUSH2 JUMP JUMPDEST SWAP3 POP POP PUSH1 PUSH2 DUP6 DUP3 DUP7 ADD PUSH2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 MSTORE PUSH1 PUSH1 MSTORE PUSH1 PUSH1 REVERT JUMPDEST PUSH32 PUSH1 MSTORE PUSH1 PUSH1 MSTORE PUSH1 PUSH1 REVERT JUMPDEST PUSH1 PUSH2 DUP3 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH32 DUP3 EQ ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH2 DUP3 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP4 PUSH2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 SUB DUP3 GT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH2 DUP3 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP4 PUSH2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 DUP2 MLOAD SWAP1 POP PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 DUP5 SUB SLT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 PUSH2 DUP5 DUP3 DUP6 ADD PUSH2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH2 PUSH2 PUSH2 DUP5 PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 DUP3 DUP3 MSTORE PUSH1 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP2 SWAP1 POP PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 PUSH2 DUP4 DUP4 PUSH2 JUMP JUMPDEST PUSH1 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH2 DUP2 DUP6 PUSH2 JUMP JUMPDEST SWAP4 POP PUSH2 DUP4 PUSH2 JUMP JUMPDEST DUP1 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP2 MLOAD PUSH2 DUP9 DUP3 PUSH2 JUMP JUMPDEST SWAP8 POP PUSH2 DUP4 PUSH2 JUMP JUMPDEST SWAP3 POP POP PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP PUSH2 PUSH1 DUP4 ADD DUP9 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP4 ADD DUP8 PUSH2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 DUP7 PUSH2 JUMP JUMPDEST SWAP1 POP PUSH2 PUSH1 DUP4 ADD DUP6 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP4 ADD DUP5 PUSH2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 PUSH1 MSTORE PUSH1 PUSH1 MSTORE PUSH1 PUSH1 REVERT JUMPDEST PUSH1 PUSH2 DUP3 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP4 PUSH2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH2 DUP3 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP4 PUSH2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 DUP4 ADD MSTORE PUSH2 DUP2 PUSH2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP UNKNOWN_0xfe GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE SHA3 PUSH21 PUSH20 NOT DUP8 UNKNOWN_0x28 DUP13 UNKNOWN_0x4d UNKNOWN_0xc1 UNKNOWN_0xe0 UNKNOWN_0xba UNKNOWN_0xe UNKNOWN_0xe0 UNKNOWN_0x2b UNKNOWN_0xac CALLCODE UNOFFICIAL_SWAP BLOCKHASH PUSH12 PUSH3 PUSH5 STOP ADDMOD EXP STOP CALLER",
  "opcode_entropy": 4.706982782237672,
  "opcode_count": 8931,
  "unique_opcodes": 95,
  "byte_entropy": 5.305430189681718,
  "byte_0x": 5.2684263210579e-05,
  "byte_60": 0.05663558295137242,
  "byte_80": 0.017438491122701648,
  "byte_40": 0.009904641483588852,
  "byte_52": 0.011169063800642748,
  "byte_67": 0.001001001001001001,
  "byte_01": 0.021284442337073915,
  "byte_63": 0.004952320741794426,
  "byte_45": 0.001001001001001001,
  "byte_78": 0.000737579684948106,
  "byte_5d": 0.000421474105684632,
  "byte_8a": 0.000579526895316369,
  "byte_00": 0.10942521468837259,
  "byte_19": 0.002528844634107792,
  "byte_62": 0.004583530899320373,
  "byte_1c": 0.000737579684948106,
  "byte_91": 0.015015015015015015,
  "byte_90": 0.034508192402929246,
  "byte_07": 0.002054686265212581,
  "byte_0d": 0.00105368526421158,
  "byte_56": 0.030398819872504083,
  "byte_5b": 0.04067225119856699,
  "byte_2b": 0.000895632474579843,
  "byte_74": 0.002950318739792424,
  "byte_06": 0.002739581686950108,
  "byte_55": 0.003266424319055898,
  "byte_08": 0.00368789842474053,
  "byte_02": 0.004846952215373268,
  "byte_09": 0.000737579684948106,
  "byte_0a": 0.004162056793635741,
  "byte_04": 0.007586533902323376,
  "byte_0b": 0.00052684263210579,
  "byte_54": 0.005900637479584848,
  "byte_0c": 0.001369790843475054,
  "byte_0e": 0.000948316737790422,
  "byte_0f": 0.000684895421737527,
  "byte_73": 0.01259153890732838,
  "byte_5e": 0.00052684263210579,
  "byte_42": 0.000737579684948106,
  "byte_cd": 0.00052684263210579,
  "byte_d2": 0.000316105579263474,
  "byte_f0": 0.000210737052842316,
  "byte_85": 0.002002002002002002,
  "byte_da": 0.000316105579263474,
  "byte_bb": 0.000316105579263474,
  "byte_20": 0.01585796322638428,
  "byte_4d": 0.000684895421737527,
  "byte_1b": 0.001159053790632738,
  "byte_23": 0.001106369527422159,
  "byte_59": 0.000421474105684632,
  "byte_2d": 0.002054686265212581,
  "byte_12": 0.001633212159527949,
  "byte_61": 0.052473526157736684,
  "byte_81": 0.019177071808650754,
  "byte_ff": 0.21363468731889784,
  "byte_16": 0.014119382540435172,
  "byte_83": 0.007428481112691639,
  "byte_17": 0.002528844634107792,
  "byte_50": 0.03877561772298614,
  "byte_13": 0.000895632474579843,
  "byte_15": 0.01001001001001001,
  "byte_66": 0.00105368526421158,
  "byte_03": 0.007691902428744534,
  "byte_8d": 0.000421474105684632,
  "byte_7e": 0.000210737052842316,
  "byte_a4": 0.000421474105684632,
  "byte_c6": 0.000316105579263474,
  "byte_64": 0.00210737052842316,
  "byte_e8": 0.00052684263210579,
  "byte_d4": 0.00052684263210579,
  "byte_a5": 0.000316105579263474,
  "byte_10": 0.001791264949159686,
  "byte_18": 0.000790263948158685,
  "byte_34": 0.00263421316052895,
  "byte_65": 0.004425478109688636,
  "byte_57": 0.010168062799641747,
  "byte_fd": 0.004794267952162689,
  "byte_a3": 0.000790263948158685,
  "byte_7f": 0.004583530899320373,
  "byte_8b": 0.000474158368895211,
  "byte_e0": 0.001422475106685633,
  "byte_9c": 0.000684895421737527,
  "byte_53": 0.000737579684948106,
  "byte_14": 0.005110373531426163,
  "byte_44": 0.000368789842474053,
  "byte_1f": 0.000895632474579843,
  "byte_d0": 0.000368789842474053,
  "byte_f2": 0.000579526895316369,
  "byte_84": 0.004267425320056899,
  "byte_49": 0.000421474105684632,
  "byte_97": 0.000263421316052895,
  "byte_22": 0.000790263948158685,
  "byte_af": 0.000316105579263474,
  "byte_e3": 0.000368789842474053,
  "byte_b4": 0.000684895421737527,
  "byte_6f": 0.002739581686950108,
  "byte_6b": 0.00052684263210579,
  "byte_51": 0.007533849639112797,
  "byte_7a": 0.00052684263210579,
  "byte_25": 0.001685896422738528,
  "byte_30": 0.003477161371898214,
  "byte_cf": 0.000368789842474053,
  "byte_39": 0.000948316737790422,
  "byte_df": 0.000263421316052895,
  "byte_2c": 0.001843949212370265,
  "byte_ac": 0.000474158368895211,
  "byte_48": 0.000684895421737527,
  "byte_c4": 0.000421474105684632,
  "byte_5a": 0.000684895421737527,
  "byte_86": 0.001264422317053896,
  "byte_fa": 0.000368789842474053,
  "byte_11": 0.002476160370897213,
  "byte_3d": 0.001791264949159686,
  "byte_3e": 0.001791264949159686,
  "byte_82": 0.012433486117696645,
  "byte_37": 0.000842948211369264,
  "byte_c9": 0.000684895421737527,
  "byte_96": 0.000316105579263474,
  "byte_ad": 0.000421474105684632,
  "byte_5c": 0.000263421316052895,
  "byte_46": 0.000263421316052895,
  "byte_9f": 0.000158052789631737,
  "byte_c5": 0.000263421316052895,
  "byte_e4": 0.000316105579263474,
  "byte_92": 0.004583530899320373,
  "byte_87": 0.001264422317053896,
  "byte_f1": 0.000421474105684632,
  "byte_2a": 0.00052684263210579,
  "byte_05": 0.001896633475580844,
  "byte_ab": 0.000158052789631737,
  "byte_dd": 0.000579526895316369,
  "byte_e2": 0.000263421316052895,
  "byte_c8": 0.000263421316052895,
  "byte_9b": 0.000263421316052895,
  "byte_69": 0.001475159369896212,
  "byte_c2": 0.000263421316052895,
  "byte_b0": 0.000158052789631737,
  "byte_68": 0.00105368526421158,
  "byte_fc": 0.000263421316052895,
  "byte_aa": 0.000316105579263474,
  "byte_95": 0.00105368526421158,
  "byte_a7": 0.00052684263210579,
  "byte_a1": 0.000263421316052895,
  "byte_28": 0.000684895421737527,
  "byte_f5": 0.00158052789631737,
  "byte_b3": 0.000210737052842316,
  "byte_ef": 0.000316105579263474,
  "byte_94": 0.001264422317053896,
  "byte_9a": 0.000263421316052895,
  "byte_b7": 0.000368789842474053,
  "byte_33": 0.001896633475580844,
  "byte_4e": 0.000737579684948106,
  "byte_7b": 0.000474158368895211,
  "byte_71": 0.000474158368895211,
  "byte_24": 0.000737579684948106,
  "byte_1a": 0.000737579684948106,
  "byte_27": 0.000474158368895211,
  "byte_3a": 0.001633212159527949,
  "byte_de": 0.000316105579263474,
  "byte_8e": 0.000105368526421158,
  "byte_e1": 0.000210737052842316,
  "byte_f3": 0.001159053790632738,
  "byte_32": 0.001843949212370265,
  "byte_31": 0.001949317738791423,
  "byte_4b": 0.000579526895316369,
  "byte_93": 0.001527843633106791,
  "byte_b1": 0.000263421316052895,
  "byte_89": 0.000632211158526948,
  "byte_41": 0.000316105579263474,
  "byte_c7": 0.000210737052842316,
  "byte_fe": 0.000210737052842316,
  "byte_36": 0.001685896422738528,
  "byte_35": 0.001106369527422159,
  "byte_7d": 0.000474158368895211,
  "byte_1d": 0.000579526895316369,
  "byte_f7": 0.000368789842474053,
  "byte_a2": 0.001211738053843317,
  "byte_a9": 0.000316105579263474,
  "byte_ed": 0.000263421316052895,
  "byte_ea": 0.000474158368895211,
  "byte_d5": 0.000210737052842316,
  "byte_eb": 0.000263421316052895,
  "byte_d7": 0.000684895421737527,
  "byte_cb": 0.000158052789631737,
  "byte_bf": 0.000105368526421158,
  "byte_c3": 0.002054686265212581,
  "byte_8f": 0.000368789842474053,
  "byte_70": 0.00052684263210579,
  "byte_cc": 0.000421474105684632,
  "byte_d1": 0.000158052789631737,
  "byte_c0": 0.000210737052842316,
  "byte_d8": 5.2684263210579e-05,
  "byte_98": 0.000632211158526948,
  "byte_79": 0.001949317738791423,
  "byte_2f": 0.00263421316052895,
  "byte_dc": 0.000632211158526948,
  "byte_3c": 0.001159053790632738,
  "byte_e5": 0.000579526895316369,
  "byte_ec": 0.000210737052842316,
  "byte_d3": 5.2684263210579e-05,
  "byte_a0": 0.001896633475580844,
  "byte_a6": 0.000158052789631737,
  "byte_ce": 0.000368789842474053,
  "byte_bd": 0.000105368526421158,
  "byte_99": 0.000263421316052895,
  "byte_6d": 0.000948316737790422,
  "byte_a8": 0.000158052789631737,
  "byte_f8": 0.000105368526421158,
  "byte_b8": 0.000105368526421158,
  "byte_72": 0.00263421316052895,
  "byte_d6": 0.000263421316052895,
  "byte_2e": 0.002054686265212581,
  "byte_ca": 0.000158052789631737,
  "byte_ba": 0.000368789842474053,
  "byte_ae": 0.000210737052842316,
  "byte_b6": 0.000158052789631737,
  "byte_f6": 0.000263421316052895,
  "byte_1e": 0.000948316737790422,
  "byte_4a": 0.000105368526421158,
  "byte_f4": 0.000210737052842316,
  "byte_7c": 0.000158052789631737,
  "byte_9e": 0.000158052789631737,
  "byte_b9": 0.000210737052842316,
  "byte_db": 0.000158052789631737,
  "byte_21": 0.000684895421737527,
  "byte_38": 0.000737579684948106,
  "byte_8c": 0.000421474105684632,
  "byte_6e": 0.002423476107686634,
  "byte_e9": 0.000210737052842316,
  "byte_f9": 0.000737579684948106,
  "byte_77": 0.00105368526421158,
  "byte_6c": 0.001527843633106791,
  "byte_4c": 0.000263421316052895,
  "byte_75": 0.001159053790632738,
  "byte_88": 0.000790263948158685,
  "byte_9d": 0.000474158368895211,
  "byte_3f": 0.00105368526421158,
  "byte_47": 0.000368789842474053,
  "byte_76": 0.000684895421737527,
  "byte_3b": 0.000790263948158685,
  "byte_4f": 0.00052684263210579,
  "byte_b2": 0.000263421316052895,
  "byte_29": 0.001159053790632738,
  "byte_e6": 5.2684263210579e-05,
  "byte_d9": 0.000158052789631737,
  "byte_bc": 0.000210737052842316,
  "byte_e7": 0.000263421316052895,
  "byte_26": 0.000842948211369264,
  "byte_b5": 0.000474158368895211,
  "byte_fb": 5.2684263210579e-05,
  "byte_5f": 0.000105368526421158,
  "byte_6a": 0.000158052789631737,
  "byte_43": 0.000368789842474053,
  "byte_ee": 5.2684263210579e-05,
  "byte_be": 5.2684263210579e-05,
  "byte_c1": 0.000210737052842316,
  "byte_58": 5.2684263210579e-05,
  "num_nodes": 66,
  "num_edges": 66,
  "avg_degree": 2.0,
  "density": 0.015384615384615385,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 140,
  "event_nums": 309,
  "creation_block": 15766957,
  "creation_timestamp": 1665999131,
  "life_time": 87.0,
  "duration_seconds": 1092.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 67,
  "num_buyers": 2,
  "num_sellers": 66,
  "num_creator_transfers": 33,
  "buy_amt": 1.3307527190198306e+17,
  "sell_amt": 1.3307527190198306e+17,
  "avg_value": 1887592509247986.5,
  "txn_per_block": 1.5909090909090908,
  "avg_gas_limit": 395236.1357142857,
  "std_gas_limit": 685605.9420050497,
  "avg_gas_used": 70680.27857142857,
  "std_gas_used": 549524.2107619627,
  "avg_gas_price": 9990081328.314285,
  "std_gas_price": 10668694668.396957,
  "ownershiptransferred_num": 1,
  "transfer_num": 1,
  "atinversebrah_num": 1,
  "approve_num": 64,
  "settrading_num": 1,
  "setfee_num": 2,
  "setmaxtxnamount_num": 4,
  "setmaxwalletsize_num": 1,
  "timeline_sequence": [
    [
      15766957,
      1665999131,
      0,
      228,
      0,
      6543630,
      9819076794,
      0,
      1,
      21121252,
      6543630,
      7363497
    ],
    [
      15766962,
      1665999191,
      1,
      139,
      0,
      130189,
      13331501455,
      0,
      1,
      16200534,
      82044,
      7363492
    ],
    [
      15766967,
      1665999251,
      2,
      148,
      0,
      56713,
      12250203363,
      0,
      1,
      16142188,
      47261,
      7363487
    ],
    [
      15766988,
      1665999527,
      4,
      78,
      0,
      43470,
      16127632449,
      0,
      1,
      6274083,
      28980,
      7363466
    ],
    [
      15766989,
      1665999539,
      329,
      10,
      0,
      888888,
      23456000000,
      0,
      1,
      860210,
      47261,
      7363465
    ],
    [
      15766989,
      1665999539,
      121,
      11,
      0,
      888888,
      23456000000,
      0,
      1,
      907471,
      47261,
      7363465
    ],
    [
      15766989,
      1665999539,
      123,
      12,
      0,
      888888,
      23456000000,
      0,
      1,
      954732,
      47261,
      7363465
    ],
    [
      15766989,
      1665999539,
      124,
      13,
      0,
      888888,
      23456000000,
      0,
      1,
      1001993,
      47261,
      7363465
    ],
    [
      15766989,
      1665999539,
      116,
      14,
      0,
      888888,
      23456000000,
      0,
      1,
      1049254,
      47261,
      7363465
    ],
    [
      15766989,
      1665999539,
      148,
      30,
      0,
      55926,
      18000000000,
      0,
      1,
      2347219,
      47261,
      7363465
    ],
    [
      15766989,
      1665999539,
      344,
      32,
      0,
      1000000,
      17697877232,
      0,
      1,
      2442993,
      47261,
      7363465
    ],
    [
      15766989,
      1665999539,
      4876,
      33,
      0,
      700000,
      17697877232,
      0,
      1,
      2490254,
      47261,
      7363465
    ],
    [
      15766989,
      1665999539,
      6345,
      34,
      0,
      700000,
      17697877232,
      0,
      1,
      2537515,
      47261,
      7363465
    ],
    [
      15766989,
      1665999539,
      6844,
      35,
      0,
      700000,
      17697877232,
      0,
      1,
      2584776,
      47261,
      7363465
    ],
    [
      15766989,
      1665999539,
      12744,
      36,
      0,
      700000,
      17697877232,
      0,
      1,
      2632037,
      47261,
      7363465
    ],
    [
      15766989,
      1665999539,
      12087,
      37,
      0,
      700000,
      17697877232,
      0,
      1,
      2679298,
      47261,
      7363465
    ],
    [
      15766989,
      1665999539,
      10192,
      38,
      0,
      700000,
      17697877232,
      0,
      1,
      2726559,
      47261,
      7363465
    ],
    [
      15766989,
      1665999539,
      6742,
      39,
      0,
      700000,
      17697877232,
      0,
      1,
      2773820,
      47261,
      7363465
    ],
    [
      15766989,
      1665999539,
      4832,
      40,
      0,
      700000,
      17697877232,
      0,
      1,
      2821081,
      47261,
      7363465
    ],
    [
      15766989,
      1665999539,
      417,
      115,
      0,
      1000000,
      16197877232,
      0,
      1,
      11191887,
      47261,
      7363465
    ],
    [
      15766990,
      1665999551,
      2214,
      28,
      0,
      890000,
      24004529965,
      0,
      1,
      4727738,
      47261,
      7363464
    ],
    [
      15766990,
      1665999551,
      874,
      43,
      0,
      73260,
      18004529965,
      0,
      1,
      5703568,
      47261,
      7363464
    ],
    [
      15766990,
      1665999551,
      341,
      44,
      0,
      800000,
      17504529965,
      0,
      1,
      5750829,
      47261,
      7363464
    ],
    [
      15766991,
      1665999563,
      259,
      10,
      0,
      77623,
      39648234773,
      0,
      1,
      1094246,
      47261,
      7363463
    ],
    [
      15766991,
      1665999563,
      162,
      14,
      0,
      77146,
      26648234773,
      0,
      1,
      1381989,
      47261,
      7363463
    ],
    [
      15766991,
      1665999563,
      2561,
      16,
      0,
      77696,
      24648234773,
      0,
      1,
      1627480,
      47261,
      7363463
    ],
    [
      15766991,
      1665999563,
      244,
      20,
      0,
      772296,
      20648234773,
      0,
      1,
      1948553,
      47261,
      7363463
    ],
    [
      15766991,
      1665999563,
      9,
      26,
      0,
      210000,
      19737607623,
      0,
      1,
      2200595,
      46961,
      7363463
    ],
    [
      15766991,
      1665999563,
      8,
      27,
      0,
      210000,
      19737607623,
      0,
      1,
      2247556,
      46961,
      7363463
    ],
    [
      15766991,
      1665999563,
      9,
      28,
      0,
      210000,
      19737607623,
      0,
      1,
      2294517,
      46961,
      7363463
    ],
    [
      15766991,
      1665999563,
      9,
      29,
      0,
      210000,
      19737607623,
      0,
      1,
      2341478,
      46961,
      7363463
    ],
    [
      15766991,
      1665999563,
      9,
      30,
      0,
      210000,
      19737607623,
      0,
      1,
      2388439,
      46961,
      7363463
    ],
    [
      15766991,
      1665999563,
      9,
      31,
      0,
      210000,
      19737607623,
      0,
      1,
      2435400,
      46961,
      7363463
    ],
    [
      15766991,
      1665999563,
      178,
      34,
      0,
      72563,
      19648234773,
      0,
      1,
      2535151,
      47261,
      7363463
    ],
    [
      15766991,
      1665999563,
      1,
      35,
      0,
      55926,
      19648234773,
      0,
      1,
      2582412,
      47261,
      7363463
    ],
    [
      15766991,
      1665999563,
      1888,
      37,
      0,
      210000,
      19433952121,
      0,
      1,
      2675470,
      46949,
      7363463
    ],
    [
      15766991,
      1665999563,
      207,
      46,
      0,
      55926,
      17648234773,
      0,
      1,
      3198382,
      47261,
      7363463
    ],
    [
      15766991,
      1665999563,
      447,
      47,
      0,
      75413,
      17648234773,
      0,
      1,
      3245643,
      47261,
      7363463
    ],
    [
      15766991,
      1665999563,
      49,
      48,
      0,
      74990,
      17648234773,
      0,
      1,
      3292904,
      47261,
      7363463
    ],
    [
      15766991,
      1665999563,
      77,
      49,
      0,
      77077,
      17648234773,
      0,
      1,
      3340165,
      47261,
      7363463
    ],
    [
      15766991,
      1665999563,
      210,
      50,
      0,
      76435,
      17648234773,
      0,
      1,
      3387426,
      47261,
      7363463
    ],
    [
      15766991,
      1665999563,
      190,
      51,
      0,
      71923,
      17648234773,
      0,
      1,
      3434687,
      47261,
      7363463
    ],
    [
      15766991,
      1665999563,
      176,
      52,
      0,
      77754,
      17648234773,
      0,
      1,
      3481948,
      47261,
      7363463
    ],
    [
      15766991,
      1665999563,
      551,
      53,
      0,
      72895,
      17648234773,
      0,
      1,
      3529209,
      47261,
      7363463
    ],
    [
      15766991,
      1665999563,
      11301,
      56,
      0,
      700000,
      17148234773,
      0,
      1,
      3844273,
      47261,
      7363463
    ],
    [
      15766992,
      1665999575,
      83,
      2,
      0,
      650000,
      35225804951,
      0,
      1,
      123175,
      47261,
      7363462
    ],
    [
      15766992,
      1665999575,
      1763,
      4,
      0,
      750000,
      25000000000,
      0,
      1,
      267140,
      47261,
      7363462
    ],
    [
      15766992,
      1665999575,
      2142,
      5,
      0,
      750000,
      25000000000,
      0,
      1,
      314401,
      47261,
      7363462
    ],
    [
      15766992,
      1665999575,
      334,
      6,
      0,
      750000,
      25000000000,
      0,
      1,
      361662,
      47261,
      7363462
    ],
    [
      15766993,
      1665999587,
      140,
      26,
      0,
      73996,
      16717494061,
      0,
      1,
      4022169,
      47261,
      7363461
    ],
    [
      15766993,
      1665999587,
      75,
      35,
      0,
      75441,
      15817494061,
      0,
      1,
      4708655,
      47261,
      7363461
    ],
    [
      15766993,
      1665999587,
      2186,
      38,
      0,
      56713,
      15717494061,
      0,
      1,
      4823280,
      47261,
      7363461
    ],
    [
      15766996,
      1665999623,
      854,
      32,
      0,
      71861,
      16551535397,
      0,
      1,
      1895442,
      47261,
      7363458
    ],
    [
      15766996,
      1665999623,
      1581,
      88,
      0,
      51987,
      14950000000,
      0,
      1,
      7010290,
      47261,
      7363458
    ],
    [
      15766998,
      1665999647,
      54,
      173,
      0,
      56713,
      13241466079,
      0,
      1,
      17152891,
      47261,
      7363456
    ],
    [
      15766999,
      1665999659,
      56,
      14,
      0,
      94522,
      60000000000,
      0,
      1,
      3036289,
      47261,
      7363455
    ],
    [
      15767000,
      1665999671,
      1488,
      89,
      0,
      56713,
      14065893150,
      0,
      1,
      6920342,
      47261,
      7363454
    ],
    [
      15767002,
      1665999695,
      1135,
      6,
      0,
      56713,
      14360217893,
      0,
      1,
      931055,
      47261,
      7363452
    ],
    [
      15767007,
      1665999767,
      7,
      182,
      0,
      55002,
      13763957008,
      0,
      1,
      19235938,
      36668,
      7363447
    ],
    [
      15767008,
      1665999779,
      6,
      9,
      0,
      146889,
      16000000000,
      0,
      1,
      574008,
      47261,
      7363446
    ],
    [
      15767010,
      1665999803,
      128,
      35,
      0,
      71001,
      15366288256,
      0,
      1,
      2349954,
      47261,
      7363444
    ],
    [
      15767012,
      1665999827,
      8,
      107,
      0,
      43495,
      12690105014,
      0,
      1,
      11473041,
      28997,
      7363442
    ],
    [
      15767013,
      1665999839,
      4605,
      9,
      0,
      73927,
      21736108597,
      0,
      1,
      1851006,
      47261,
      7363441
    ],
    [
      15767013,
      1665999839,
      9,
      146,
      0,
      43461,
      12736108597,
      0,
      1,
      19391577,
      28974,
      7363441
    ],
    [
      15767015,
      1665999863,
      2091,
      9,
      0,
      75107,
      14894471952,
      0,
      1,
      369378,
      47261,
      7363439
    ],
    [
      15767015,
      1665999863,
      54,
      58,
      0,
      56713,
      12894471952,
      0,
      1,
      4971304,
      47261,
      7363439
    ],
    [
      15767018,
      1665999911,
      177,
      4,
      0,
      76677,
      18077068477,
      0,
      1,
      185107,
      47261,
      7363436
    ],
    [
      15767020,
      1665999935,
      1280,
      15,
      0,
      71084,
      21945909904,
      0,
      1,
      1332099,
      47261,
      7363434
    ],
    [
      15767020,
      1665999935,
      190,
      41,
      0,
      74821,
      15945909904,
      0,
      1,
      6039777,
      47261,
      7363434
    ],
    [
      15767020,
      1665999935,
      11,
      69,
      0,
      43405,
      13945909904,
      0,
      1,
      8152015,
      28937,
      7363434
    ],
    [
      15767023,
      1665999971,
      135,
      120,
      0,
      51987,
      12000000000,
      0,
      1,
      9677344,
      47261,
      7363431
    ],
    [
      15767027,
      1666000019,
      12,
      75,
      0,
      59184,
      12466406730,
      0,
      1,
      8240124,
      34656,
      7363427
    ],
    [
      15767029,
      1666000043,
      13,
      73,
      0,
      43513,
      12367557148,
      0,
      1,
      7788591,
      29009,
      7363425
    ],
    [
      15767044,
      1666000223,
      15,
      147,
      0,
      43405,
      11249817138,
      0,
      1,
      11560914,
      28937,
      7363410
    ],
    [
      15766993,
      1665999587,
      0,
      0,
      69341077120101541,
      581332,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15766993,
      1665999587,
      0,
      0,
      69341077120101541,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15766993,
      1665999587,
      0,
      0,
      2134829021253844,
      591597,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15766993,
      1665999587,
      0,
      0,
      2134829021253844,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15766993,
      1665999587,
      0,
      0,
      2581613404842445,
      717146,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15766993,
      1665999587,
      0,
      0,
      2581613404842445,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15766993,
      1665999587,
      0,
      0,
      2440747009344427,
      403558,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15766993,
      1665999587,
      0,
      0,
      2440747009344427,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15766999,
      1665999659,
      0,
      0,
      6979695901552480,
      498932,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15766999,
      1665999659,
      0,
      0,
      6979695901552480,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767001,
      1665999683,
      0,
      0,
      3405936362029303,
      304460,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767001,
      1665999683,
      0,
      0,
      3405936362029303,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767001,
      1665999683,
      0,
      0,
      751389391329989,
      714389,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767001,
      1665999683,
      0,
      0,
      751389391329989,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767001,
      1665999683,
      0,
      0,
      2611706330268163,
      717146,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767001,
      1665999683,
      0,
      0,
      2611706330268163,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767007,
      1665999767,
      0,
      0,
      2455586372952805,
      488679,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767007,
      1665999767,
      0,
      0,
      2455586372952805,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767007,
      1665999767,
      0,
      0,
      2404833991114227,
      498932,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767007,
      1665999767,
      0,
      0,
      2404833991114227,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767009,
      1665999791,
      0,
      0,
      3355889607513875,
      194842,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767009,
      1665999791,
      0,
      0,
      3355889607513875,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767012,
      1665999827,
      0,
      0,
      1436398302810416,
      706814,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767012,
      1665999827,
      0,
      0,
      1436398302810416,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767013,
      1665999839,
      0,
      0,
      2105314339943962,
      722403,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767013,
      1665999839,
      0,
      0,
      2105314339943962,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767013,
      1665999839,
      0,
      0,
      1056519188272732,
      732657,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767013,
      1665999839,
      0,
      0,
      1056519188272732,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767013,
      1665999839,
      0,
      0,
      1003349531281339,
      732657,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767013,
      1665999839,
      0,
      0,
      1003349531281339,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767013,
      1665999839,
      0,
      0,
      954085329229747,
      177917,
      0,
      1,
      0,
      0,
      55,
      0
    ],
    [
      15767013,
      1665999839,
      0,
      0,
      954085329229747,
      2300,
      0,
      1,
      0,
      0,
      0,
      0
    ],
    [
      15767015,
      1665999863,
      0,
      0,
      1701197818768931,
      155927,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767015,
      1665999863,
      0,
      0,
      1701197818768931,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      5584955827122722,
      604345,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      5584955827122722,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      800756497618905,
      355854,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      800756497618905,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      1011006934361728,
      355854,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      1011006934361728,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      966702456140106,
      355854,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      966702456140106,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      925203987568483,
      355865,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      925203987568483,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      896454801772209,
      1581657,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      896454801772209,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      603913068406411,
      1605728,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      603913068406411,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      529004372158880,
      1562490,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      529004372158880,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      431700001544710,
      1626594,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      431700001544710,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      483539589453201,
      1669881,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      483539589453201,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      242129811705427,
      1559103,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      242129811705427,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      656396847655135,
      1556966,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      656396847655135,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      522822276832247,
      1624810,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      522822276832247,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      372268712861823,
      529377,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767020,
      1665999935,
      0,
      0,
      372268712861823,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767032,
      1666000079,
      0,
      0,
      674985026257122,
      266978,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767032,
      1666000079,
      0,
      0,
      674985026257122,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      15767044,
      1666000223,
      0,
      0,
      11653262667913725,
      1658794,
      0,
      0,
      0,
      0,
      55,
      0
    ],
    [
      15767044,
      1666000223,
      0,
      0,
      11653262667913725,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  ],
  "sourcecode": "// SPDX-License-Identifier: Unlicensed\npragma solidity ^0.8.9;\n \nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n}\n \ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n \n    function balanceOf(address account) external view returns (uint256);\n \n    function transfer(address recipient, uint256 amount) external returns (bool);\n \n    function allowance(address owner, address spender) external view returns (uint256);\n \n    function approve(address spender, uint256 amount) external returns (bool);\n \n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n \n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n \ncontract Ownable is Context {\n    address private _owner;\n    address private _previousOwner;\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n \n    constructor() {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n \n    function owner() public view returns (address) {\n        return _owner;\n    }\n \n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n \n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n \n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n \n}\n \nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n \n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n \n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n        return c;\n    }\n \n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n \n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n \n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        return c;\n    }\n}\n \ninterface IUniswapV2Factory {\n    function createPair(address tokenA, address tokenB)\n        external\n        returns (address pair);\n}\n \ninterface IUniswapV2Router02 {\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external;\n \n    function factory() external pure returns (address);\n \n    function WETH() external pure returns (address);\n \n    function addLiquidityETH(\n        address token,\n        uint256 amountTokenDesired,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline\n    )\n        external\n        payable\n        returns (\n            uint256 amountToken,\n            uint256 amountETH,\n            uint256 liquidity\n        );\n}\n \ncontract BLACKLOTUS is Context, IERC20, Ownable {\n \n    using SafeMath for uint256;\n \n    string private constant _name = \"Black Lotus\";\n    string private constant _symbol = \"BL\";\n    uint8 private constant _decimals = 9;\n \n    mapping(address => uint256) private _rOwned;\n    mapping(address => uint256) private _tOwned;\n    mapping(address => mapping(address => uint256)) private _allowances;\n    mapping(address => bool) private _isExcludedFromFee;\n    uint256 private constant MAX = ~uint256(0);\n    uint256 private constant _tTotal = 100000000 * 10**9;\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\n    uint256 private _tFeeTotal;\n    uint256 private _redisFeeOnBuy = 0;  \n    uint256 private _taxFeeOnBuy = 2;  \n    uint256 private _redisFeeOnSell = 0;  \n    uint256 private _taxFeeOnSell = 4;\n \n    //Original Fee\n    uint256 private _redisFee = _redisFeeOnSell;\n    uint256 private _taxFee = _taxFeeOnSell;\n \n    uint256 private _previousredisFee = _redisFee;\n    uint256 private _previoustaxFee = _taxFee;\n \n    mapping(address => bool) public bots; mapping (address => uint256) public _buyMap; \n    address payable private _developmentAddress = payable(0x5e5642cd060Ed2f085DAbb204D1B52231959552D); \n    address payable private _marketingAddress = payable(0x5e5642cd060Ed2f085DAbb204D1B52231959552D);\n \n    IUniswapV2Router02 public uniswapV2Router;\n    address public uniswapV2Pair;\n \n    bool private tradingOpen;\n    bool private inSwap = false;\n    bool private swapEnabled = true;\n \n    uint256 public _maxTxAmount = 1000000 * 10**9; \n    uint256 public _maxWalletSize = 1000000 * 10**9; \n    uint256 public _swapTokensAtAmount = 1000 * 10**9;\n \n    event MaxTxAmountUpdated(uint256 _maxTxAmount);\n    modifier lockTheSwap {\n        inSwap = true;\n        _;\n        inSwap = false;\n    }\n \n    constructor() {\n \n        _rOwned[_msgSender()] = _rTotal;\n \n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);//\n        uniswapV2Router = _uniswapV2Router;\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\n            .createPair(address(this), _uniswapV2Router.WETH());\n \n        _isExcludedFromFee[owner()] = true;\n        _isExcludedFromFee[address(this)] = true;\n        _isExcludedFromFee[_developmentAddress] = true;\n        _isExcludedFromFee[_marketingAddress] = true;\n \n        emit Transfer(address(0), _msgSender(), _tTotal);\n    }\n \n    function name() public pure returns (string memory) {\n        return _name;\n    }\n \n    function symbol() public pure returns (string memory) {\n        return _symbol;\n    }\n \n    function decimals() public pure returns (uint8) {\n        return _decimals;\n    }\n \n    function totalSupply() public pure override returns (uint256) {\n        return _tTotal;\n    }\n \n    function balanceOf(address account) public view override returns (uint256) {\n        return tokenFromReflection(_rOwned[account]);\n    }\n \n    function transfer(address recipient, uint256 amount)\n        public\n        override\n        returns (bool)\n    {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n \n    function allowance(address owner, address spender)\n        public\n        view\n        override\n        returns (uint256)\n    {\n        return _allowances[owner][spender];\n    }\n \n    function approve(address spender, uint256 amount)\n        public\n        override\n        returns (bool)\n    {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n \n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            _msgSender(),\n            _allowances[sender][_msgSender()].sub(\n                amount,\n                \"ERC20: transfer amount exceeds allowance\"\n            )\n        );\n        return true;\n    }\n \n    function tokenFromReflection(uint256 rAmount)\n        private\n        view\n        returns (uint256)\n    {\n        require(\n            rAmount <= _rTotal,\n            \"Amount must be less than total reflections\"\n        );\n        uint256 currentRate = _getRate();\n        return rAmount.div(currentRate);\n    }\n \n    function removeAllFee() private {\n        if (_redisFee == 0 && _taxFee == 0) return;\n \n        _previousredisFee = _redisFee;\n        _previoustaxFee = _taxFee;\n \n        _redisFee = 0;\n        _taxFee = 0;\n    }\n \n    function restoreAllFee() private {\n        _redisFee = _previousredisFee;\n        _taxFee = _previoustaxFee;\n    }\n \n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) private {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n \n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) private {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n        require(amount > 0, \"Transfer amount must be greater than zero\");\n \n        if (from != owner() && to != owner()) {\n \n            //Trade start check\n            if (!tradingOpen) {\n                require(from == owner(), \"TOKEN: This account cannot send tokens until trading is enabled\");\n            }\n \n            require(amount <= _maxTxAmount, \"TOKEN: Max Transaction Limit\");\n            require(!bots[from] && !bots[to], \"TOKEN: Your account is blacklisted!\");\n \n            if(to != uniswapV2Pair) {\n                require(balanceOf(to) + amount < _maxWalletSize, \"TOKEN: Balance exceeds wallet size!\");\n            }\n \n            uint256 contractTokenBalance = balanceOf(address(this));\n            bool canSwap = contractTokenBalance >= _swapTokensAtAmount;\n \n            if(contractTokenBalance >= _maxTxAmount)\n            {\n                contractTokenBalance = _maxTxAmount;\n            }\n \n            if (canSwap && !inSwap && from != uniswapV2Pair && swapEnabled && !_isExcludedFromFee[from] && !_isExcludedFromFee[to]) {\n                swapTokensForEth(contractTokenBalance);\n                uint256 contractETHBalance = address(this).balance;\n                if (contractETHBalance > 0) {\n                    sendETHToFee(address(this).balance);\n                }\n            }\n        }\n \n        bool takeFee = true;\n \n        //Transfer Tokens\n        if ((_isExcludedFromFee[from] || _isExcludedFromFee[to]) || (from != uniswapV2Pair && to != uniswapV2Pair)) {\n            takeFee = false;\n        } else {\n \n            //Set Fee for Buys\n            if(from == uniswapV2Pair && to != address(uniswapV2Router)) {\n                _redisFee = _redisFeeOnBuy;\n                _taxFee = _taxFeeOnBuy;\n            }\n \n            //Set Fee for Sells\n            if (to == uniswapV2Pair && from != address(uniswapV2Router)) {\n                _redisFee = _redisFeeOnSell;\n                _taxFee = _taxFeeOnSell;\n            }\n \n        }\n \n        _tokenTransfer(from, to, amount, takeFee);\n    }\n \n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = uniswapV2Router.WETH();\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\n            tokenAmount,\n            0,\n            path,\n            address(this),\n            block.timestamp\n        );\n    }\n \n    function sendETHToFee(uint256 amount) private {\n        _marketingAddress.transfer(amount);\n    }\n \n    function setTrading(bool _tradingOpen) public onlyOwner {\n        tradingOpen = _tradingOpen;\n    }\n \n    function manualswap() external {\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\n        uint256 contractBalance = balanceOf(address(this));\n        swapTokensForEth(contractBalance);\n    }\n \n    function manualsend() external {\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\n        uint256 contractETHBalance = address(this).balance;\n        sendETHToFee(contractETHBalance);\n    }\n \n    function blockBots(address[] memory bots_) public onlyOwner {\n        for (uint256 i = 0; i < bots_.length; i++) {\n            bots[bots_[i]] = true;\n        }\n    }\n \n    function unblockBot(address notbot) public onlyOwner {\n        bots[notbot] = false;\n    }\n \n    function _tokenTransfer(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bool takeFee\n    ) private {\n        if (!takeFee) removeAllFee();\n        _transferStandard(sender, recipient, amount);\n        if (!takeFee) restoreAllFee();\n    }\n \n    function _transferStandard(\n        address sender,\n        address recipient,\n        uint256 tAmount\n    ) private {\n        (\n            uint256 rAmount,\n            uint256 rTransferAmount,\n            uint256 rFee,\n            uint256 tTransferAmount,\n            uint256 tFee,\n            uint256 tTeam\n        ) = _getValues(tAmount);\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\n        _takeTeam(tTeam);\n        _reflectFee(rFee, tFee);\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n \n    function _takeTeam(uint256 tTeam) private {\n        uint256 currentRate = _getRate();\n        uint256 rTeam = tTeam.mul(currentRate);\n        _rOwned[address(this)] = _rOwned[address(this)].add(rTeam);\n    }\n \n    function _reflectFee(uint256 rFee, uint256 tFee) private {\n        _rTotal = _rTotal.sub(rFee);\n        _tFeeTotal = _tFeeTotal.add(tFee);\n    }\n \n    receive() external payable {}\n \n    function _getValues(uint256 tAmount)\n        private\n        view\n        returns (\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        (uint256 tTransferAmount, uint256 tFee, uint256 tTeam) =\n            _getTValues(tAmount, _redisFee, _taxFee);\n        uint256 currentRate = _getRate();\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) =\n            _getRValues(tAmount, tFee, tTeam, currentRate);\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tTeam);\n    }\n \n    function _getTValues(\n        uint256 tAmount,\n        uint256 redisFee,\n        uint256 taxFee\n    )\n        private\n        pure\n        returns (\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        uint256 tFee = tAmount.mul(redisFee).div(100);\n        uint256 tTeam = tAmount.mul(taxFee).div(100);\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tTeam);\n        return (tTransferAmount, tFee, tTeam);\n    }\n \n    function _getRValues(\n        uint256 tAmount,\n        uint256 tFee,\n        uint256 tTeam,\n        uint256 currentRate\n    )\n        private\n        pure\n        returns (\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        uint256 rAmount = tAmount.mul(currentRate);\n        uint256 rFee = tFee.mul(currentRate);\n        uint256 rTeam = tTeam.mul(currentRate);\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rTeam);\n        return (rAmount, rTransferAmount, rFee);\n    }\n \n    function _getRate() private view returns (uint256) {\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\n        return rSupply.div(tSupply);\n    }\n \n    function _getCurrentSupply() private view returns (uint256, uint256) {\n        uint256 rSupply = _rTotal;\n        uint256 tSupply = _tTotal;\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\n        return (rSupply, tSupply);\n    }\n \n    function setFee(uint256 redisFeeOnBuy, uint256 redisFeeOnSell, uint256 taxFeeOnBuy, uint256 taxFeeOnSell) public onlyOwner {\n        require(redisFeeOnBuy >= 0 && redisFeeOnBuy <= 4, \"Buy rewards must be between 0% and 4%\");\n        require(taxFeeOnBuy >= 0 && taxFeeOnBuy <= 60, \"Buy tax must be between 0% and 20%\");\n        require(redisFeeOnSell >= 0 && redisFeeOnSell <= 4, \"Sell rewards must be between 0% and 4%\");\n        require(taxFeeOnSell >= 0 && taxFeeOnSell <= 100, \"Sell tax must be between 0% and 20%\");\n\n        _redisFeeOnBuy = redisFeeOnBuy;\n        _redisFeeOnSell = redisFeeOnSell;\n        _taxFeeOnBuy = taxFeeOnBuy;\n        _taxFeeOnSell = taxFeeOnSell;\n\n    }\n \n    //Set minimum tokens required to swap.\n    function setMinSwapTokensThreshold(uint256 swapTokensAtAmount) public onlyOwner {\n        _swapTokensAtAmount = swapTokensAtAmount;\n    }\n \n    //Set minimum tokens required to swap.\n    function toggleSwap(bool _swapEnabled) public onlyOwner {\n        swapEnabled = _swapEnabled;\n    }\n \n    //Set maximum transaction\n    function setMaxTxnAmount(uint256 maxTxAmount) public onlyOwner {\n           _maxTxAmount = maxTxAmount;\n        \n    }\n \n    function setMaxWalletSize(uint256 maxWalletSize) public onlyOwner {\n        _maxWalletSize = maxWalletSize;\n    }\n \n    function excludeMultipleAccountsFromFees(address[] calldata accounts, bool excluded) public onlyOwner {\n        for(uint256 i = 0; i < accounts.length; i++) {\n            _isExcludedFromFee[accounts[i]] = excluded;\n        }\n    }\n\n}"
}