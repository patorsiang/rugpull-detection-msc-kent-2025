{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE PUSH2 PUSH1 SSTORE PUSH2 PUSH1 SSTORE PUSH8 PUSH1 SSTORE PUSH2 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH8 MUL NOT AND SWAP1 DUP4 PUSH8 AND MUL OR SWAP1 SSTORE POP PUSH8 PUSH1 SSTORE PUSH2 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH8 MUL NOT AND SWAP1 DUP4 PUSH8 AND MUL OR SWAP1 SSTORE POP PUSH7 PUSH1 SSTORE PUSH9 PUSH1 SSTORE PUSH7 PUSH1 SSTORE PUSH1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 MLOAD PUSH1 DUP1 PUSH2 DUP4 CODECOPY DUP2 ADD PUSH1 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP CALLER PUSH1 DUP1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP PUSH2 DUP1 PUSH2 PUSH1 CODECOPY PUSH1 RETURN STOP PUSH1 PUSH1 MSTORE PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH29 SWAP1 DIV PUSH4 AND DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH8 AND PUSH8 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH8 AND PUSH8 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH8 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH8 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 PUSH1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 DUP2 SWAP1 SSTORE POP PUSH32 DUP3 DUP3 PUSH1 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH32 DUP2 PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 DUP2 PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ DUP1 PUSH2 JUMPI POP PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND ORIGIN PUSH20 AND EQ JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 PUSH1 DUP1 SLOAD SWAP1 POP DUP2 MSTORE PUSH1 ADD PUSH1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD SSTORE PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 DUP1 SLOAD DUP1 PUSH1 ADD DUP3 DUP2 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST SWAP2 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 ADD PUSH1 DUP4 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 DUP2 SWAP1 SSTORE POP PUSH32 DUP2 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP2 LT ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 DUP2 SWAP1 SSTORE POP PUSH32 DUP2 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 DUP2 SWAP1 SSTORE POP PUSH32 DUP2 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH32 DUP2 PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 DUP1 SLOAD SWAP1 POP GT JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 DUP1 SLOAD SWAP1 POP SUB SWAP1 POP PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD DUP2 SWAP1 SSTORE POP PUSH1 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH1 PUSH1 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD SLOAD DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 ADD PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH1 DUP1 SLOAD DUP1 SWAP2 SWAP1 PUSH1 SWAP1 SUB PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST POP PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP1 DUP3 ADD PUSH1 SWAP1 SSTORE PUSH1 DUP3 ADD PUSH1 PUSH2 EXP DUP2 SLOAD SWAP1 PUSH1 MUL NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 SLOAD PUSH1 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH32 DUP2 PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH8 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 DUP2 SWAP1 SSTORE POP PUSH32 DUP2 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 DUP2 PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH8 AND DUP2 JUMP JUMPDEST PUSH1 DUP1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SWAP1 POP JUMPDEST PUSH1 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 PUSH1 MLOAD DUP2 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST GAS CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP DUP1 DUP1 PUSH1 ADD SWAP2 POP POP PUSH2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH2 PUSH2 DUP4 PUSH1 SLOAD PUSH2 JUMP JUMPDEST DUP4 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP2 MUL PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH8 MUL NOT AND SWAP1 DUP4 PUSH8 AND MUL OR SWAP1 SSTORE POP PUSH32 DUP2 PUSH1 MLOAD DUP1 DUP3 PUSH8 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP2 MUL PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH8 MUL NOT AND SWAP1 DUP4 PUSH8 AND MUL OR SWAP1 SSTORE POP PUSH32 DUP2 PUSH1 MLOAD DUP1 DUP3 PUSH8 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH32 DUP2 PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP2 LT ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 DUP2 SWAP1 SSTORE POP PUSH32 DUP2 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 PUSH2 PUSH2 DUP4 PUSH1 SLOAD PUSH2 JUMP JUMPDEST DUP4 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 DUP1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 AND PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH2 PUSH2 PUSH2 DUP6 DUP8 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP5 EQ ISZERO PUSH2 JUMPI PUSH1 SWAP2 POP PUSH2 JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV EQ ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 JUMPI DUP2 DUP4 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 JUMPI DUP2 DUP4 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP2 PUSH1 SWAP1 SSTORE POP PUSH1 ADD PUSH2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 SHA3 UNKNOWN_0xb7 UNKNOWN_0xcd CALLDATASIZE MUL DUP7 PUSH2 UNKNOWN_0xfb UNKNOWN_0x1e UNOFFICIAL_PUSH UNKNOWN_0x27 UNKNOWN_0xd0 UNKNOWN_0x23 UNKNOWN_0xab TIMESTAMP RETURNDATASIZE EXP DELEGATECALL UNKNOWN_0xeb DUP8 PUSH10 STOP UNKNOWN_0x29 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP UNKNOWN_0xcd CALLDATASIZE INVALID_0x73",
  "opcode_entropy": 4.723928187516563,
  "opcode_count": 5390,
  "unique_opcodes": 73,
  "byte_entropy": 4.608660570705189,
  "byte_0x": 7.990411506192568e-05,
  "byte_60": 0.054015181781861765,
  "byte_40": 0.008070315621254494,
  "byte_52": 0.006472233320015981,
  "byte_61": 0.03371953655613264,
  "byte_01": 0.020615261685976827,
  "byte_77": 0.00039952057530962844,
  "byte_0b": 0.0013583699560527367,
  "byte_55": 0.004554534558529764,
  "byte_0c": 0.0021574111066719934,
  "byte_67": 0.0018377946464242908,
  "byte_0d": 0.0016779864163004395,
  "byte_e0": 0.00047942469037155414,
  "byte_b6": 0.00047942469037155414,
  "byte_b3": 0.00039952057530962844,
  "byte_a7": 0.0005593288054334798,
  "byte_64": 0.0009588493807431083,
  "byte_00": 0.038833399920095886,
  "byte_0e": 0.0010387534958050339,
  "byte_10": 0.0017578905313623651,
  "byte_0a": 0.009748302037554933,
  "byte_81": 0.01781861765880943,
  "byte_54": 0.009908110267678785,
  "byte_ff": 0.380663204155014,
  "byte_02": 0.006472233320015981,
  "byte_19": 0.003595685177786656,
  "byte_16": 0.023891330403515782,
  "byte_90": 0.03643627646823811,
  "byte_83": 0.0041550139832201355,
  "byte_17": 0.003915301638034358,
  "byte_50": 0.020615261685976827,
  "byte_0f": 0.0008789452656811826,
  "byte_66": 0.00047942469037155414,
  "byte_b1": 0.00031961646024770274,
  "byte_a2": 0.0005593288054334798,
  "byte_bc": 0.00047942469037155414,
  "byte_2e": 0.00039952057530962844,
  "byte_c5": 0.00023971234518577707,
  "byte_11": 0.0010387534958050339,
  "byte_68": 0.00023971234518577707,
  "byte_5a": 0.0008789452656811826,
  "byte_f1": 0.00039952057530962844,
  "byte_d7": 0.00039952057530962844,
  "byte_8b": 0.0005593288054334798,
  "byte_58": 0.00039952057530962844,
  "byte_c4": 0.00031961646024770274,
  "byte_12": 0.0006392329204954055,
  "byte_a8": 0.00023971234518577707,
  "byte_7b": 0.00015980823012385137,
  "byte_ee": 0.00031961646024770274,
  "byte_53": 0.0006392329204954055,
  "byte_80": 0.02996404314822213,
  "byte_13": 0.0008789452656811826,
  "byte_14": 0.00982820615261686,
  "byte_15": 0.01997602876548142,
  "byte_34": 0.0043947263284059125,
  "byte_e2": 0.00047942469037155414,
  "byte_57": 0.014622453056332401,
  "byte_fd": 0.00926887734718338,
  "byte_5b": 0.024930083899320814,
  "byte_51": 0.007670795045944866,
  "byte_20": 0.010387534958050339,
  "byte_30": 0.0005593288054334798,
  "byte_c2": 0.0005593288054334798,
  "byte_39": 0.00047942469037155414,
  "byte_91": 0.01166600079904115,
  "byte_33": 0.0026368357970435476,
  "byte_73": 0.018777467039552537,
  "byte_03": 0.005273671594087095,
  "byte_04": 0.009588493807431082,
  "byte_05": 0.0018377946464242908,
  "byte_2f": 0.00023971234518577707,
  "byte_93": 0.0005593288054334798,
  "byte_f3": 0.002556931681981622,
  "byte_36": 0.00039952057530962844,
  "byte_7d": 0.00023971234518577707,
  "byte_35": 0.0026368357970435476,
  "byte_7c": 0.0005593288054334798,
  "byte_63": 0.0051937674790251695,
  "byte_07": 0.0014382740711146624,
  "byte_ec": 0.00031961646024770274,
  "byte_4b": 0.0005593288054334798,
  "byte_42": 0.0007191370355573312,
  "byte_82": 0.005033959248901318,
  "byte_f9": 0.00031961646024770274,
  "byte_da": 0.00023971234518577707,
  "byte_1d": 0.00047942469037155414,
  "byte_29": 0.0005593288054334798,
  "byte_6e": 0.00047942469037155414,
  "byte_8d": 0.0006392329204954055,
  "byte_3c": 0.00047942469037155414,
  "byte_25": 0.0007990411506192569,
  "byte_e3": 0.0008789452656811826,
  "byte_2b": 0.0006392329204954055,
  "byte_2a": 0.0008789452656811826,
  "byte_70": 0.00047942469037155414,
  "byte_d1": 0.0007990411506192569,
  "byte_e7": 0.00031961646024770274,
  "byte_ca": 0.00047942469037155414,
  "byte_32": 0.0006392329204954055,
  "byte_f2": 0.0005593288054334798,
  "byte_84": 0.0009588493807431083,
  "byte_26": 0.001518178186176588,
  "byte_46": 0.00023971234518577707,
  "byte_85": 0.00031961646024770274,
  "byte_fb": 0.00039952057530962844,
  "byte_5f": 0.00031961646024770274,
  "byte_d4": 0.00047942469037155414,
  "byte_a4": 0.00039952057530962844,
  "byte_9a": 0.0005593288054334798,
  "byte_37": 0.00031961646024770274,
  "byte_c6": 0.0005593288054334798,
  "byte_d6": 0.0006392329204954055,
  "byte_a5": 0.00023971234518577707,
  "byte_3f": 0.00039952057530962844,
  "byte_3a": 0.0007191370355573312,
  "byte_ce": 0.00023971234518577707,
  "byte_41": 0.00031961646024770274,
  "byte_43": 0.00023971234518577707,
  "byte_08": 0.0016779864163004395,
  "byte_47": 0.00039952057530962844,
  "byte_28": 0.0006392329204954055,
  "byte_1c": 0.0013583699560527367,
  "byte_49": 0.0005593288054334798,
  "byte_ab": 0.00039952057530962844,
  "byte_86": 0.0007990411506192569,
  "byte_b7": 0.0005593288054334798,
  "byte_a9": 0.00047942469037155414,
  "byte_8e": 0.0005593288054334798,
  "byte_4c": 0.00047942469037155414,
  "byte_62": 0.00031961646024770274,
  "byte_fc": 0.00031961646024770274,
  "byte_e4": 0.00031961646024770274,
  "byte_06": 0.0011985617259288853,
  "byte_ba": 0.00047942469037155414,
  "byte_aa": 0.00039952057530962844,
  "byte_5c": 0.00023971234518577707,
  "byte_97": 0.0005593288054334798,
  "byte_bb": 0.00031961646024770274,
  "byte_1f": 0.0007191370355573312,
  "byte_72": 0.00015980823012385137,
  "byte_69": 0.0005593288054334798,
  "byte_1a": 0.0005593288054334798,
  "byte_c9": 0.00023971234518577707,
  "byte_6a": 0.00031961646024770274,
  "byte_96": 0.00023971234518577707,
  "byte_3e": 0.00023971234518577707,
  "byte_d5": 0.00047942469037155414,
  "byte_ea": 0.0007191370355573312,
  "byte_6b": 0.0006392329204954055,
  "byte_de": 0.00039952057530962844,
  "byte_56": 0.01054734318817419,
  "byte_cb": 0.00031961646024770274,
  "byte_59": 0.00047942469037155414,
  "byte_5e": 0.00039952057530962844,
  "byte_76": 0.00023971234518577707,
  "byte_dd": 0.00023971234518577707,
  "byte_f6": 0.00023971234518577707,
  "byte_c8": 0.00023971234518577707,
  "byte_8f": 0.00031961646024770274,
  "byte_09": 0.0019176987614862165,
  "byte_92": 0.0005593288054334798,
  "byte_21": 0.0006392329204954055,
  "byte_95": 0.00039952057530962844,
  "byte_27": 0.0005593288054334798,
  "byte_99": 0.00039952057530962844,
  "byte_b5": 0.0005593288054334798,
  "byte_9f": 0.00015980823012385137,
  "byte_38": 0.00015980823012385137,
  "byte_ef": 7.990411506192568e-05,
  "byte_f4": 0.00023971234518577707,
  "byte_18": 0.00047942469037155414,
  "byte_9e": 0.00039952057530962844,
  "byte_75": 0.00015980823012385137,
  "byte_a1": 0.0018377946464242908,
  "byte_4e": 0.0005593288054334798,
  "byte_7e": 0.0006392329204954055,
  "byte_c1": 0.00047942469037155414,
  "byte_74": 0.00023971234518577707,
  "byte_a6": 0.00031961646024770274,
  "byte_e5": 0.00047942469037155414,
  "byte_6d": 0.00023971234518577707,
  "byte_8a": 0.00031961646024770274,
  "byte_cf": 0.0007191370355573312,
  "byte_eb": 0.00023971234518577707,
  "byte_48": 0.00039952057530962844,
  "byte_df": 0.00023971234518577707,
  "byte_e1": 0.00047942469037155414,
  "byte_1b": 0.0005593288054334798,
  "byte_db": 7.990411506192568e-05,
  "byte_be": 0.00031961646024770274,
  "byte_78": 0.00031961646024770274,
  "byte_2c": 0.0010387534958050339,
  "byte_e8": 0.00031961646024770274,
  "byte_4f": 0.00039952057530962844,
  "byte_f8": 0.00031961646024770274,
  "byte_3d": 0.0005593288054334798,
  "byte_bf": 0.00039952057530962844,
  "byte_fa": 0.0007191370355573312,
  "byte_e6": 0.00039952057530962844,
  "byte_9c": 0.00031961646024770274,
  "byte_24": 0.00047942469037155414,
  "byte_31": 7.990411506192568e-05,
  "byte_5d": 0.00047942469037155414,
  "byte_2d": 0.0018377946464242908,
  "byte_a3": 0.0007191370355573312,
  "byte_b0": 0.00015980823012385137,
  "byte_b8": 0.00023971234518577707,
  "byte_89": 0.00047942469037155414,
  "byte_d9": 0.00031961646024770274,
  "byte_8c": 0.00047942469037155414,
  "byte_ad": 0.00031961646024770274,
  "byte_6c": 0.00031961646024770274,
  "byte_d3": 0.00031961646024770274,
  "byte_1e": 0.0006392329204954055,
  "byte_71": 0.00023971234518577707,
  "byte_22": 0.0005593288054334798,
  "byte_b4": 0.00047942469037155414,
  "byte_bd": 0.00039952057530962844,
  "byte_ed": 0.00031961646024770274,
  "byte_23": 0.0008789452656811826,
  "byte_af": 0.0005593288054334798,
  "byte_c7": 0.00023971234518577707,
  "byte_f0": 0.00023971234518577707,
  "byte_45": 0.00039952057530962844,
  "byte_4d": 0.00039952057530962844,
  "byte_d8": 0.00047942469037155414,
  "byte_a0": 0.00015980823012385137,
  "byte_ae": 0.00015980823012385137,
  "byte_d2": 0.00015980823012385137,
  "byte_7f": 0.0016779864163004395,
  "byte_44": 0.0005593288054334798,
  "byte_7a": 0.00031961646024770274,
  "byte_9b": 0.00047942469037155414,
  "byte_b2": 0.00031961646024770274,
  "byte_e9": 0.00023971234518577707,
  "byte_87": 0.00039952057530962844,
  "byte_c3": 7.990411506192568e-05,
  "byte_c0": 0.00023971234518577707,
  "byte_94": 0.00031961646024770274,
  "byte_65": 0.00039952057530962844,
  "byte_dc": 0.00039952057530962844,
  "byte_4a": 0.00015980823012385137,
  "byte_98": 0.00015980823012385137,
  "byte_88": 0.00015980823012385137,
  "byte_f5": 0.00023971234518577707,
  "byte_79": 0.00023971234518577707,
  "byte_cd": 0.00047942469037155414,
  "byte_fe": 0.0007191370355573312,
  "byte_d0": 0.00023971234518577707,
  "byte_6f": 0.00031961646024770274,
  "byte_3b": 7.990411506192568e-05,
  "byte_ac": 0.00015980823012385137,
  "num_nodes": 2,
  "num_edges": 1,
  "avg_degree": 1.0,
  "density": 0.5,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 50,
  "event_nums": 30,
  "creation_block": 5230059,
  "creation_timestamp": 1520682374,
  "life_time": 923499.0,
  "duration_seconds": 13678148.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 3,
  "num_buyers": 1,
  "num_sellers": 1,
  "num_creator_transfers": 0,
  "buy_amt": 0,
  "sell_amt": 0.0,
  "avg_value": 0.0,
  "txn_per_block": 5.4141851651326476e-05,
  "avg_gas_limit": 144019.44,
  "std_gas_limit": 498443.0475820546,
  "avg_gas_used": 135559.8,
  "std_gas_used": 500149.41768507543,
  "avg_gas_price": 15096500000.0,
  "std_gas_price": 11534725841.995552,
  "gameresumed_num": 13,
  "newdividendmanageraddress_num": 1,
  "setblackbox_num": 3,
  "setunicornbreeding_num": 4,
  "setunicorntoken_num": 1,
  "runinit_num": 6,
  "unpause_num": 13,
  "pause_num": 16,
  "setdividendmanager_num": 1,
  "setcreateunicornprice_num": 3,
  "unregisterinit_num": 1,
  "setcandypowertoken_num": 1,
  "timeline_sequence": [
    [
      5230059,
      1520682374,
      69,
      18,
      0,
      3567808,
      5000000000,
      0,
      1,
      6405522,
      3567808,
      17862005
    ],
    [
      5230117,
      1520683297,
      73,
      61,
      0,
      44136,
      5000000000,
      0,
      1,
      4486731,
      44136,
      17861947
    ],
    [
      5230121,
      1520683359,
      74,
      64,
      0,
      44162,
      6000000000,
      0,
      1,
      2278129,
      44162,
      17861943
    ],
    [
      5230122,
      1520683374,
      75,
      157,
      0,
      44406,
      5000000000,
      0,
      1,
      7765788,
      44406,
      17861942
    ],
    [
      5230127,
      1520683474,
      76,
      179,
      0,
      140299,
      5100000000,
      0,
      1,
      5043851,
      140299,
      17861937
    ],
    [
      5230167,
      1520684162,
      77,
      29,
      0,
      28221,
      5000000000,
      0,
      1,
      6668969,
      14111,
      17861897
    ],
    [
      5230172,
      1520684222,
      78,
      10,
      0,
      43576,
      5000000000,
      0,
      1,
      2446638,
      43576,
      17861892
    ],
    [
      5234592,
      1520748950,
      79,
      68,
      0,
      42331,
      21000000000,
      0,
      1,
      2497729,
      14111,
      17857472
    ],
    [
      5235042,
      1520755487,
      86,
      16,
      0,
      45151,
      13500000000,
      0,
      1,
      934048,
      45151,
      17857022
    ],
    [
      5237006,
      1520784025,
      95,
      12,
      0,
      65364,
      21000000000,
      0,
      1,
      382955,
      43576,
      17855058
    ],
    [
      5237569,
      1520792286,
      97,
      31,
      0,
      42331,
      21000000000,
      0,
      1,
      1273081,
      14111,
      17854495
    ],
    [
      5267446,
      1521231281,
      168,
      54,
      0,
      51424,
      41000000000,
      0,
      1,
      1268472,
      34283,
      17824618
    ],
    [
      5374554,
      1522780929,
      208,
      19,
      0,
      43576,
      21000000000,
      0,
      1,
      622654,
      43576,
      17717510
    ],
    [
      5374614,
      1522781812,
      211,
      32,
      0,
      57869,
      11000000000,
      0,
      1,
      1245134,
      28935,
      17717450
    ],
    [
      5374621,
      1522781945,
      212,
      81,
      0,
      29162,
      11000000000,
      0,
      1,
      3346410,
      29162,
      17717443
    ],
    [
      5374702,
      1522783042,
      215,
      71,
      0,
      29136,
      11000000000,
      0,
      1,
      3225463,
      29136,
      17717362
    ],
    [
      5374751,
      1522783682,
      218,
      12,
      0,
      29180,
      11000000000,
      0,
      1,
      490531,
      29180,
      17717313
    ],
    [
      5374811,
      1522784500,
      226,
      23,
      0,
      396825,
      6000000000,
      0,
      1,
      1618956,
      393636,
      17717253
    ],
    [
      5374819,
      1522784557,
      227,
      8,
      0,
      28221,
      6000000000,
      0,
      1,
      269159,
      14111,
      17717245
    ],
    [
      5383979,
      1522916209,
      255,
      70,
      0,
      43576,
      6000000000,
      0,
      1,
      1891715,
      43576,
      17708085
    ],
    [
      5384012,
      1522916626,
      258,
      66,
      0,
      310874,
      6000000000,
      0,
      1,
      2929341,
      307377,
      17708052
    ],
    [
      5384047,
      1522917038,
      259,
      38,
      0,
      28221,
      6000000000,
      0,
      1,
      1417448,
      14111,
      17708017
    ],
    [
      5398328,
      1523120550,
      264,
      54,
      0,
      43576,
      6000000000,
      0,
      1,
      2464121,
      43576,
      17693736
    ],
    [
      5398497,
      1523122937,
      278,
      12,
      0,
      28221,
      3000000000,
      0,
      1,
      721683,
      14111,
      17693567
    ],
    [
      5435242,
      1523653854,
      339,
      18,
      0,
      65364,
      21000000000,
      0,
      1,
      702527,
      43576,
      17656822
    ],
    [
      5435273,
      1523654314,
      340,
      13,
      0,
      42331,
      21000000000,
      0,
      1,
      562524,
      14111,
      17656791
    ],
    [
      5435482,
      1523657233,
      341,
      20,
      0,
      65364,
      11000000000,
      0,
      1,
      1433302,
      43576,
      17656582
    ],
    [
      5435844,
      1523662269,
      342,
      41,
      0,
      42331,
      21000000000,
      0,
      1,
      1447128,
      14111,
      17656220
    ],
    [
      5533421,
      1525111999,
      375,
      182,
      0,
      43576,
      5000000000,
      0,
      1,
      7546813,
      43576,
      17558643
    ],
    [
      5533485,
      1525112843,
      378,
      118,
      0,
      29162,
      5000000000,
      0,
      1,
      4215023,
      29162,
      17558579
    ],
    [
      5533525,
      1525113426,
      380,
      73,
      0,
      344988,
      5000000000,
      0,
      1,
      7366636,
      344127,
      17558539
    ],
    [
      5533571,
      1525114049,
      381,
      110,
      0,
      28221,
      11000000000,
      0,
      1,
      7885248,
      14111,
      17558493
    ],
    [
      5533697,
      1525115681,
      382,
      104,
      0,
      43576,
      5000000000,
      0,
      1,
      4393036,
      43576,
      17558367
    ],
    [
      5533950,
      1525119187,
      384,
      150,
      0,
      29136,
      5000000000,
      0,
      1,
      7788791,
      29136,
      17558114
    ],
    [
      5533959,
      1525119291,
      385,
      75,
      0,
      328107,
      5000000000,
      0,
      1,
      4316454,
      327988,
      17558105
    ],
    [
      5534264,
      1525123533,
      386,
      195,
      0,
      28221,
      5000000000,
      0,
      1,
      7436397,
      14111,
      17557800
    ],
    [
      5630816,
      1526584175,
      428,
      1,
      0,
      43576,
      41000000000,
      0,
      1,
      81121,
      43576,
      17461248
    ],
    [
      5630819,
      1526584201,
      430,
      87,
      0,
      43576,
      21000000000,
      1,
      0,
      3970653,
      22528,
      17461245
    ],
    [
      5630965,
      1526586189,
      433,
      8,
      0,
      28221,
      41000000000,
      0,
      1,
      213506,
      14111,
      17461099
    ],
    [
      5684722,
      1527410611,
      445,
      6,
      0,
      34283,
      20000000000,
      0,
      1,
      304027,
      34283,
      17407342
    ],
    [
      5684734,
      1527410834,
      446,
      34,
      0,
      34283,
      20000000000,
      0,
      1,
      1084715,
      34283,
      17407330
    ],
    [
      5731946,
      1528132876,
      459,
      202,
      0,
      43576,
      21000000000,
      0,
      1,
      4850561,
      43576,
      17360118
    ],
    [
      5732053,
      1528134730,
      462,
      36,
      0,
      29162,
      21000000000,
      0,
      1,
      3967940,
      29162,
      17360011
    ],
    [
      5732082,
      1528135117,
      464,
      25,
      0,
      395526,
      12225000000,
      0,
      1,
      4863374,
      394663,
      17359982
    ],
    [
      5732234,
      1528137384,
      471,
      33,
      0,
      28221,
      15000000000,
      0,
      1,
      5865915,
      14111,
      17359830
    ],
    [
      5775299,
      1528797146,
      485,
      74,
      0,
      43576,
      21000000000,
      0,
      1,
      2512516,
      43576,
      17316765
    ],
    [
      5775320,
      1528797544,
      487,
      43,
      0,
      28221,
      21000000000,
      0,
      1,
      1434318,
      14111,
      17316744
    ],
    [
      6152031,
      1534338764,
      549,
      26,
      0,
      43576,
      41000000000,
      0,
      1,
      7358735,
      43576,
      16940033
    ],
    [
      6153558,
      1534360522,
      551,
      59,
      0,
      43576,
      41000000000,
      1,
      0,
      7810687,
      22528,
      16938506
    ],
    [
      6153558,
      1534360522,
      552,
      60,
      0,
      43576,
      41000000000,
      1,
      0,
      7833215,
      22528,
      16938506
    ]
  ],
  "sourcecode": "pragma solidity ^0.4.21;\n\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\ncontract UnicornInit {\n    function init() external;\n}\n\ncontract UnicornManagement {\n    using SafeMath for uint;\n\n    address public ownerAddress;\n    address public managerAddress;\n    address public communityAddress;\n    address public walletAddress;\n    address public candyToken;\n    address public candyPowerToken;\n    address public dividendManagerAddress; //onlyCommunity\n    address public blackBoxAddress; //onlyOwner\n    address public unicornBreedingAddress; //onlyOwner\n    address public geneLabAddress; //onlyOwner\n    address public unicornTokenAddress; //onlyOwner\n\n    uint public createDividendPercent = 375; //OnlyManager 4 digits. 10.5% = 1050\n    uint public sellDividendPercent = 375; //OnlyManager 4 digits. 10.5% = 1050\n    uint public subFreezingPrice = 1000000000000000000; //\n    uint64 public subFreezingTime = 1 hours;\n    uint public subTourFreezingPrice = 1000000000000000000; //\n    uint64 public subTourFreezingTime = 1 hours;\n    uint public createUnicornPrice = 50000000000000000;\n    uint public createUnicornPriceInCandy = 25000000000000000000; //25 tokens\n    uint public oraclizeFee = 3000000000000000; //0.003 ETH\n\n    bool public paused = true;\n    bool public locked = false;\n\n    mapping(address => bool) tournaments;//address\n\n    event GamePaused();\n    event GameResumed();\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    event NewManagerAddress(address managerAddress);\n    event NewCommunityAddress(address communityAddress);\n    event NewDividendManagerAddress(address dividendManagerAddress);\n    event NewWalletAddress(address walletAddress);\n    event NewCreateUnicornPrice(uint price, uint priceCandy);\n    event NewOraclizeFee(uint fee);\n    event NewSubFreezingPrice(uint price);\n    event NewSubFreezingTime(uint time);\n    event NewSubTourFreezingPrice(uint price);\n    event NewSubTourFreezingTime(uint time);\n    event NewCreateUnicornPrice(uint price);\n    event NewCreateDividendPercent(uint percent);\n    event NewSellDividendPercent(uint percent);\n    event AddTournament(address tournamentAddress);\n    event DelTournament(address tournamentAddress);\n    event NewBlackBoxAddress(address blackBoxAddress);\n    event NewBreedingAddress(address breedingAddress);\n\n\n    modifier onlyOwner() {\n        require(msg.sender == ownerAddress);\n        _;\n    }\n\n    modifier onlyManager() {\n        require(msg.sender == managerAddress);\n        _;\n    }\n\n    modifier onlyCommunity() {\n        require(msg.sender == communityAddress);\n        _;\n    }\n\n    modifier whenNotPaused() {\n        require(!paused);\n        _;\n    }\n\n    modifier whenPaused {\n        require(paused);\n        _;\n    }\n\n    modifier whenUnlocked() {\n        require(!locked);\n        _;\n    }\n\n    function lock() external onlyOwner whenPaused whenUnlocked {\n        locked = true;\n    }\n\n    function UnicornManagement(address _candyToken) public {\n        ownerAddress = msg.sender;\n        managerAddress = msg.sender;\n        communityAddress = msg.sender;\n        walletAddress = msg.sender;\n        candyToken = _candyToken;\n        candyPowerToken = _candyToken;\n    }\n\n\n    struct InitItem {\n        uint listIndex;\n        bool exists;\n    }\n\n    mapping (address => InitItem) private initItems;\n    address[] private initList;\n\n    function registerInit(address _contract) external whenPaused {\n        require(msg.sender == ownerAddress || tx.origin == ownerAddress);\n\n        if (!initItems[_contract].exists) {\n            initItems[_contract] = InitItem({\n                listIndex: initList.length,\n                exists: true\n                });\n            initList.push(_contract);\n        }\n    }\n\n    function unregisterInit(address _contract) external onlyOwner whenPaused {\n        require(initItems[_contract].exists && initList.length > 0);\n        uint lastIdx = initList.length - 1;\n        initItems[initList[lastIdx]].listIndex = initItems[_contract].listIndex;\n        initList[initItems[_contract].listIndex] = initList[lastIdx];\n        initList.length--;\n        delete initItems[_contract];\n\n    }\n\n    function runInit() external onlyOwner whenPaused {\n        for(uint i = 0; i < initList.length; i++) {\n            UnicornInit(initList[i]).init();\n        }\n    }\n\n    function setCandyPowerToken(address _candyPowerToken) external onlyOwner whenPaused {\n        require(_candyPowerToken != address(0));\n        candyPowerToken = _candyPowerToken;\n    }\n\n    function setUnicornToken(address _unicornTokenAddress) external onlyOwner whenPaused whenUnlocked {\n        require(_unicornTokenAddress != address(0));\n        //        require(unicornTokenAddress == address(0));\n        unicornTokenAddress = _unicornTokenAddress;\n    }\n\n    function setBlackBox(address _blackBoxAddress) external onlyOwner whenPaused {\n        require(_blackBoxAddress != address(0));\n        blackBoxAddress = _blackBoxAddress;\n    }\n\n    function setGeneLab(address _geneLabAddress) external onlyOwner whenPaused {\n        require(_geneLabAddress != address(0));\n        geneLabAddress = _geneLabAddress;\n    }\n\n    function setUnicornBreeding(address _unicornBreedingAddress) external onlyOwner whenPaused whenUnlocked {\n        require(_unicornBreedingAddress != address(0));\n        //        require(unicornBreedingAddress == address(0));\n        unicornBreedingAddress = _unicornBreedingAddress;\n    }\n\n    function setManagerAddress(address _managerAddress) external onlyOwner {\n        require(_managerAddress != address(0));\n        managerAddress = _managerAddress;\n        emit NewManagerAddress(_managerAddress);\n    }\n\n    function setDividendManager(address _dividendManagerAddress) external onlyOwner {\n        require(_dividendManagerAddress != address(0));\n        dividendManagerAddress = _dividendManagerAddress;\n        emit NewDividendManagerAddress(_dividendManagerAddress);\n    }\n\n    function setWallet(address _walletAddress) external onlyOwner {\n        require(_walletAddress != address(0));\n        walletAddress = _walletAddress;\n        emit NewWalletAddress(_walletAddress);\n    }\n\n    function setTournament(address _tournamentAddress) external onlyOwner {\n        require(_tournamentAddress != address(0));\n        tournaments[_tournamentAddress] = true;\n        emit AddTournament(_tournamentAddress);\n    }\n\n    function delTournament(address _tournamentAddress) external onlyOwner {\n        require(tournaments[_tournamentAddress]);\n        tournaments[_tournamentAddress] = false;\n        emit DelTournament(_tournamentAddress);\n    }\n\n    function transferOwnership(address _ownerAddress) external onlyOwner {\n        require(_ownerAddress != address(0));\n        ownerAddress = _ownerAddress;\n        emit OwnershipTransferred(ownerAddress, _ownerAddress);\n    }\n\n\n    function setCreateDividendPercent(uint _percent) public onlyManager {\n        require(_percent < 2500);\n        //no more then 25%\n        createDividendPercent = _percent;\n        emit NewCreateDividendPercent(_percent);\n    }\n\n    function setSellDividendPercent(uint _percent) public onlyManager {\n        require(_percent < 2500);\n        //no more then 25%\n        sellDividendPercent = _percent;\n        emit NewSellDividendPercent(_percent);\n    }\n\n    //time in minutes\n    function setSubFreezingTime(uint64 _time) external onlyManager {\n        subFreezingTime = _time * 1 minutes;\n        emit NewSubFreezingTime(_time);\n    }\n\n    //price in CandyCoins\n    function setSubFreezingPrice(uint _price) external onlyManager {\n        subFreezingPrice = _price;\n        emit NewSubFreezingPrice(_price);\n    }\n\n\n    //time in minutes\n    function setSubTourFreezingTime(uint64 _time) external onlyManager {\n        subTourFreezingTime = _time * 1 minutes;\n        emit NewSubTourFreezingTime(_time);\n    }\n\n    //price in CandyCoins\n    function setSubTourFreezingPrice(uint _price) external onlyManager {\n        subTourFreezingPrice = _price;\n        emit NewSubTourFreezingPrice(_price);\n    }\n\n    //in weis\n    function setOraclizeFee(uint _fee) external onlyManager {\n        oraclizeFee = _fee;\n        emit NewOraclizeFee(_fee);\n    }\n\n    //price in weis\n    function setCreateUnicornPrice(uint _price, uint _candyPrice) external onlyManager {\n        createUnicornPrice = _price;\n        createUnicornPriceInCandy = _candyPrice;\n        emit NewCreateUnicornPrice(_price, _candyPrice);\n    }\n\n    function setCommunity(address _communityAddress) external onlyCommunity {\n        require(_communityAddress != address(0));\n        communityAddress = _communityAddress;\n        emit NewCommunityAddress(_communityAddress);\n    }\n\n\n    function pause() external onlyOwner whenNotPaused {\n        paused = true;\n        emit GamePaused();\n    }\n\n    function unpause() external onlyOwner whenPaused {\n        paused = false;\n        emit GameResumed();\n    }\n\n\n\n    function isTournament(address _tournamentAddress) external view returns (bool) {\n        return tournaments[_tournamentAddress];\n    }\n\n    function getCreateUnicornFullPrice() external view returns (uint) {\n        return createUnicornPrice.add(oraclizeFee);\n    }\n\n    function getCreateUnicornFullPriceInCandy() external view returns (uint) {\n        return createUnicornPriceInCandy;\n    }\n\n    function getHybridizationFullPrice(uint _price) external view returns (uint) {\n        return _price.add(valueFromPercent(_price, createDividendPercent));//.add(oraclizeFee);\n    }\n\n    function getSellUnicornFullPrice(uint _price) external view returns (uint) {\n        return _price.add(valueFromPercent(_price, sellDividendPercent));//.add(oraclizeFee);\n    }\n\n    //1% - 100, 10% - 1000 50% - 5000\n    function valueFromPercent(uint _value, uint _percent) internal pure returns (uint amount)    {\n        uint _amount = _value.mul(_percent).div(10000);\n        return (_amount);\n    }\n}"
}