{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH1 SHR DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST STOP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 ADD CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 ADD CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 ADD CALLDATALOAD AND PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 ADD CALLDATALOAD ISZERO ISZERO PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 ADD CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 ADD CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 ADD CALLDATALOAD AND PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 ADD CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 DUP6 AND ISZERO PUSH2 MUL PUSH1 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 ADD SWAP1 PUSH1 ADD DUP1 DUP4 GT PUSH2 JUMPI DUP3 SWAP1 SUB PUSH1 AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 SHL PUSH1 PUSH1 SHL NOT SWAP1 SWAP2 AND OR PUSH20 NOT AND PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 SWAP2 PUSH1 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 CALLDATASIZE LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 SHL SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 SLOAD PUSH1 DUP1 MLOAD PUSH32 DUP2 MSTORE CALLER PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 PUSH1 SHL SUB DUP8 DUP2 AND PUSH1 DUP4 ADD MSTORE PUSH1 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 SWAP2 PUSH1 DUP1 DUP4 ADD SWAP3 PUSH1 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP PUSH2 JUMP JUMPDEST PUSH2 DUP5 DUP5 PUSH2 JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 SHL SWAP1 DIV PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP2 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 DUP3 SWAP1 SHA3 DUP1 SLOAD PUSH1 NOT AND PUSH1 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 PUSH1 SHL SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH4 PUSH1 MLOAD DUP2 PUSH4 AND PUSH1 SHL DUP2 MSTORE PUSH1 ADD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 JUMP JUMPDEST PUSH1 DUP1 MSTORE PUSH1 PUSH1 MSTORE PUSH32 SLOAD PUSH1 SLOAD PUSH2 SWAP2 PUSH4 PUSH2 AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 SHL SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP5 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 SHL SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 SLOAD PUSH1 DUP1 MLOAD PUSH32 DUP2 MSTORE CALLER PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 PUSH1 SHL SUB DUP8 DUP2 AND PUSH1 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 DUP4 ADD MSTORE PUSH1 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 SWAP2 PUSH1 DUP1 DUP4 ADD SWAP3 PUSH1 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 JUMP JUMPDEST PUSH2 DUP5 DUP5 DUP5 PUSH2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 MSTORE PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP1 SHA3 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 SHL SWAP1 DIV PUSH1 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 SHL NOT AND DUP2 SSTORE PUSH1 MLOAD PUSH32 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP2 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP3 DUP4 MSTORE PUSH1 DUP1 DUP5 SHA3 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 SHA3 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 SHL SWAP1 DIV PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 PUSH1 SHL SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 SLOAD PUSH1 DUP1 MLOAD PUSH32 DUP2 MSTORE PUSH1 PUSH1 PUSH1 SHL SUB DUP6 DUP2 AND PUSH1 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 SWAP2 PUSH1 DUP1 DUP4 ADD SWAP3 PUSH1 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 JUMP JUMPDEST PUSH2 DUP3 PUSH2 JUMP JUMPDEST SWAP1 POP PUSH2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 SHL SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 SHL NOT AND PUSH1 PUSH1 SHL OR DUP2 SSTORE PUSH1 MLOAD PUSH32 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 DUP6 AND ISZERO PUSH2 MUL PUSH1 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP4 GT PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP3 ISZERO ISZERO EQ ISZERO PUSH2 JUMPI DUP5 PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH4 DUP6 DUP6 PUSH1 MLOAD DUP4 PUSH4 AND PUSH1 SHL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH1 PUSH1 PUSH1 SHL SUB AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 SWAP1 POP JUMP JUMPDEST DUP5 PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH4 DUP6 DUP6 PUSH1 MLOAD DUP4 PUSH4 AND PUSH1 SHL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH1 PUSH1 PUSH1 SHL SUB AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP JUMPDEST POP PUSH1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 SHL SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 SHL SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 SLOAD PUSH1 DUP1 MLOAD PUSH32 DUP2 MSTORE CALLER PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 PUSH1 SHL SUB DUP7 DUP2 AND PUSH1 DUP4 ADD MSTORE PUSH1 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 SWAP2 PUSH1 DUP1 DUP4 ADD SWAP3 PUSH1 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 JUMP JUMPDEST PUSH2 DUP4 DUP4 PUSH2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD DUP3 DUP2 ADD GT PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP4 SWAP1 SWAP4 SSTORE DUP6 AND DUP2 MSTORE SHA3 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP5 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 DUP3 SWAP1 SHA3 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD SWAP2 DUP3 MSTORE SWAP2 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH32 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP PUSH1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD DUP2 DUP2 ADD GT PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD DUP2 DUP2 ADD GT PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 DUP3 SWAP1 SHA3 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE PUSH1 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE SWAP2 MLOAD PUSH32 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 PUSH1 SHL SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 SLOAD PUSH1 DUP1 MLOAD PUSH32 DUP2 MSTORE PUSH1 PUSH1 PUSH1 SHL SUB DUP7 DUP2 AND PUSH1 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 SWAP2 PUSH1 DUP1 DUP4 ADD SWAP3 PUSH1 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST PUSH2 DUP4 DUP4 PUSH2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 MSTORE PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP2 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 DUP3 SWAP1 SHA3 DUP1 SLOAD PUSH1 NOT AND SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH20 NOT AND PUSH1 PUSH1 PUSH1 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP3 LT PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP2 LT PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP3 SWAP1 SSTORE PUSH1 DUP1 SLOAD PUSH2 SWAP2 DUP4 SWAP2 SWAP1 EXP PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 DUP2 SWAP1 SSTORE PUSH1 SLOAD PUSH1 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 MLOAD PUSH32 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP2 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 SLOAD PUSH20 NOT AND PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP2 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH2 DUP3 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD SWAP3 SWAP4 POP PUSH32 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 CALLDATASIZE LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST CALLER PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 SHA3 DUP8 SWAP1 SSTORE DUP1 MLOAD DUP8 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 DUP3 DUP3 GT ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 CALLDATASIZE LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP6 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 SHA3 SLOAD PUSH1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 SWAP1 PUSH2 SWAP1 PUSH2 SWAP1 DUP9 SWAP1 PUSH4 PUSH2 AND JUMP JUMPDEST SWAP1 PUSH4 PUSH2 AND JUMP JUMPDEST SWAP1 POP PUSH1 SLOAD DUP2 GT ISZERO PUSH2 JUMPI POP PUSH1 SLOAD JUMPDEST PUSH1 SLOAD DUP3 LT ISZERO PUSH2 JUMPI PUSH2 DUP3 DUP7 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP9 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SHA3 SSTORE JUMPDEST PUSH1 PUSH2 DUP7 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP10 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD SWAP1 SWAP2 POP PUSH2 SWAP1 DUP8 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP1 DUP11 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP1 DUP3 SHA3 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP10 AND DUP2 MSTORE SHA3 SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP1 DUP10 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 DUP3 SWAP1 SHA3 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP13 AND SWAP3 PUSH32 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 DUP2 ISZERO PUSH2 JUMPI PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP5 SHA3 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP4 MLOAD DUP7 DUP2 MSTORE SWAP4 MLOAD SWAP1 DUP3 AND SWAP4 SWAP2 DUP13 AND SWAP3 PUSH32 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 JUMPDEST POP PUSH1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 CALLDATASIZE LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH2 PUSH2 PUSH2 PUSH1 SLOAD DUP8 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 POP PUSH1 SLOAD DUP2 GT ISZERO PUSH2 JUMPI POP PUSH1 SLOAD JUMPDEST PUSH1 PUSH2 DUP6 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD SWAP1 SWAP2 POP PUSH2 SWAP1 DUP7 PUSH4 PUSH2 AND JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP1 DUP3 SHA3 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 PUSH1 PUSH1 SHL SUB DUP9 AND DUP2 MSTORE SHA3 SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP8 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 DUP3 SWAP1 SHA3 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 CALLER SWAP3 PUSH32 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 DUP2 ISZERO PUSH2 JUMPI PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP5 SHA3 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP4 MLOAD DUP7 DUP2 MSTORE SWAP4 MLOAD SWAP2 AND SWAP3 CALLER SWAP3 PUSH32 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 JUMPDEST POP PUSH1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB SWAP2 DUP3 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SHA3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 DUP3 ISZERO DUP1 PUSH2 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 JUMPI POP PUSH1 PUSH2 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV EQ PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 DUP1 DUP3 GT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 DUP3 DUP5 DUP2 PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP UNKNOWN_0xfe LOG2 PUSH6 SHA3 UNKNOWN_0xbb SMOD UNKNOWN_0xc5 UNOFFICIAL_DUP SWAP9 UNKNOWN_0xad GAS DUP2 SWAP9 PUSH12 SLOAD SWAP5 UNKNOWN_0x21 UNKNOWN_0xcf SHR UNKNOWN_0xec UNKNOWN_0xa5 UNKNOWN_0xe2 UNKNOWN_0xe4 INVALID_0x79",
  "opcode_entropy": 4.8045859476675465,
  "opcode_count": 4177,
  "unique_opcodes": 80,
  "byte_entropy": 6.033009095676714,
  "byte_0x": 0.0001534683855125844,
  "byte_60": 0.11540822590546347,
  "byte_80": 0.03806015960712093,
  "byte_40": 0.010742786985880909,
  "byte_52": 0.021025168815224062,
  "byte_34": 0.0006138735420503376,
  "byte_15": 0.01734192756292204,
  "byte_61": 0.04465930018416206,
  "byte_00": 0.048956414978514426,
  "byte_10": 0.007213014119091467,
  "byte_57": 0.02302025782688766,
  "byte_fd": 0.012277470841006752,
  "byte_5b": 0.03437691835481891,
  "byte_50": 0.023480662983425413,
  "byte_04": 0.011356660527931247,
  "byte_36": 0.004450583179864948,
  "byte_02": 0.010128913443830571,
  "byte_41": 0.0026089625537139348,
  "byte_35": 0.0055248618784530384,
  "byte_e0": 0.000767341927562922,
  "byte_1c": 0.0009208103130755065,
  "byte_63": 0.012430939226519336,
  "byte_70": 0.001534683855125844,
  "byte_a0": 0.015193370165745856,
  "byte_82": 0.012584407612031922,
  "byte_31": 0.0012277470841006752,
  "byte_11": 0.003990178023327195,
  "byte_01": 0.04358502148557397,
  "byte_45": 0.0001534683855125844,
  "byte_dd": 0.002148557397176182,
  "byte_62": 0.0009208103130755065,
  "byte_ed": 0.0009208103130755065,
  "byte_3e": 0.002148557397176182,
  "byte_bd": 0.000767341927562922,
  "byte_e5": 0.001074278698588091,
  "byte_25": 0.000767341927562922,
  "byte_7b": 0.00046040515653775324,
  "byte_0f": 0.0029158993247391037,
  "byte_8c": 0.001534683855125844,
  "byte_f2": 0.0016881522406384285,
  "byte_d2": 0.00046040515653775324,
  "byte_a7": 0.001534683855125844,
  "byte_51": 0.010896255371393493,
  "byte_71": 0.0003069367710251688,
  "byte_14": 0.010128913443830571,
  "byte_06": 0.0027624309392265192,
  "byte_20": 0.019337016574585635,
  "byte_e3": 0.00046040515653775324,
  "byte_8b": 0.0012277470841006752,
  "byte_43": 0.0006138735420503376,
  "byte_f3": 0.001534683855125844,
  "byte_c2": 0.0009208103130755065,
  "byte_28": 0.000767341927562922,
  "byte_69": 0.001074278698588091,
  "byte_56": 0.018262737875997543,
  "byte_05": 0.003990178023327195,
  "byte_b5": 0.000767341927562922,
  "byte_9a": 0.0006138735420503376,
  "byte_18": 0.0026089625537139348,
  "byte_64": 0.0009208103130755065,
  "byte_4f": 0.00046040515653775324,
  "byte_72": 0.0006138735420503376,
  "byte_9e": 0.000767341927562922,
  "byte_e4": 0.0006138735420503376,
  "byte_7d": 0.0012277470841006752,
  "byte_a6": 0.0006138735420503376,
  "byte_99": 0.000767341927562922,
  "byte_c5": 0.0009208103130755065,
  "byte_cc": 0.000767341927562922,
  "byte_95": 0.0012277470841006752,
  "byte_d8": 0.0009208103130755065,
  "byte_9b": 0.0013812154696132596,
  "byte_a9": 0.0012277470841006752,
  "byte_9c": 0.000767341927562922,
  "byte_bb": 0.0013812154696132596,
  "byte_f9": 0.000767341927562922,
  "byte_fb": 0.0006138735420503376,
  "byte_ab": 0.0006138735420503376,
  "byte_27": 0.0012277470841006752,
  "byte_be": 0.000767341927562922,
  "byte_87": 0.002148557397176182,
  "byte_2b": 0.0012277470841006752,
  "byte_66": 0.00046040515653775324,
  "byte_53": 0.0003069367710251688,
  "byte_19": 0.0032228360957642726,
  "byte_6d": 0.0003069367710251688,
  "byte_77": 0.00046040515653775324,
  "byte_84": 0.004757519950890117,
  "byte_cb": 0.0009208103130755065,
  "byte_59": 0.0009208103130755065,
  "byte_9d": 0.0001534683855125844,
  "byte_89": 0.0012277470841006752,
  "byte_3d": 0.003990178023327195,
  "byte_e8": 0.0006138735420503376,
  "byte_a5": 0.0006138735420503376,
  "byte_8d": 0.0012277470841006752,
  "byte_ad": 0.0013812154696132596,
  "byte_26": 0.0006138735420503376,
  "byte_97": 0.0009208103130755065,
  "byte_6e": 0.0009208103130755065,
  "byte_3f": 0.00046040515653775324,
  "byte_aa": 0.001074278698588091,
  "byte_f8": 0.0009208103130755065,
  "byte_6b": 0.0012277470841006752,
  "byte_bf": 0.0006138735420503376,
  "byte_1a": 0.00046040515653775324,
  "byte_1b": 0.015500306936771025,
  "byte_5c": 0.000767341927562922,
  "byte_65": 0.001074278698588091,
  "byte_81": 0.03038674033149171,
  "byte_5a": 0.0023020257826887663,
  "byte_6f": 0.00046040515653775324,
  "byte_0b": 0.003069367710251688,
  "byte_4b": 0.0003069367710251688,
  "byte_a8": 0.0001534683855125844,
  "byte_3a": 0.00046040515653775324,
  "byte_13": 0.0019950890116635974,
  "byte_03": 0.025475751995089013,
  "byte_cd": 0.000767341927562922,
  "byte_e2": 0.001074278698588091,
  "byte_d5": 0.0001534683855125844,
  "byte_3c": 0.0003069367710251688,
  "byte_67": 0.00046040515653775324,
  "byte_39": 0.00046040515653775324,
  "byte_07": 0.0032228360957642726,
  "byte_0e": 0.0023020257826887663,
  "byte_93": 0.003990178023327195,
  "byte_c0": 0.0006138735420503376,
  "byte_16": 0.023634131368937997,
  "byte_0d": 0.001534683855125844,
  "byte_23": 0.001074278698588091,
  "byte_b8": 0.0003069367710251688,
  "byte_de": 0.0001534683855125844,
  "byte_46": 0.0001534683855125844,
  "byte_c3": 0.0006138735420503376,
  "byte_0c": 0.004143646408839779,
  "byte_cf": 0.000767341927562922,
  "byte_fc": 0.0009208103130755065,
  "byte_eb": 0.0006138735420503376,
  "byte_09": 0.0016881522406384285,
  "byte_5e": 0.00046040515653775324,
  "byte_b3": 0.001074278698588091,
  "byte_4e": 0.00046040515653775324,
  "byte_8f": 0.0001534683855125844,
  "byte_83": 0.010742786985880909,
  "byte_91": 0.015500306936771025,
  "byte_92": 0.009821976672805401,
  "byte_90": 0.03713934929404543,
  "byte_85": 0.003990178023327195,
  "byte_88": 0.000767341927562922,
  "byte_1f": 0.001534683855125844,
  "byte_0a": 0.003069367710251688,
  "byte_e9": 0.0023020257826887663,
  "byte_d9": 0.0003069367710251688,
  "byte_1d": 0.0001534683855125844,
  "byte_a4": 0.0003069367710251688,
  "byte_3b": 0.0027624309392265192,
  "byte_08": 0.0019950890116635974,
  "byte_a3": 0.001074278698588091,
  "byte_ee": 0.0003069367710251688,
  "byte_12": 0.001841620626151013,
  "byte_24": 0.0012277470841006752,
  "byte_2a": 0.0003069367710251688,
  "byte_30": 0.0001534683855125844,
  "byte_2e": 0.00046040515653775324,
  "byte_d3": 0.0006138735420503376,
  "byte_d1": 0.0006138735420503376,
  "byte_86": 0.0027624309392265192,
  "byte_bc": 0.0001534683855125844,
  "byte_8e": 0.0003069367710251688,
  "byte_d4": 0.00046040515653775324,
  "byte_da": 0.0001534683855125844,
  "byte_7f": 0.0038367096378146104,
  "byte_c1": 0.00046040515653775324,
  "byte_54": 0.015039901780233272,
  "byte_94": 0.002148557397176182,
  "byte_ea": 0.00046040515653775324,
  "byte_33": 0.004143646408839779,
  "byte_ff": 0.02440147329650092,
  "byte_17": 0.0027624309392265192,
  "byte_73": 0.0006138735420503376,
  "byte_55": 0.003683241252302026,
  "byte_22": 0.00046040515653775324,
  "byte_7c": 0.0001534683855125844,
  "byte_b9": 0.0003069367710251688,
  "byte_d0": 0.0003069367710251688,
  "byte_b6": 0.0016881522406384285,
  "byte_6a": 0.000767341927562922,
  "byte_f1": 0.001841620626151013,
  "byte_a1": 0.0024554941682013503,
  "byte_44": 0.0016881522406384285,
  "byte_ae": 0.0006138735420503376,
  "byte_2d": 0.000767341927562922,
  "byte_4c": 0.0003069367710251688,
  "byte_76": 0.0003069367710251688,
  "byte_6c": 0.0006138735420503376,
  "byte_ba": 0.0003069367710251688,
  "byte_42": 0.0003069367710251688,
  "byte_e1": 0.00046040515653775324,
  "byte_48": 0.0001534683855125844,
  "byte_68": 0.0013812154696132596,
  "byte_ca": 0.0001534683855125844,
  "byte_fa": 0.0009208103130755065,
  "byte_32": 0.00046040515653775324,
  "byte_b7": 0.0001534683855125844,
  "byte_98": 0.001074278698588091,
  "byte_dc": 0.0001534683855125844,
  "byte_78": 0.0009208103130755065,
  "byte_a2": 0.00046040515653775324,
  "byte_ac": 0.0003069367710251688,
  "byte_75": 0.0001534683855125844,
  "byte_fe": 0.0013812154696132596,
  "byte_b0": 0.0012277470841006752,
  "byte_d6": 0.0003069367710251688,
  "byte_c9": 0.0003069367710251688,
  "byte_96": 0.0006138735420503376,
  "byte_7a": 0.0009208103130755065,
  "byte_ce": 0.0003069367710251688,
  "byte_e6": 0.0016881522406384285,
  "byte_2c": 0.0001534683855125844,
  "byte_47": 0.00046040515653775324,
  "byte_db": 0.00046040515653775324,
  "byte_4d": 0.001074278698588091,
  "byte_2f": 0.00046040515653775324,
  "byte_df": 0.00046040515653775324,
  "byte_9f": 0.0006138735420503376,
  "byte_f4": 0.0001534683855125844,
  "byte_79": 0.00046040515653775324,
  "byte_f6": 0.0001534683855125844,
  "byte_c4": 0.0009208103130755065,
  "byte_e7": 0.00046040515653775324,
  "byte_c8": 0.0013812154696132596,
  "byte_f0": 0.0006138735420503376,
  "byte_37": 0.0009208103130755065,
  "byte_f7": 0.0003069367710251688,
  "byte_4a": 0.0003069367710251688,
  "byte_d7": 0.0001534683855125844,
  "byte_ec": 0.0006138735420503376,
  "byte_49": 0.0003069367710251688,
  "byte_f5": 0.001534683855125844,
  "byte_21": 0.0003069367710251688,
  "byte_b4": 0.0001534683855125844,
  "byte_b2": 0.0003069367710251688,
  "byte_c6": 0.0003069367710251688,
  "byte_7e": 0.0001534683855125844,
  "byte_1e": 0.0003069367710251688,
  "byte_29": 0.0001534683855125844,
  "byte_c7": 0.0001534683855125844,
  "byte_8a": 0.0001534683855125844,
  "byte_ef": 0.0006138735420503376,
  "byte_38": 0.0001534683855125844,
  "byte_58": 0.0001534683855125844,
  "byte_b1": 0.0001534683855125844,
  "num_nodes": 373,
  "num_edges": 324,
  "avg_degree": 1.737265415549598,
  "density": 0.0023350341606849434,
  "connected_components": 71,
  "avg_clustering": 0.006255585344057194,
  "timeline_sequence": [],
  "sourcecode": "/**\n *Submitted for verification at Etherscan.io on 2020-11-03\n*/\n\n// File: contracts/token/libs/Ownable.sol\n\npragma solidity >=0.5.0 <0.6.0;\n\ncontract Ownable {\n    address public owner;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlySafe() {\n        require(msg.sender == owner);\n        _;\n    }\n    \n    function transferOwnership(address newOwner) public onlySafe {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n}\n\n// File: contracts/token/libs/Pausable.sol\n\n/**\n *Submitted for verification at Etherscan.io on 2017-11-28\n */\n\npragma solidity >=0.5.0 <0.6.0;\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n    event Pause();\n    event Unpause();\n\n    bool public paused = false;\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused);\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     */\n    modifier whenPaused() {\n        require(paused);\n        _;\n    }\n\n    /**\n     * @dev called by the owner to pause, triggers stopped state\n     */\n    function pause() public onlySafe whenNotPaused {\n        paused = true;\n        emit Pause();\n    }\n\n    /**\n     * @dev called by the owner to unpause, returns to normal state\n     */\n    function unpause() public onlySafe whenPaused {\n        paused = false;\n        emit Unpause();\n    }\n}\n\n// File: contracts/token/libs/ERC20Basic.sol\n\n/**\n *Submitted for verification at Etherscan.io on 2017-11-28\n */\n\npragma solidity >=0.5.0 <0.6.0;\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20Basic {\n    uint256 public _totalSupply;\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address who) external view returns (uint256);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n// File: contracts/token/libs/SafeMath.sol\n\n/**\n *Submitted for verification at Etherscan.io on 2017-11-28\n */\n\npragma solidity >=0.5.0 <0.6.0;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0 || b == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n// File: contracts/token/libs/BasicToken.sol\n\n/**\n *Submitted for verification at Etherscan.io on 2017-11-28\n */\n\npragma solidity >=0.5.0 <0.6.0;\n\n\n\n\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is Ownable, Pausable, ERC20Basic {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) public balances;\n\n    // additional variables for use if transaction fees ever became necessary\n    uint256 public basisPointsRate = 0;\n    uint256 public maximumFee = 0;\n\n    /**\n     * @dev Fix for the ERC20 short address attack.\n     */\n    modifier onlyPayloadSize(uint256 size) {\n        require(!(msg.data.length < size + 4));\n        _;\n    }\n\n    /**\n     * @dev transfer token for a specified address\n     * @param _to The address to transfer to.\n     * @param _value The amount to be transferred.\n     */\n    function transfer(address _to, uint256 _value)\n        public\n        onlyPayloadSize(2 * 32)\n        returns (bool success)\n    {\n        uint256 fee = (_value.mul(basisPointsRate)).div(10000);\n        if (fee > maximumFee) {\n            fee = maximumFee;\n        }\n        uint256 sendAmount = _value.sub(fee);\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(sendAmount);\n        emit Transfer(msg.sender, _to, sendAmount);\n        if (fee > 0) {\n            balances[owner] = balances[owner].add(fee);\n            emit Transfer(msg.sender, owner, fee);\n        }\n        return true;\n    }\n\n    /**\n     * @dev Gets the balance of the specified address.\n     * @param _owner The address to query the the balance of.\n     * @return An uint representing the amount owned by the passed address.\n     */\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n}\n\n// File: contracts/token/libs/BlackList.sol\n\n/**\n *Submitted for verification at Etherscan.io on 2017-11-28\n */\n\npragma solidity >=0.5.0 <0.6.0;\n\n\n\ncontract BlackList is Ownable, BasicToken {\n    mapping(address => bool) public isBlackListed;\n\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\n    function getBlackListStatus(address _maker) external view returns (bool) {\n        return isBlackListed[_maker];\n    }\n\n    function getOwner() external view returns (address) {\n        return owner;\n    }\n\n    function addBlackList(address _evilUser) public onlySafe {\n        isBlackListed[_evilUser] = true;\n        emit AddedBlackList(_evilUser);\n    }\n\n    function removeBlackList(address _clearedUser) public onlySafe {\n        isBlackListed[_clearedUser] = false;\n        emit RemovedBlackList(_clearedUser);\n    }\n\n    function destroyBlackFunds(address _blackListedUser) public onlySafe {\n        require(isBlackListed[_blackListedUser]);\n        uint256 dirtyFunds = balanceOf(_blackListedUser);\n        balances[_blackListedUser] = 0;\n        _totalSupply -= dirtyFunds;\n        emit DestroyedBlackFunds(_blackListedUser, dirtyFunds);\n    }\n\n    event DestroyedBlackFunds(address _blackListedUser, uint256 _balance);\n\n    event AddedBlackList(address _user);\n\n    event RemovedBlackList(address _user);\n}\n\n// File: contracts/token/libs/ERC20.sol\n\n/**\n *Submitted for verification at Etherscan.io on 2017-11-28\n */\n\npragma solidity >=0.5.0 <0.6.0;\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n\n// File: contracts/token/libs/StandardToken.sol\n\n/**\n *Submitted for verification at Etherscan.io on 2017-11-28\n */\n\npragma solidity >=0.5.0 <0.6.0;\n\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is BasicToken, ERC20 {\n    mapping(address => mapping(address => uint256)) public allowed;\n\n    uint256 public MAX_UINT = 2**256 - 1;\n\n    /**\n     * @dev Transfer tokens from one address to another\n     * @param _from address The address which you want to send tokens from\n     * @param _to address The address which you want to transfer to\n     * @param _value uint the amount of tokens to be transferred\n     */\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    ) public onlyPayloadSize(3 * 32) returns (bool success) {\n        uint256 _allowance = allowed[_from][msg.sender];\n\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\n        // if (_value > _allowance) throw;\n\n        uint256 fee = (_value.mul(basisPointsRate)).div(10000);\n        if (fee > maximumFee) {\n            fee = maximumFee;\n        }\n        if (_allowance < MAX_UINT) {\n            allowed[_from][msg.sender] = _allowance.sub(_value);\n        }\n        uint256 sendAmount = _value.sub(fee);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(sendAmount);\n        emit Transfer(_from, _to, sendAmount);\n        if (fee > 0) {\n            balances[owner] = balances[owner].add(fee);\n            emit Transfer(_from, owner, fee);\n        }\n        return true;\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n     * @param _spender The address which will spend the funds.\n     * @param _value The amount of tokens to be spent.\n     */\n    function approve(address _spender, uint256 _value)\n        public\n        onlyPayloadSize(2 * 32)\n        returns (bool success)\n    {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n     * @dev Function to check the amount of tokens than an owner allowed to a spender.\n     * @param _owner address The address which owns the funds.\n     * @param _spender address The address which will spend the funds.\n     * @return A uint specifying the amount of tokens still available for the spender.\n     */\n    function allowance(address _owner, address _spender)\n        public\n        view\n        returns (uint256 remaining)\n    {\n        return allowed[_owner][_spender];\n    }\n}\n\n// File: contracts/token/libs/UpgradedStandardToken.sol\n\n/**\n *Submitted for verification at Etherscan.io on 2017-11-28\n */\n\npragma solidity >=0.5.0 <0.6.0;\n\n\ncontract UpgradedStandardToken is StandardToken {\n    // those methods are called by the legacy contract\n    // and they must ensure msg.sender to be the contract address\n    function transferByLegacy(\n        address from,\n        address to,\n        uint256 value\n    ) public returns (bool);\n\n    function transferFromByLegacy(\n        address sender,\n        address from,\n        address spender,\n        uint256 value\n    ) public returns (bool);\n\n    function approveByLegacy(\n        address from,\n        address spender,\n        uint256 value\n    ) public returns (bool);\n}\n\n// File: contracts/library/ERC20Yes.sol\n\npragma solidity >=0.5.0 <0.6.0;\n\n// ERC Token Standard #20 Interface\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\ninterface ERC20Yes {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tokenOwner)\n        external\n        view\n        returns (uint256 balance);\n\n    function allowance(address tokenOwner, address spender)\n        external\n        view\n        returns (uint256 remaining);\n\n    function transfer(address to, uint256 tokens)\n        external\n        returns (bool success);\n\n    function approve(address spender, uint256 tokens)\n        external\n        returns (bool success);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokens\n    ) external returns (bool success);\n\n    event Transfer(address indexed from, address indexed to, uint256 tokens);\n    event Approval(\n        address indexed tokenOwner,\n        address indexed spender,\n        uint256 tokens\n    );\n}\n\n// File: contracts/library/ERC20Not.sol\n\npragma solidity >=0.5.0 <0.6.0;\n\ninterface ERC20Not {\n    function decimals() external view returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address _owner) external view returns (uint256);\n\n    function allowance(address _owner, address _spender)\n        external\n        view\n        returns (uint256);\n\n    function transfer(address _to, uint256 _value) external ;\n\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    ) external;\n\n    function approve(address _spender, uint256 _value) external returns (bool);\n\n    function decreaseApproval(address _spender, uint256 _subtractedValue)\n        external\n        returns (bool);\n\n    function increaseApproval(address _spender, uint256 _addedValue)\n        external\n        returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n\n// File: contracts/token/PIKE.sol\n\n/**\n *Submitted for verification at Etherscan.io on 2017-11-28\n */\n\npragma solidity >=0.5.0 <0.6.0;\n\n\n\n\n\n\ncontract PIKE is StandardToken, BlackList {\n    string public name;\n    string public symbol;\n    uint256 public decimals;\n    address public safeSender;\n    address public upgradedAddress;\n    bool public deprecated;\n\n    //  The contract can be initialized with a number of tokens\n    //  All the tokens are deposited to the owner address\n    //\n    // @param _balance Initial supply of the contract\n    // @param _name Token Name\n    // @param _symbol Token symbol\n    // @param _decimals Token decimals\n    constructor() public {\n        deprecated = false;\n        decimals = 18;\n        name = \"Pike Protocol\";\n        symbol = \"PIKE\";\n        _totalSupply = 30000000 * 10**decimals; //\u53d1\u884c3000\u4e07\n        balances[owner] = _totalSupply;\n        emit Transfer(address(0), owner, _totalSupply);\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function transfer(address _to, uint256 _value)\n        public\n        whenNotPaused\n        returns (bool success)\n    {\n        require(!isBlackListed[msg.sender]);\n        if (deprecated) {\n            return\n                UpgradedStandardToken(upgradedAddress).transferByLegacy(\n                    msg.sender,\n                    _to,\n                    _value\n                );\n        } else {\n            return super.transfer(_to, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    ) public whenNotPaused returns (bool success) {\n        require(!isBlackListed[_from]);\n        if (deprecated) {\n            return\n                UpgradedStandardToken(upgradedAddress).transferFromByLegacy(\n                    msg.sender,\n                    _from,\n                    _to,\n                    _value\n                );\n        } else {\n            return super.transferFrom(_from, _to, _value);\n        }\n    }\n\n    function transferTokens(\n        address _tokenAddress,\n        address _to,\n        uint256 _tokens,\n        bool _isErc20\n    ) public onlySafe returns (bool success) {\n        require(_tokens > 0);\n        if (_isErc20 == true) {\n            ERC20Yes(_tokenAddress).transfer(_to, _tokens);\n        } else {\n            ERC20Not(_tokenAddress).transfer(_to, _tokens);\n        }\n        return true;\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function balanceOf(address who) public view returns (uint256) {\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\n        } else {\n            return super.balanceOf(who);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function approve(address _spender, uint256 _value)\n        public\n        onlyPayloadSize(2 * 32)\n        returns (bool success)\n    {\n        if (deprecated) {\n            return\n                UpgradedStandardToken(upgradedAddress).approveByLegacy(\n                    msg.sender,\n                    _spender,\n                    _value\n                );\n        } else {\n            return super.approve(_spender, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function allowance(address _owner, address _spender)\n        public\n        view\n        returns (uint256 remaining)\n    {\n        if (deprecated) {\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\n        } else {\n            return super.allowance(_owner, _spender);\n        }\n    }\n\n    // deprecate current contract in favour of a new one\n    function deprecate(address _upgradedAddress) public onlySafe {\n        deprecated = true;\n        upgradedAddress = _upgradedAddress;\n        emit Deprecate(_upgradedAddress);\n    }\n\n    // deprecate current contract if favour of a new one\n    function totalSupply() public view returns (uint256) {\n        if (deprecated) {\n            return StandardToken(upgradedAddress).totalSupply();\n        } else {\n            return _totalSupply.sub(balances[address(0)]);\n        }\n    }\n\n    // Issue a new amount of tokens\n    // these tokens are deposited into the owner address\n    //\n    // @param _amount Number of tokens to be issued\n    function issue(uint256 amount) public onlySafe {\n        require(_totalSupply + amount > _totalSupply);\n        require(balances[owner] + amount > balances[owner]);\n        balances[owner] += amount;\n        _totalSupply += amount;\n        emit Issue(amount);\n    }\n\n    function mine(address _to, uint256 _tokens) public onlySafe returns (bool success) {\n        require(_totalSupply + _tokens > _totalSupply);\n        balances[owner] = balances[owner].sub(_tokens);\n        balances[_to] = balances[_to].add(_tokens);\n        emit Mine(_to, _tokens);\n        return true;\n    }\n\n    //\u8bbe\u7f6e\u624b\u7eed\u8d39\u7387\n    function setFeeRate(uint256 newBasisPoints, uint256 newMaxFee)\n        public\n        onlySafe\n    {\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\n        require(newBasisPoints < 20);\n        require(newMaxFee < 50);\n\n        basisPointsRate = newBasisPoints;\n        maximumFee = newMaxFee.mul(10**decimals);\n\n        emit Params(basisPointsRate, maximumFee);\n    }\n\n    function setSafeSender(address _sender) public onlySafe {\n        safeSender = _sender;\n    }\n\n    // Called when new token are issued\n    event Issue(uint256 amount);\n\n    event Airdrop(address who, uint256 tokens);\n\n    event Mine(address who, uint256 tokens);\n\n    // Called when contract is deprecated\n    event Deprecate(address newAddress);\n\n    // Called if contract ever adds fees\n    event Params(uint256 feeBasisPoints, uint256 maxFee);\n}"
}