{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH29 SWAP1 DIV PUSH4 AND DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 CALLVALUE EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD NUMBER LT ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD NUMBER GT ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 CALLVALUE PUSH1 SLOAD PUSH2 JUMP JUMPDEST SWAP1 POP PUSH1 SLOAD PUSH1 SLOAD DUP3 ADD GT ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 SLOAD DUP3 PUSH2 JUMP JUMPDEST PUSH1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 AND PUSH32 DUP3 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 DUP1 DUP3 DUP5 MUL SWAP1 POP PUSH1 DUP5 EQ DUP1 PUSH2 JUMPI POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO DUP1 ISZERO PUSH2 JUMPI POP DUP3 DUP2 LT ISZERO JUMPDEST ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfexfe JUMPDEST DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 SHA3 ORIGIN UNKNOWN_0xe7 UNKNOWN_0xb9 UNKNOWN_0xbf OR SHA3 UNKNOWN_0xd2 UNKNOWN_0xc8 CALL CALLDATASIZE UNKNOWN_0x4b UNKNOWN_0xcd SWAP5 UNKNOWN_0x5f SWAP16 BLOCKHASH UNKNOWN_0x4a STOP SWAP4 UNKNOWN_0xa7 INVALID_0x73",
  "opcode_entropy": 4.755507007837038,
  "opcode_count": 3666,
  "unique_opcodes": 75,
  "byte_entropy": 4.869268639311874,
  "byte_60": 0.0639858714848526,
  "byte_80": 0.038717565548159215,
  "byte_40": 0.00910202418149708,
  "byte_52": 0.012498301861160169,
  "byte_04": 0.009373726395870126,
  "byte_36": 0.0020377666077978536,
  "byte_10": 0.0035321287868496126,
  "byte_61": 0.03151745686727347,
  "byte_01": 0.028121179187610378,
  "byte_75": 0.0006792555359326179,
  "byte_57": 0.015622877326450211,
  "byte_00": 0.04442331204999321,
  "byte_35": 0.0029887243581035185,
  "byte_7c": 0.0002717022143730471,
  "byte_90": 0.03491373454693656,
  "byte_63": 0.004890639858714849,
  "byte_ff": 0.30661594891998367,
  "byte_16": 0.019155006113299823,
  "byte_06": 0.0020377666077978536,
  "byte_fd": 0.009237875288683603,
  "byte_de": 0.0004075533215595707,
  "byte_03": 0.01032468414617579,
  "byte_14": 0.008558619752750985,
  "byte_02": 0.00380383100122266,
  "byte_97": 0.0008151066431191414,
  "byte_09": 0.0028528732509169948,
  "byte_5e": 0.0005434044287460942,
  "byte_a7": 0.0008151066431191414,
  "byte_b3": 0.0008151066431191414,
  "byte_27": 0.0004075533215595707,
  "byte_0a": 0.007200108680885749,
  "byte_9f": 0.0002717022143730471,
  "byte_b7": 0.0004075533215595707,
  "byte_8c": 0.0004075533215595707,
  "byte_13": 0.0010868088574921885,
  "byte_b5": 0.0004075533215595707,
  "byte_31": 0.000950957750305665,
  "byte_53": 0.0005434044287460942,
  "byte_d9": 0.0002717022143730471,
  "byte_18": 0.0004075533215595707,
  "byte_0d": 0.000950957750305665,
  "byte_dd": 0.000950957750305665,
  "byte_08": 0.0031245754652900423,
  "byte_23": 0.0005434044287460942,
  "byte_b8": 0.0004075533215595707,
  "byte_72": 0.0008151066431191414,
  "byte_33": 0.0033962776796630893,
  "byte_26": 0.00013585110718652356,
  "byte_a2": 0.0013585110718652357,
  "byte_15": 0.023773943757641625,
  "byte_3c": 0.0004075533215595707,
  "byte_e5": 0.0006792555359326179,
  "byte_67": 0.0006792555359326179,
  "byte_e3": 0.0002717022143730471,
  "byte_32": 0.0006792555359326179,
  "byte_51": 0.01032468414617579,
  "byte_05": 0.004211384322782231,
  "byte_0e": 0.0005434044287460942,
  "byte_41": 0.0002717022143730471,
  "byte_d0": 0.0002717022143730471,
  "byte_65": 0.0004075533215595707,
  "byte_44": 0.0004075533215595707,
  "byte_77": 0.0005434044287460942,
  "byte_c5": 0.00013585110718652356,
  "byte_da": 0.0004075533215595707,
  "byte_4a": 0.0004075533215595707,
  "byte_df": 0.0002717022143730471,
  "byte_25": 0.0004075533215595707,
  "byte_54": 0.009373726395870126,
  "byte_4d": 0.0006792555359326179,
  "byte_50": 0.03654394783317484,
  "byte_ea": 0.00013585110718652356,
  "byte_6f": 0.0004075533215595707,
  "byte_a5": 0.0005434044287460942,
  "byte_7a": 0.0005434044287460942,
  "byte_70": 0.0004075533215595707,
  "byte_a0": 0.0002717022143730471,
  "byte_82": 0.011683195218041027,
  "byte_12": 0.0013585110718652357,
  "byte_f6": 0.0005434044287460942,
  "byte_fc": 0.0005434044287460942,
  "byte_5c": 0.0006792555359326179,
  "byte_46": 0.0006792555359326179,
  "byte_cd": 0.0005434044287460942,
  "byte_07": 0.0024453199293574244,
  "byte_8f": 0.0004075533215595707,
  "byte_d3": 0.0002717022143730471,
  "byte_ab": 0.0004075533215595707,
  "byte_95": 0.0004075533215595707,
  "byte_d8": 0.0005434044287460942,
  "byte_9b": 0.0006792555359326179,
  "byte_98": 0.0004075533215595707,
  "byte_2f": 0.0002717022143730471,
  "byte_9a": 0.00013585110718652356,
  "byte_a6": 0.0004075533215595707,
  "byte_f9": 0.0002717022143730471,
  "byte_e1": 0.0006792555359326179,
  "byte_a8": 0.00013585110718652356,
  "byte_1c": 0.0010868088574921885,
  "byte_3b": 0.0004075533215595707,
  "byte_a9": 0.00013585110718652356,
  "byte_9c": 0.0004075533215595707,
  "byte_bb": 0.0002717022143730471,
  "byte_cc": 0.0006792555359326179,
  "byte_b9": 0.0005434044287460942,
  "byte_21": 0.0002717022143730471,
  "byte_cb": 0.0002717022143730471,
  "byte_7b": 0.0004075533215595707,
  "byte_86": 0.0012226599646787122,
  "byte_73": 0.015758728433636734,
  "byte_d6": 0.0002717022143730471,
  "byte_48": 0.00013585110718652356,
  "byte_47": 0.00013585110718652356,
  "byte_8b": 0.0002717022143730471,
  "byte_62": 0.0005434044287460942,
  "byte_ed": 0.0004075533215595707,
  "byte_3e": 0.0005434044287460942,
  "byte_b6": 0.00013585110718652356,
  "byte_e2": 0.0006792555359326179,
  "byte_8d": 0.0006792555359326179,
  "byte_71": 0.0006792555359326179,
  "byte_2d": 0.0002717022143730471,
  "byte_29": 0.0005434044287460942,
  "byte_7d": 0.0005434044287460942,
  "byte_5b": 0.026490965901372097,
  "byte_92": 0.005569895394647467,
  "byte_34": 0.004211384322782231,
  "byte_43": 0.0004075533215595707,
  "byte_11": 0.0017660643934248063,
  "byte_c4": 0.0005434044287460942,
  "byte_0b": 0.0012226599646787122,
  "byte_56": 0.010596386360548838,
  "byte_e7": 0.0002717022143730471,
  "byte_f3": 0.0028528732509169948,
  "byte_81": 0.024996603722320338,
  "byte_55": 0.0029887243581035185,
  "byte_20": 0.018339899470180682,
  "byte_7f": 0.0014943621790517593,
  "byte_6a": 0.0005434044287460942,
  "byte_0f": 0.0002717022143730471,
  "byte_fb": 0.00013585110718652356,
  "byte_88": 0.0004075533215595707,
  "byte_2b": 0.0005434044287460942,
  "byte_74": 0.00013585110718652356,
  "byte_d2": 0.0002717022143730471,
  "byte_1f": 0.000950957750305665,
  "byte_28": 0.0004075533215595707,
  "byte_6c": 0.0004075533215595707,
  "byte_2c": 0.00013585110718652356,
  "byte_79": 0.0004075533215595707,
  "byte_b4": 0.00013585110718652356,
  "byte_91": 0.013177557397092787,
  "byte_a3": 0.0006792555359326179,
  "byte_ac": 0.0002717022143730471,
  "byte_83": 0.004618937644341801,
  "byte_ec": 0.0004075533215595707,
  "byte_84": 0.0023094688221709007,
  "byte_d1": 0.0005434044287460942,
  "byte_19": 0.0020377666077978536,
  "byte_d7": 0.00013585110718652356,
  "byte_f7": 0.0006792555359326179,
  "byte_ee": 0.0005434044287460942,
  "byte_7e": 0.0002717022143730471,
  "byte_1d": 0.0004075533215595707,
  "byte_3f": 0.0004075533215595707,
  "byte_9e": 0.0005434044287460942,
  "byte_ef": 0.0005434044287460942,
  "byte_f8": 0.00013585110718652356,
  "byte_1a": 0.0014943621790517593,
  "byte_1e": 0.0005434044287460942,
  "byte_e8": 0.00013585110718652356,
  "byte_db": 0.00013585110718652356,
  "byte_24": 0.00013585110718652356,
  "byte_b1": 0.0002717022143730471,
  "byte_e6": 0.0002717022143730471,
  "byte_c8": 0.0008151066431191414,
  "byte_ce": 0.0002717022143730471,
  "byte_8a": 0.0002717022143730471,
  "byte_ca": 0.00013585110718652356,
  "byte_af": 0.0005434044287460942,
  "byte_30": 0.0006792555359326179,
  "byte_4e": 0.00013585110718652356,
  "byte_17": 0.0014943621790517593,
  "byte_f5": 0.0006792555359326179,
  "byte_1b": 0.0008151066431191414,
  "byte_3d": 0.0006792555359326179,
  "byte_89": 0.0002717022143730471,
  "byte_4f": 0.0002717022143730471,
  "byte_c2": 0.0005434044287460942,
  "byte_dc": 0.0004075533215595707,
  "byte_39": 0.0002717022143730471,
  "byte_42": 0.0005434044287460942,
  "byte_59": 0.0004075533215595707,
  "byte_fe": 0.0005434044287460942,
  "byte_ba": 0.0002717022143730471,
  "byte_4b": 0.0004075533215595707,
  "byte_85": 0.0008151066431191414,
  "byte_eb": 0.0006792555359326179,
  "byte_c0": 0.0002717022143730471,
  "byte_b2": 0.0002717022143730471,
  "byte_c7": 0.00013585110718652356,
  "byte_c3": 0.0002717022143730471,
  "byte_0c": 0.0013585110718652357,
  "byte_a1": 0.0008151066431191414,
  "byte_ad": 0.0006792555359326179,
  "byte_c9": 0.00013585110718652356,
  "byte_e9": 0.00013585110718652356,
  "byte_99": 0.00013585110718652356,
  "byte_22": 0.0002717022143730471,
  "byte_94": 0.0004075533215595707,
  "byte_a4": 0.00013585110718652356,
  "byte_69": 0.0004075533215595707,
  "byte_64": 0.0004075533215595707,
  "byte_f2": 0.0002717022143730471,
  "byte_b0": 0.0004075533215595707,
  "byte_68": 0.0004075533215595707,
  "byte_37": 0.0004075533215595707,
  "byte_aa": 0.0002717022143730471,
  "byte_f1": 0.0006792555359326179,
  "byte_5a": 0.0004075533215595707,
  "byte_93": 0.0004075533215595707,
  "byte_c1": 0.00013585110718652356,
  "byte_3a": 0.00013585110718652356,
  "byte_2a": 0.00013585110718652356,
  "byte_ae": 0.0002717022143730471,
  "byte_87": 0.0002717022143730471,
  "byte_38": 0.00013585110718652356,
  "byte_45": 0.0002717022143730471,
  "byte_be": 0.00013585110718652356,
  "byte_8e": 0.0002717022143730471,
  "byte_6b": 0.00013585110718652356,
  "byte_e0": 0.00013585110718652356,
  "byte_fa": 0.0002717022143730471,
  "byte_cf": 0.00013585110718652356,
  "byte_76": 0.0002717022143730471,
  "byte_2e": 0.00013585110718652356,
  "byte_c6": 0.00013585110718652356,
  "byte_6e": 0.0002717022143730471,
  "byte_bf": 0.0002717022143730471,
  "byte_5f": 0.0002717022143730471,
  "byte_58": 0.00013585110718652356,
  "byte_4c": 0.00013585110718652356,
  "byte_f4": 0.00013585110718652356,
  "num_nodes": 2,
  "num_edges": 1,
  "avg_degree": 1.0,
  "density": 0.5,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 2,
  "event_nums": 0,
  "creation_block": 6239652,
  "creation_timestamp": 1535618149,
  "life_time": 2801.0,
  "duration_seconds": 41392.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 3,
  "num_buyers": 1,
  "num_sellers": 1,
  "num_creator_transfers": 0,
  "buy_amt": 0,
  "sell_amt": 0.0,
  "avg_value": 0.0,
  "txn_per_block": 0.0007137758743754461,
  "avg_gas_limit": 1114417.5,
  "std_gas_limit": 1078489.5,
  "avg_gas_used": 1114417.5,
  "std_gas_used": 1078489.5,
  "avg_gas_price": 2450000000.0,
  "std_gas_price": 450000000.0,
  "atinversebrah_num": 1,
  "transfer_num": 1,
  "timeline_sequence": [
    [
      6239652,
      1535618149,
      5,
      120,
      0,
      2192907,
      2900000000,
      0,
      1,
      6068912,
      2192907,
      16881228
    ],
    [
      6242453,
      1535659541,
      6,
      115,
      0,
      35928,
      2000000000,
      1,
      0,
      7920383,
      35928,
      16878427
    ]
  ],
  "sourcecode": "pragma solidity ^0.4.24;\n\ncontract IMigrationContract {\n    function migrate(address addr, uint256 nas) public returns (bool success);\n}\n\n/* \u7075\u611f\u6765\u81ea\u4e8eNAS  coin*/\ncontract SafeMath {\n    function safeAdd(uint256 x, uint256 y) internal pure returns(uint256) {\n        uint256 z = x + y;\n        assert((z >= x) && (z >= y));\n        return z;\n    }\n\n    function safeSubtract(uint256 x, uint256 y) internal pure returns(uint256) {\n        assert(x >= y);\n        uint256 z = x - y;\n        return z;\n    }\n\n    function safeMult(uint256 x, uint256 y) internal pure returns(uint256) {\n        uint256 z = x * y;\n        assert((x == 0)||(z/x == y));\n        return z;\n    }\n\n}\n\ncontract Token {\n    uint256 public totalSupply;\n    function balanceOf(address _owner) public constant returns (uint256 balance);\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n    function approve(address _spender, uint256 _value) public returns (bool success);\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n\n/*  ERC 20 token */\ncontract StandardToken is Token {\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        if (balances[msg.sender] >= _value && _value > 0) {\n            balances[msg.sender] -= _value;\n            balances[_to] += _value;\n            emit Transfer(msg.sender, _to, _value);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\n            balances[_to] += _value;\n            balances[_from] -= _value;\n            allowed[_from][msg.sender] -= _value;\n            emit Transfer(_from, _to, _value);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n}\n\ncontract KMBToken is StandardToken, SafeMath {\n\n    // metadata\n    string  public constant name = \"KMB\";\n    string  public constant symbol = \"KMB\";\n    uint256 public constant decimals = 4;\n    string  public version = \"1.0\";\n\n    // contracts\n    address public ethFundDeposit;          // ETH\u5b58\u653e\u5730\u5740\n    address public newContractAddr;         // token\u66f4\u65b0\u5730\u5740\n\n    // crowdsale parameters\n    bool    public isFunding;                // \u72b6\u6001\u5207\u6362\u5230true\n    uint256 public fundingStartBlock;\n    uint256 public fundingStopBlock;\n\n    uint256 public currentSupply;           // \u6b63\u5728\u552e\u5356\u4e2d\u7684tokens\u6570\u91cf\n    uint256 public tokenRaised = 0;         // \u603b\u7684\u552e\u5356\u6570\u91cftoken\n    uint256 public tokenMigrated = 0;     // \u603b\u7684\u5df2\u7ecf\u4ea4\u6613\u7684 token\n    uint256 public tokenExchangeRate = 300;             // \u4ee3\u5e01\u5151\u6362\u6bd4\u4f8b N\u4ee3\u5e01 \u5151\u6362 1 ETH\n\n    // events\n    event AllocateToken(address indexed _to, uint256 _value);   // \u5206\u914d\u7684\u79c1\u6709\u4ea4\u6613token;\n    event IssueToken(address indexed _to, uint256 _value);      // \u516c\u5f00\u53d1\u884c\u552e\u5356\u7684token;\n    event IncreaseSupply(uint256 _value);\n    event DecreaseSupply(uint256 _value);\n    event Migrate(address indexed _to, uint256 _value);\n\n    // \u8f6c\u6362\n    function formatDecimals(uint256 _value) internal pure returns (uint256 ) {\n        return _value * 10 ** decimals;\n    }\n\n    // constructor\n    constructor(\n        address _ethFundDeposit,\n        uint256 _currentSupply) public\n    {\n        ethFundDeposit = _ethFundDeposit;\n\n        isFunding = false;                           //\u901a\u8fc7\u63a7\u5236\u9884CrowdS ale\u72b6\u6001\n        fundingStartBlock = 0;\n        fundingStopBlock = 0;\n\n        currentSupply = formatDecimals(_currentSupply);\n        totalSupply = formatDecimals(1000000000);\n        balances[msg.sender] = totalSupply;\n        require(currentSupply <= totalSupply);\n    }\n\n    modifier isOwner()  { require(msg.sender == ethFundDeposit); _; }\n\n    ///  \u8bbe\u7f6etoken\u6c47\u7387\n    function setTokenExchangeRate(uint256 _tokenExchangeRate) isOwner external {\n        require(_tokenExchangeRate != 0);\n        require(_tokenExchangeRate != tokenExchangeRate);\n\n        tokenExchangeRate = _tokenExchangeRate;\n    }\n\n    /// @dev \u8d85\u53d1token\u5904\u7406\n    function increaseSupply (uint256 _value) isOwner external {\n        uint256 value = formatDecimals(_value);\n        require(value + currentSupply <= totalSupply);\n        currentSupply = safeAdd(currentSupply, value);\n        emit IncreaseSupply(value);\n    }\n\n    /// @dev \u88ab\u76d7token\u5904\u7406\n    function decreaseSupply (uint256 _value) isOwner external {\n        uint256 value = formatDecimals(_value);\n        require(value + tokenRaised <= currentSupply);\n\n        currentSupply = safeSubtract(currentSupply, value);\n        emit DecreaseSupply(value);\n    }\n\n    ///  \u542f\u52a8\u533a\u5757\u68c0\u6d4b \u5f02\u5e38\u7684\u5904\u7406\n    function startFunding (uint256 _fundingStartBlock, uint256 _fundingStopBlock) isOwner external {\n        require(!isFunding);\n        require(_fundingStartBlock < _fundingStopBlock);\n        require(block.number < _fundingStartBlock);\n\n        fundingStartBlock = _fundingStartBlock;\n        fundingStopBlock = _fundingStopBlock;\n        isFunding = true;\n    }\n\n    ///  \u5173\u95ed\u533a\u5757\u5f02\u5e38\u5904\u7406\n    function stopFunding() isOwner external {\n        require(isFunding);\n        isFunding = false;\n    }\n\n    /// \u5f00\u53d1\u4e86\u4e00\u4e2a\u65b0\u7684\u5408\u540c\u6765\u63a5\u6536token\uff08\u6216\u8005\u66f4\u65b0token\uff09\n    function setMigrateContract(address _newContractAddr) isOwner external {\n        require(_newContractAddr != newContractAddr);\n        newContractAddr = _newContractAddr;\n    }\n\n    /// \u8bbe\u7f6e\u65b0\u7684\u6240\u6709\u8005\u5730\u5740\n    function changeOwner(address _newFundDeposit) isOwner() external {\n        require(_newFundDeposit != address(0x0));\n        ethFundDeposit = _newFundDeposit;\n    }\n\n    ///\u8f6c\u79fbtoken\u5230\u65b0\u7684\u5408\u7ea6\n    function migrate() external {\n        require(!isFunding);\n        require(newContractAddr != address(0x0));\n\n        uint256 tokens = balances[msg.sender];\n        require(tokens != 0);\n\n        balances[msg.sender] = 0;\n        tokenMigrated = safeAdd(tokenMigrated, tokens);\n\n        IMigrationContract newContract = IMigrationContract(newContractAddr);\n        require(newContract.migrate(msg.sender, tokens));\n\n        emit Migrate(msg.sender, tokens);               // log it\n    }\n\n    /// \u8f6c\u8d26ETH \u5230\u56e2\u961f\n    function transferETH() isOwner external {\n        require(address(this).balance != 0);\n        require(ethFundDeposit.send(address(this).balance));\n    }\n\n    ///  \u5c06token\u5206\u914d\u5230\u9884\u5904\u7406\u5730\u5740\u3002\n    function allocateToken (address _addr, uint256 _eth) isOwner external {\n        require(_eth != 0);\n        require(_addr != address(0x0));\n\n        uint256 tokens = safeMult(formatDecimals(_eth), tokenExchangeRate);\n        require(tokens + tokenRaised <= currentSupply);\n\n        tokenRaised = safeAdd(tokenRaised, tokens);\n        balances[_addr] += tokens;\n\n        emit AllocateToken(_addr, tokens);  // \u8bb0\u5f55token\u65e5\u5fd7\n    }\n\n    /// \u8d2d\u4e70token\n    function () public payable {\n        require(isFunding);\n        require(msg.value != 0);\n\n        require(block.number >= fundingStartBlock);\n        require(block.number <= fundingStopBlock);\n\n        uint256 tokens = safeMult(msg.value, tokenExchangeRate);\n        require(tokens + tokenRaised <= currentSupply);\n\n        tokenRaised = safeAdd(tokenRaised, tokens);\n        balances[msg.sender] += tokens;\n\n        emit IssueToken(msg.sender, tokens);  //\u8bb0\u5f55\u65e5\u5fd7\n    }\n}"
}