{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE PUSH1 MLOAD PUSH1 DUP1 PUSH3 DUP4 CODECOPY DUP2 ADD PUSH1 MSTORE MLOAD PUSH1 DUP1 SLOAD CALLER PUSH1 PUSH1 PUSH1 EXP SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 PUSH1 PUSH1 EXP SUB DUP4 AND OR SWAP1 SSTORE CALLVALUE PUSH1 DUP2 SWAP1 SSTORE PUSH3 SWAP1 PUSH3 SWAP1 PUSH2 PUSH5 PUSH3 DUP2 MUL PUSH3 OR DIV JUMP JUMPDEST PUSH1 SLOAD SWAP1 PUSH5 PUSH3 PUSH3 DUP3 MUL OR DIV JUMP JUMPDEST PUSH1 SSTORE POP PUSH3 JUMP JUMPDEST PUSH1 DUP1 DUP1 DUP4 GT PUSH3 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP3 DUP5 DUP2 ISZERO ISZERO PUSH3 JUMPI UNKNOWN_0xfe JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH3 JUMPI PUSH1 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 DUP1 PUSH3 PUSH1 CODECOPY PUSH1 RETURN STOP PUSH1 PUSH1 MSTORE PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH4 PUSH29 PUSH1 CALLDATALOAD DIV AND PUSH4 DUP2 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH2 PUSH1 CALLDATALOAD ISZERO ISZERO PUSH1 CALLDATALOAD ISZERO ISZERO PUSH1 CALLDATALOAD ISZERO ISZERO PUSH1 CALLDATALOAD ISZERO ISZERO PUSH1 CALLDATALOAD ISZERO ISZERO PUSH1 CALLDATALOAD ISZERO ISZERO PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 CALLDATALOAD ISZERO ISZERO PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH1 PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 DUP1 MLOAD PUSH1 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH2 SWAP2 CALLDATASIZE SWAP2 PUSH1 SWAP2 PUSH1 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP4 SWAP7 POP PUSH2 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST PUSH1 DUP2 PUSH1 DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SSTORE JUMP JUMPDEST PUSH1 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SSTORE JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP2 PUSH1 DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 PUSH2 PUSH2 JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 PUSH2 NUMBER DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP2 GT JUMPDEST ISZERO PUSH2 JUMPI PUSH1 SLOAD CALLER PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 DUP2 ADD SLOAD DUP3 MLOAD DUP6 DUP2 MSTORE SWAP4 DUP5 ADD DUP8 SWAP1 MSTORE SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 SWAP6 PUSH32 SWAP5 SWAP4 SWAP1 SWAP3 SWAP2 PUSH1 ADD SWAP1 DUP5 SWAP1 PUSH2 DUP2 ADD DUP4 DUP4 PUSH1 DUP5 ADD JUMPDEST DUP3 SLOAD PUSH2 DUP4 SWAP1 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO DUP2 MSTORE PUSH1 PUSH1 SWAP3 DUP4 ADD DUP2 DUP2 DIV SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP4 SUB SWAP1 SWAP3 MUL SWAP2 ADD DUP1 DUP5 GT PUSH2 JUMPI POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP5 POP SWAP3 POP POP POP LOG3 CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP2 SHA3 DUP2 DUP2 SSTORE PUSH1 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 PUSH2 PUSH1 DUP4 ADD DUP3 PUSH2 JUMP JUMPDEST POP POP PUSH2 JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST CALLVALUE SWAP3 POP PUSH2 DUP4 PUSH2 JUMP JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 MLOAD PUSH1 PUSH1 EXP PUSH3 MUL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 MLOAD PUSH1 PUSH1 EXP PUSH3 MUL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 REVERT JUMPDEST PUSH1 SLOAD DUP4 LT ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH1 SLOAD DUP4 GT ISZERO JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 MLOAD PUSH1 PUSH1 EXP PUSH3 MUL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 PUSH1 ADD SLOAD ISZERO PUSH2 JUMPI PUSH1 DUP1 MLOAD PUSH1 PUSH1 EXP PUSH3 MUL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 REVERT JUMPDEST PUSH1 DUP1 MLOAD PUSH1 DUP2 ADD DUP3 MSTORE DUP11 ISZERO ISZERO DUP2 MSTORE DUP10 ISZERO ISZERO PUSH1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP10 ISZERO ISZERO DUP3 DUP5 ADD MSTORE DUP9 ISZERO ISZERO PUSH1 DUP4 ADD MSTORE DUP8 ISZERO ISZERO PUSH1 DUP4 ADD MSTORE DUP7 ISZERO ISZERO PUSH1 DUP4 ADD MSTORE CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 SHA3 PUSH1 DUP2 ADD DUP6 SWAP1 SSTORE NUMBER DUP2 SSTORE SWAP1 SWAP3 POP PUSH2 SWAP1 PUSH1 ADD DUP4 PUSH1 PUSH2 JUMP JUMPDEST POP PUSH1 SLOAD PUSH2 SWAP1 DUP5 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SSTORE PUSH1 SLOAD PUSH2 SWAP1 PUSH1 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SSTORE PUSH1 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 SWAP1 DUP6 SWAP1 DUP6 SWAP1 TIMESTAMP SWAP1 PUSH1 DUP2 ADD DUP4 PUSH1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP4 POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 SLOAD PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH2 PUSH2 JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP2 SHA3 SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH1 PUSH2 NUMBER DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP2 GT JUMPDEST ISZERO PUSH2 JUMPI PUSH1 SLOAD CALLER PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 DUP2 ADD SLOAD DUP3 MLOAD DUP6 DUP2 MSTORE SWAP4 DUP5 ADD DUP8 SWAP1 MSTORE SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 SWAP6 PUSH32 SWAP5 SWAP4 SWAP1 SWAP3 SWAP2 PUSH1 ADD SWAP1 DUP5 SWAP1 PUSH2 DUP2 ADD DUP4 DUP4 PUSH1 DUP5 ADD JUMPDEST DUP3 SLOAD PUSH2 DUP4 SWAP1 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO DUP2 MSTORE PUSH1 PUSH1 SWAP3 DUP4 ADD DUP2 DUP2 DIV SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP4 SUB SWAP1 SWAP3 MUL SWAP2 ADD DUP1 DUP5 GT PUSH2 JUMPI POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP5 POP SWAP3 POP POP POP LOG3 CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP2 SHA3 DUP2 DUP2 SSTORE PUSH1 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 PUSH2 PUSH1 DUP4 ADD DUP3 PUSH2 JUMP JUMPDEST POP POP PUSH2 JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD BLOCKHASH ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 MLOAD PUSH1 PUSH1 EXP PUSH3 MUL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 REVERT JUMPDEST PUSH2 PUSH2 PUSH2 JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP1 DUP3 SHA3 DUP2 MLOAD PUSH1 DUP2 ADD SWAP3 DUP4 SWAP1 MSTORE SWAP4 SWAP10 POP PUSH1 ADD SWAP2 PUSH1 SWAP2 SWAP1 DUP4 SWAP1 DUP6 JUMPDEST DUP3 SLOAD PUSH2 DUP4 SWAP1 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO DUP2 MSTORE PUSH1 PUSH1 SWAP3 DUP4 ADD DUP2 DUP2 DIV SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP4 SUB SWAP1 SWAP3 MUL SWAP2 ADD DUP1 DUP5 GT PUSH2 JUMPI POP POP CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 PUSH1 ADD SLOAD SWAP5 SWAP10 POP SWAP4 SWAP8 POP PUSH2 SWAP4 POP DUP9 SWAP3 POP PUSH2 SWAP2 POP POP JUMP JUMPDEST SWAP3 POP PUSH2 DUP7 PUSH2 JUMP JUMPDEST PUSH1 EQ DUP1 ISZERO PUSH2 JUMPI POP DUP5 MLOAD ISZERO ISZERO PUSH1 EQ JUMPDEST ISZERO PUSH2 JUMPI PUSH2 PUSH2 PUSH1 PUSH2 DUP8 DUP8 PUSH4 PUSH2 AND JUMP JUMPDEST SWAP1 PUSH4 PUSH2 AND JUMP JUMPDEST DUP4 SWAP1 PUSH4 PUSH2 AND JUMP JUMPDEST SWAP2 POP PUSH2 JUMP JUMPDEST PUSH2 DUP7 PUSH2 JUMP JUMPDEST PUSH1 EQ DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 EQ JUMPDEST ISZERO PUSH2 JUMPI PUSH2 PUSH2 PUSH1 PUSH2 DUP8 DUP8 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH2 DUP7 PUSH2 JUMP JUMPDEST PUSH1 EQ DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 EQ JUMPDEST ISZERO PUSH2 JUMPI PUSH2 PUSH2 PUSH1 PUSH2 DUP8 DUP8 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH2 DUP7 PUSH2 JUMP JUMPDEST PUSH1 EQ DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 EQ JUMPDEST ISZERO PUSH2 JUMPI PUSH2 PUSH2 PUSH1 PUSH2 DUP8 DUP8 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH2 DUP7 PUSH2 JUMP JUMPDEST PUSH1 EQ DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 EQ JUMPDEST ISZERO PUSH2 JUMPI PUSH2 PUSH2 PUSH1 PUSH2 DUP8 DUP8 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH2 DUP7 PUSH2 JUMP JUMPDEST PUSH1 EQ DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 EQ JUMPDEST ISZERO PUSH2 JUMPI PUSH2 PUSH2 PUSH1 PUSH2 DUP8 DUP8 PUSH4 PUSH2 AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 SLOAD DUP5 LT ISZERO DUP1 ISZERO PUSH2 JUMPI POP DUP6 ISZERO JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 SLOAD GT JUMPDEST ISZERO PUSH2 JUMPI PUSH1 SLOAD PUSH2 SWAP1 DUP4 SWAP1 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SLOAD PUSH1 DUP1 MLOAD SWAP2 DUP3 MSTORE TIMESTAMP PUSH1 DUP4 ADD MSTORE DUP1 MLOAD SWAP3 SWAP5 POP CALLER SWAP3 PUSH32 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 PUSH1 PUSH1 SSTORE JUMPDEST PUSH1 DUP3 GT ISZERO PUSH2 JUMPI PUSH1 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 MUL SWAP1 DUP5 SWAP1 PUSH1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP PUSH1 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SSTORE JUMPDEST PUSH2 PUSH2 DUP6 PUSH2 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SLOAD SWAP1 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SSTORE CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP2 SHA3 DUP2 DUP2 SSTORE PUSH1 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 PUSH2 PUSH1 DUP4 ADD DUP3 PUSH2 JUMP JUMPDEST POP POP DUP6 CALLER PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH32 DUP5 PUSH1 SLOAD DUP9 DUP11 DUP10 PUSH1 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 ADD DUP6 DUP2 MSTORE PUSH1 ADD DUP5 DUP2 MSTORE PUSH1 ADD DUP4 PUSH1 PUSH1 MUL DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP6 POP POP POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 PUSH1 PUSH1 DUP4 AND PUSH1 DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST ADD DUP1 SLOAD PUSH20 NOT AND PUSH1 PUSH1 PUSH1 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST ADDRESS BALANCE JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 DUP2 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 AND ISZERO ISZERO PUSH1 EQ PUSH2 JUMPI PUSH1 DUP1 MLOAD PUSH1 PUSH1 EXP PUSH3 MUL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 SLOAD SWAP1 SWAP2 POP DUP2 LT PUSH2 JUMPI PUSH1 SLOAD PUSH1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB DUP5 AND SWAP2 DUP1 ISZERO PUSH2 MUL SWAP2 PUSH1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 MUL SWAP1 DUP4 SWAP1 PUSH1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP JUMPDEST POP POP PUSH1 PUSH1 DUP2 SWAP1 SSTORE PUSH1 SSTORE JUMP JUMPDEST PUSH1 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SSTORE JUMP JUMPDEST PUSH1 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SSTORE JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH2 SWAP1 PUSH2 PUSH2 PUSH1 PUSH2 DUP8 PUSH2 PUSH4 PUSH2 AND JUMP JUMPDEST DUP6 SWAP1 PUSH4 PUSH2 AND JUMP JUMPDEST SWAP1 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST GT ISZERO PUSH2 JUMPI POP PUSH1 PUSH2 JUMP JUMPDEST POP PUSH1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP1 PUSH1 PUSH1 SLOAD PUSH2 PUSH2 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 JUMPI POP PUSH1 SLOAD TIMESTAMP GT JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 MLOAD PUSH1 PUSH1 EXP PUSH3 MUL DUP2 MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH1 PUSH1 DUP3 ADD MSTORE PUSH32 PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 REVERT JUMPDEST PUSH20 SWAP3 POP PUSH2 PUSH2 JUMP JUMPDEST SWAP2 POP PUSH2 PUSH1 SLOAD DUP4 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 POP PUSH2 TIMESTAMP PUSH3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SSTORE PUSH1 SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH4 DUP3 PUSH1 MLOAD DUP3 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP PUSH1 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 DUP2 ADD DUP7 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 SWAP5 POP SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP3 POP SWAP1 POP LOG1 POP POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH20 DUP2 JUMP JUMPDEST PUSH1 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH2 SWAP1 CALLVALUE PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SSTORE JUMP JUMPDEST PUSH1 DUP1 DUP1 JUMPDEST PUSH1 DUP2 LT ISZERO PUSH2 JUMPI DUP4 DUP2 PUSH1 DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 MUL ADD MLOAD ISZERO ISZERO PUSH1 EQ ISZERO PUSH2 JUMPI PUSH2 DUP3 PUSH1 PUSH4 PUSH2 AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 ADD PUSH2 JUMP JUMPDEST DUP2 PUSH1 EQ ISZERO PUSH2 JUMPI PUSH2 SWAP3 POP PUSH2 JUMP JUMPDEST DUP2 PUSH1 EQ ISZERO PUSH2 JUMPI PUSH2 SWAP3 POP PUSH2 JUMP JUMPDEST DUP2 PUSH1 EQ ISZERO PUSH2 JUMPI PUSH1 SWAP3 POP PUSH2 JUMP JUMPDEST DUP2 PUSH1 EQ ISZERO PUSH2 JUMPI PUSH1 SWAP3 POP PUSH2 JUMP JUMPDEST DUP2 PUSH1 EQ ISZERO PUSH2 JUMPI PUSH1 SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP3 AND PUSH1 DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 DUP3 AND PUSH1 DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH1 PUSH1 DUP4 AND PUSH1 DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST ADD DUP1 SLOAD PUSH20 NOT AND PUSH1 PUSH1 PUSH1 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 DUP1 DUP4 DUP4 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP DUP1 DUP3 SUB DUP1 JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SLOAD DUP2 MLOAD SWAP1 BLOCKHASH DUP2 DUP5 ADD DUP2 SWAP1 MSTORE DUP2 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE DUP1 MLOAD SWAP4 SWAP5 SWAP4 DUP7 SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 DUP4 LT PUSH2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 SWAP4 SWAP1 SWAP4 SUB PUSH2 EXP PUSH1 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH1 MLOAD SWAP3 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 SHA3 SWAP3 POP POP POP DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST MOD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 DUP1 DUP3 GT DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP3 GT ISZERO JUMPDEST DUP1 PUSH2 JUMPI POP PUSH2 DUP3 GT DUP1 ISZERO PUSH2 JUMPI POP PUSH2 DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 JUMPI POP PUSH1 PUSH2 JUMP JUMPDEST PUSH1 DUP3 GT DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP3 GT ISZERO JUMPDEST DUP1 PUSH2 JUMPI POP PUSH2 DUP3 GT DUP1 ISZERO PUSH2 JUMPI POP PUSH2 DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 JUMPI POP PUSH1 PUSH2 JUMP JUMPDEST PUSH1 DUP3 GT DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP3 GT ISZERO JUMPDEST DUP1 PUSH2 JUMPI POP PUSH2 DUP3 GT DUP1 ISZERO PUSH2 JUMPI POP PUSH2 DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 JUMPI POP PUSH1 PUSH2 JUMP JUMPDEST PUSH1 DUP3 GT DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP3 GT ISZERO JUMPDEST DUP1 PUSH2 JUMPI POP PUSH2 DUP3 GT DUP1 ISZERO PUSH2 JUMPI POP PUSH2 DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 JUMPI POP PUSH1 PUSH2 JUMP JUMPDEST PUSH1 DUP3 GT DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP3 GT ISZERO JUMPDEST DUP1 PUSH2 JUMPI POP PUSH2 DUP3 GT DUP1 ISZERO PUSH2 JUMPI POP PUSH2 DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 JUMPI POP PUSH1 PUSH2 JUMP JUMPDEST PUSH1 DUP3 GT DUP1 ISZERO PUSH2 JUMPI POP PUSH2 DUP3 GT ISZERO JUMPDEST DUP1 PUSH2 JUMPI POP PUSH2 DUP3 GT DUP1 ISZERO PUSH2 JUMPI POP PUSH2 DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 JUMPI POP PUSH1 PUSH2 JUMP JUMPDEST PUSH1 DUP1 DUP4 ISZERO ISZERO PUSH2 JUMPI PUSH1 SWAP2 POP PUSH2 JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 DUP1 DUP4 GT PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 PUSH1 SWAP1 PUSH1 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 DUP4 ADD SWAP2 DUP4 SWAP1 DUP3 ISZERO PUSH2 JUMPI SWAP2 PUSH1 MUL DUP3 ADD PUSH1 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 ADD SWAP3 PUSH1 ADD PUSH1 DUP2 PUSH1 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 SUB MUL PUSH2 JUMP JUMPDEST DUP1 ISZERO PUSH2 JUMPI DUP3 DUP2 PUSH2 EXP DUP2 SLOAD SWAP1 PUSH1 MUL NOT AND SWAP1 SSTORE PUSH1 ADD PUSH1 DUP2 PUSH1 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 SUB MUL PUSH2 JUMP JUMPDEST POP JUMPDEST POP PUSH2 SWAP3 SWAP2 POP PUSH2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 JUMPI DUP1 SLOAD PUSH1 NOT AND DUP2 SSTORE PUSH1 ADD PUSH2 JUMP STOP LOG1 PUSH6 SHA3 UNKNOWN_0x27 CODECOPY PUSH1 XOR DUP2 STATICCALL DUP4 SWAP2 DUP5 ADD SWAP12 UNKNOWN_0xe8 UNKNOWN_0xb6 UNKNOWN_0xd0 PUSH12 SLT ADDMOD UNKNOWN_0x1e SGT STOP UNKNOWN_0x29 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP UNKNOWN_0xcf INVALID_0x76",
  "opcode_entropy": 4.870264483041559,
  "opcode_count": 4141,
  "unique_opcodes": 91,
  "byte_entropy": 6.047557403247697,
  "byte_0x": 0.00015569048731122528,
  "byte_60": 0.09310291141211272,
  "byte_80": 0.03471897867040324,
  "byte_40": 0.007628833878250039,
  "byte_52": 0.016658882142301105,
  "byte_51": 0.009808500700607193,
  "byte_20": 0.015413358243811303,
  "byte_62": 0.0038922621827806323,
  "byte_00": 0.044060407909076754,
  "byte_18": 0.0006227619492449011,
  "byte_f6": 0.00015569048731122528,
  "byte_83": 0.012922310446831698,
  "byte_39": 0.0007784524365561264,
  "byte_81": 0.026934454304841975,
  "byte_01": 0.04359333644714308,
  "byte_0b": 0.006071929005137786,
  "byte_54": 0.011832477035653122,
  "byte_33": 0.006539000467071462,
  "byte_a0": 0.005449167055892885,
  "byte_02": 0.017904406040790907,
  "byte_0a": 0.008718667289428616,
  "byte_03": 0.013389381908765374,
  "byte_19": 0.002179666822357154,
  "byte_91": 0.010586953137163319,
  "byte_82": 0.017281644091546006,
  "byte_16": 0.01650319165498988,
  "byte_17": 0.0040479526700918575,
  "byte_90": 0.03004826405106648,
  "byte_55": 0.005449167055892885,
  "byte_0c": 0.0038922621827806323,
  "byte_34": 0.005137786081270434,
  "byte_7e": 0.00046707146193367583,
  "byte_66": 0.001712595360423478,
  "byte_61": 0.062276194924490116,
  "byte_e8": 0.0006227619492449011,
  "byte_64": 0.004826405106647984,
  "byte_88": 0.002335357309668379,
  "byte_fa": 0.001712595360423478,
  "byte_04": 0.009652810213295967,
  "byte_56": 0.02148528724894909,
  "byte_5b": 0.04156936011209715,
  "byte_08": 0.0040479526700918575,
  "byte_14": 0.016658882142301105,
  "byte_c0": 0.003425190720846956,
  "byte_ad": 0.00031138097462245055,
  "byte_50": 0.03767709792931652,
  "byte_c7": 0.00031138097462245055,
  "byte_11": 0.01089833411178577,
  "byte_98": 0.0006227619492449011,
  "byte_57": 0.027557216254086876,
  "byte_fd": 0.009030048264051066,
  "byte_84": 0.004359333644714308,
  "byte_15": 0.03503035964502569,
  "byte_a4": 0.0006227619492449011,
  "byte_fe": 0.0018682858477347033,
  "byte_94": 0.0028024287716020553,
  "byte_93": 0.005137786081270434,
  "byte_10": 0.007317452903627588,
  "byte_92": 0.0077845243655612646,
  "byte_1f": 0.0007784524365561264,
  "byte_d7": 0.0006227619492449011,
  "byte_f3": 0.001712595360423478,
  "byte_36": 0.0006227619492449011,
  "byte_7f": 0.0026467382842908296,
  "byte_63": 0.009808500700607193,
  "byte_ff": 0.026156001868285848,
  "byte_7c": 0.0006227619492449011,
  "byte_35": 0.0029581192589132805,
  "byte_5e": 0.0007784524365561264,
  "byte_27": 0.00031138097462245055,
  "byte_0d": 0.0029581192589132805,
  "byte_a8": 0.0006227619492449011,
  "byte_f4": 0.0007784524365561264,
  "byte_b8": 0.00046707146193367583,
  "byte_32": 0.001712595360423478,
  "byte_e2": 0.0009341429238673517,
  "byte_df": 0.00031138097462245055,
  "byte_1e": 0.0009341429238673517,
  "byte_c8": 0.0007784524365561264,
  "byte_d4": 0.0006227619492449011,
  "byte_ef": 0.0006227619492449011,
  "byte_f9": 0.00031138097462245055,
  "byte_2e": 0.00046707146193367583,
  "byte_21": 0.0007784524365561264,
  "byte_68": 0.0014012143858010276,
  "byte_30": 0.0006227619492449011,
  "byte_b1": 0.00015569048731122528,
  "byte_b6": 0.00046707146193367583,
  "byte_2c": 0.0007784524365561264,
  "byte_26": 0.0014012143858010276,
  "byte_77": 0.0006227619492449011,
  "byte_ee": 0.00015569048731122528,
  "byte_3b": 0.00046707146193367583,
  "byte_3e": 0.001089833411178577,
  "byte_d0": 0.0006227619492449011,
  "byte_bf": 0.0007784524365561264,
  "byte_53": 0.0006227619492449011,
  "byte_4f": 0.00031138097462245055,
  "byte_12": 0.0014012143858010276,
  "byte_6a": 0.0007784524365561264,
  "byte_79": 0.0006227619492449011,
  "byte_5c": 0.00046707146193367583,
  "byte_97": 0.001089833411178577,
  "byte_5a": 0.0007784524365561264,
  "byte_bb": 0.001089833411178577,
  "byte_8e": 0.0006227619492449011,
  "byte_9f": 0.001089833411178577,
  "byte_bc": 0.00015569048731122528,
  "byte_65": 0.0037365716954694066,
  "byte_37": 0.0007784524365561264,
  "byte_47": 0.0007784524365561264,
  "byte_d1": 0.001089833411178577,
  "byte_69": 0.002179666822357154,
  "byte_d5": 0.00046707146193367583,
  "byte_45": 0.00046707146193367583,
  "byte_e6": 0.00031138097462245055,
  "byte_6c": 0.0009341429238673517,
  "byte_c1": 0.001089833411178577,
  "byte_fb": 0.0006227619492449011,
  "byte_6f": 0.003425190720846956,
  "byte_b9": 0.0006227619492449011,
  "byte_8a": 0.0009341429238673517,
  "byte_22": 0.0006227619492449011,
  "byte_7b": 0.0006227619492449011,
  "byte_1a": 0.0007784524365561264,
  "byte_5f": 0.00015569048731122528,
  "byte_d2": 0.0006227619492449011,
  "byte_4c": 0.00015569048731122528,
  "byte_86": 0.002179666822357154,
  "byte_e5": 0.001712595360423478,
  "byte_8b": 0.00015569048731122528,
  "byte_ea": 0.00031138097462245055,
  "byte_41": 0.00031138097462245055,
  "byte_9a": 0.00015569048731122528,
  "byte_96": 0.0020239763350459287,
  "byte_7d": 0.00046707146193367583,
  "byte_b2": 0.00031138097462245055,
  "byte_99": 0.0006227619492449011,
  "byte_76": 0.001089833411178577,
  "byte_9e": 0.00031138097462245055,
  "byte_b7": 0.00046707146193367583,
  "byte_1c": 0.0006227619492449011,
  "byte_dc": 0.00031138097462245055,
  "byte_d3": 0.00046707146193367583,
  "byte_fc": 0.001089833411178577,
  "byte_de": 0.00015569048731122528,
  "byte_09": 0.003425190720846956,
  "byte_24": 0.0015569048731122529,
  "byte_f8": 0.00031138097462245055,
  "byte_e1": 0.00046707146193367583,
  "byte_a9": 0.00046707146193367583,
  "byte_e3": 0.0006227619492449011,
  "byte_b0": 0.00031138097462245055,
  "byte_48": 0.0009341429238673517,
  "byte_6b": 0.0007784524365561264,
  "byte_9c": 0.00046707146193367583,
  "byte_ae": 0.00031138097462245055,
  "byte_c4": 0.0006227619492449011,
  "byte_cd": 0.003269500233535731,
  "byte_cb": 0.00015569048731122528,
  "byte_eb": 0.00046707146193367583,
  "byte_f7": 0.002179666822357154,
  "byte_05": 0.003269500233535731,
  "byte_1d": 0.0007784524365561264,
  "byte_43": 0.0014012143858010276,
  "byte_49": 0.00015569048731122528,
  "byte_44": 0.0020239763350459287,
  "byte_85": 0.0038922621827806323,
  "byte_dd": 0.00031138097462245055,
  "byte_75": 0.001712595360423478,
  "byte_f2": 0.00015569048731122528,
  "byte_0e": 0.0015569048731122529,
  "byte_07": 0.001089833411178577,
  "byte_f1": 0.0009341429238673517,
  "byte_0f": 0.003269500233535731,
  "byte_58": 0.0009341429238673517,
  "byte_72": 0.0020239763350459287,
  "byte_6d": 0.001712595360423478,
  "byte_78": 0.001712595360423478,
  "byte_a3": 0.0009341429238673517,
  "byte_a6": 0.0006227619492449011,
  "byte_be": 0.00046707146193367583,
  "byte_1b": 0.002179666822357154,
  "byte_2a": 0.00031138097462245055,
  "byte_13": 0.0028024287716020553,
  "byte_3f": 0.00031138097462245055,
  "byte_06": 0.003269500233535731,
  "byte_95": 0.001089833411178577,
  "byte_a2": 0.0015569048731122529,
  "byte_87": 0.003269500233535731,
  "byte_59": 0.0018682858477347033,
  "byte_2d": 0.0007784524365561264,
  "byte_46": 0.0015569048731122529,
  "byte_ab": 0.0007784524365561264,
  "byte_ce": 0.00046707146193367583,
  "byte_ec": 0.00046707146193367583,
  "byte_3a": 0.0007784524365561264,
  "byte_4a": 0.00046707146193367583,
  "byte_3c": 0.0006227619492449011,
  "byte_e4": 0.00015569048731122528,
  "byte_4e": 0.00031138097462245055,
  "byte_74": 0.0031138097462245057,
  "byte_6e": 0.002179666822357154,
  "byte_67": 0.00031138097462245055,
  "byte_73": 0.002179666822357154,
  "byte_70": 0.0006227619492449011,
  "byte_89": 0.0006227619492449011,
  "byte_a1": 0.0007784524365561264,
  "byte_8f": 0.00015569048731122528,
  "byte_4b": 0.0006227619492449011,
  "byte_cc": 0.0015569048731122529,
  "byte_23": 0.00031138097462245055,
  "byte_c2": 0.0006227619492449011,
  "byte_9b": 0.00031138097462245055,
  "byte_da": 0.00015569048731122528,
  "byte_c3": 0.0009341429238673517,
  "byte_b5": 0.00046707146193367583,
  "byte_42": 0.001089833411178577,
  "byte_a5": 0.00015569048731122528,
  "byte_b3": 0.00046707146193367583,
  "byte_8c": 0.00031138097462245055,
  "byte_d9": 0.00015569048731122528,
  "byte_d6": 0.00031138097462245055,
  "byte_3d": 0.001712595360423478,
  "byte_31": 0.00046707146193367583,
  "byte_a7": 0.00015569048731122528,
  "byte_4d": 0.00015569048731122528,
  "byte_25": 0.00031138097462245055,
  "byte_8d": 0.00015569048731122528,
  "byte_c6": 0.00015569048731122528,
  "byte_5d": 0.00031138097462245055,
  "byte_c9": 0.0007784524365561264,
  "byte_38": 0.00046707146193367583,
  "byte_f0": 0.00015569048731122528,
  "byte_e0": 0.00015569048731122528,
  "byte_e9": 0.00015569048731122528,
  "byte_c5": 0.00015569048731122528,
  "byte_db": 0.00015569048731122528,
  "byte_7a": 0.00046707146193367583,
  "byte_ed": 0.00015569048731122528,
  "byte_29": 0.00015569048731122528,
  "byte_cf": 0.00015569048731122528,
  "byte_2b": 0.00015569048731122528,
  "num_nodes": 4,
  "num_edges": 4,
  "avg_degree": 2.0,
  "density": 0.3333333333333333,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 93,
  "event_nums": 67,
  "creation_block": 7508988,
  "creation_timestamp": 1554479995,
  "life_time": 28186.0,
  "duration_seconds": 376802.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 5,
  "num_buyers": 3,
  "num_sellers": 3,
  "num_creator_transfers": 16,
  "buy_amt": 2.3287e+18,
  "sell_amt": 2.33e+18,
  "avg_value": 4.9560638297872344e+16,
  "txn_per_block": 0.0032993933373540994,
  "avg_gas_limit": 258772.90322580645,
  "std_gas_limit": 274307.48300750996,
  "avg_gas_used": 130008.10752688172,
  "std_gas_used": 208799.26984847733,
  "avg_gas_price": 8279569892.473118,
  "std_gas_price": 3774178231.1363964,
  "dividends_num": 1,
  "atinversebrah_num": 1,
  "setmincontractbalance_num": 2,
  "senddividends_num": 1,
  "setminbetforjackpot_num": 1,
  "setmaxbet_num": 1,
  "setminbet_num": 1,
  "play_num": 33,
  "result_num": 33,
  "deposit_num": 1,
  "pausegame_num": 2,
  "sendownerdeposit_num": 1,
  "timeline_sequence": [
    [
      7508988,
      1554479995,
      742,
      22,
      1000000000000000000,
      1788942,
      10000000000,
      0,
      1,
      2948073,
      1788942,
      15583090
    ],
    [
      7509045,
      1554480812,
      745,
      80,
      0,
      42293,
      10000000000,
      0,
      1,
      3382542,
      42293,
      15583033
    ],
    [
      7509090,
      1554481331,
      753,
      50,
      0,
      97367,
      10000000000,
      0,
      1,
      1884754,
      97367,
      15582988
    ],
    [
      7509105,
      1554481509,
      757,
      23,
      0,
      42251,
      10000000000,
      0,
      1,
      1013656,
      42251,
      15582973
    ],
    [
      7509106,
      1554481518,
      758,
      16,
      0,
      42645,
      10000000000,
      0,
      1,
      627424,
      42645,
      15582972
    ],
    [
      7509108,
      1554481530,
      759,
      3,
      0,
      42603,
      10000000000,
      0,
      1,
      185849,
      42603,
      15582970
    ],
    [
      7509248,
      1554483259,
      797,
      17,
      10000000000000000,
      594164,
      10000000000,
      0,
      1,
      971982,
      297082,
      15582830
    ],
    [
      7509252,
      1554483329,
      798,
      10,
      0,
      111830,
      10000000000,
      0,
      1,
      1705238,
      27958,
      15582826
    ],
    [
      7509256,
      1554483378,
      799,
      5,
      10000000000000000,
      534164,
      10000000000,
      0,
      1,
      867162,
      267082,
      15582822
    ],
    [
      7509260,
      1554483390,
      800,
      62,
      0,
      111242,
      10000000000,
      0,
      1,
      4338143,
      27811,
      15582818
    ],
    [
      7509263,
      1554483440,
      801,
      73,
      10000000000000000,
      534164,
      10000000000,
      0,
      1,
      3180304,
      267082,
      15582815
    ],
    [
      7509268,
      1554483530,
      802,
      65,
      0,
      113114,
      10000000000,
      0,
      1,
      2301489,
      28279,
      15582810
    ],
    [
      7509270,
      1554483575,
      803,
      74,
      10000000000000000,
      534164,
      10000000000,
      0,
      1,
      5004173,
      267082,
      15582808
    ],
    [
      7509273,
      1554483618,
      804,
      2,
      0,
      111242,
      10000000000,
      0,
      1,
      92761,
      27811,
      15582805
    ],
    [
      7509276,
      1554483631,
      805,
      180,
      10000000000000000,
      534164,
      10000000000,
      0,
      1,
      6405482,
      267082,
      15582802
    ],
    [
      7509279,
      1554483695,
      806,
      46,
      0,
      111242,
      10000000000,
      0,
      1,
      3504146,
      27811,
      15582799
    ],
    [
      7509281,
      1554483730,
      807,
      70,
      10000000000000000,
      534164,
      10000000000,
      0,
      1,
      3473297,
      267082,
      15582797
    ],
    [
      7509285,
      1554483770,
      808,
      5,
      0,
      170660,
      10000000000,
      0,
      1,
      1739628,
      42665,
      15582793
    ],
    [
      7509473,
      1554486141,
      809,
      31,
      10000000000000000,
      534164,
      10000000000,
      0,
      1,
      1534801,
      267082,
      15582605
    ],
    [
      7509476,
      1554486178,
      810,
      23,
      0,
      113810,
      10000000000,
      0,
      1,
      815007,
      28453,
      15582602
    ],
    [
      7509859,
      1554491655,
      827,
      32,
      10000000000000000,
      534676,
      10000000000,
      0,
      1,
      1704756,
      267338,
      15582219
    ],
    [
      7509862,
      1554491752,
      828,
      50,
      0,
      137512,
      10000000000,
      0,
      1,
      2532387,
      34378,
      15582216
    ],
    [
      7509867,
      1554491786,
      829,
      17,
      10000000000000000,
      534676,
      10000000000,
      0,
      1,
      1296975,
      267338,
      15582211
    ],
    [
      7509871,
      1554491833,
      830,
      5,
      0,
      141574,
      10000000000,
      0,
      1,
      156933,
      35394,
      15582207
    ],
    [
      7509873,
      1554491859,
      831,
      81,
      10000000000000000,
      534676,
      10000000000,
      0,
      1,
      2300711,
      267338,
      15582205
    ],
    [
      7509876,
      1554491915,
      832,
      10,
      0,
      139108,
      10000000000,
      0,
      1,
      641874,
      34777,
      15582202
    ],
    [
      7509879,
      1554491959,
      833,
      43,
      10000000000000000,
      534548,
      10000000000,
      0,
      1,
      1439994,
      267274,
      15582199
    ],
    [
      7509882,
      1554492040,
      834,
      46,
      0,
      134232,
      10000000000,
      0,
      1,
      2118416,
      33558,
      15582196
    ],
    [
      7509889,
      1554492086,
      835,
      40,
      10000000000000000,
      534548,
      10000000000,
      0,
      1,
      3696947,
      267274,
      15582189
    ],
    [
      7509891,
      1554492112,
      836,
      62,
      0,
      141362,
      10000000000,
      0,
      1,
      2485167,
      35341,
      15582187
    ],
    [
      7509897,
      1554492149,
      837,
      7,
      10000000000000000,
      534548,
      10000000000,
      0,
      1,
      478076,
      267274,
      15582181
    ],
    [
      7509904,
      1554492168,
      838,
      50,
      0,
      108668,
      10000000000,
      0,
      1,
      1563336,
      27167,
      15582174
    ],
    [
      7510826,
      1554504425,
      872,
      5,
      10000000000000000,
      534164,
      10000000000,
      0,
      1,
      529313,
      267082,
      15581252
    ],
    [
      7510832,
      1554504446,
      873,
      5,
      0,
      132598,
      10000000000,
      0,
      1,
      200787,
      33150,
      15581246
    ],
    [
      7510836,
      1554504472,
      874,
      42,
      10000000000000000,
      534164,
      10000000000,
      0,
      1,
      2360471,
      267082,
      15581242
    ],
    [
      7510838,
      1554504510,
      875,
      104,
      0,
      109262,
      10000000000,
      0,
      1,
      4489582,
      27316,
      15581240
    ],
    [
      7513555,
      1554540404,
      876,
      50,
      10000000000000000,
      534164,
      10000000000,
      0,
      1,
      3632954,
      267082,
      15578523
    ],
    [
      7513557,
      1554540459,
      877,
      36,
      0,
      113810,
      10000000000,
      0,
      1,
      2435208,
      28453,
      15578521
    ],
    [
      7518291,
      1554603556,
      881,
      83,
      0,
      27293,
      10000000000,
      0,
      1,
      2501370,
      27293,
      15573787
    ],
    [
      7518291,
      1554603556,
      882,
      84,
      1000000000000000000,
      27589,
      10000000000,
      0,
      1,
      2528959,
      27589,
      15573787
    ],
    [
      7523794,
      1554676835,
      885,
      70,
      10000000000000000,
      534164,
      10000000000,
      0,
      1,
      4553316,
      267082,
      15568284
    ],
    [
      7523797,
      1554676879,
      886,
      5,
      0,
      113810,
      10000000000,
      0,
      1,
      389492,
      28453,
      15568281
    ],
    [
      7523827,
      1554677317,
      897,
      22,
      10000000000000000,
      534676,
      10000000000,
      0,
      1,
      1165815,
      267338,
      15568251
    ],
    [
      7523829,
      1554677354,
      898,
      20,
      0,
      110872,
      10000000000,
      0,
      1,
      2221490,
      27718,
      15568249
    ],
    [
      7523833,
      1554677426,
      899,
      35,
      10000000000000000,
      534676,
      10000000000,
      0,
      1,
      1920471,
      267338,
      15568245
    ],
    [
      7523835,
      1554677449,
      900,
      82,
      0,
      133424,
      10000000000,
      0,
      1,
      5293429,
      33356,
      15568243
    ],
    [
      7529713,
      1554756699,
      238,
      13,
      10000000000000000,
      534164,
      10000000000,
      0,
      1,
      1509931,
      267082,
      15562365
    ],
    [
      7529717,
      1554756757,
      239,
      1,
      0,
      110546,
      10000000000,
      0,
      1,
      74016,
      27637,
      15562361
    ],
    [
      7529719,
      1554756798,
      240,
      4,
      10000000000000000,
      534164,
      10000000000,
      0,
      1,
      488065,
      267082,
      15562359
    ],
    [
      7529726,
      1554756962,
      241,
      13,
      0,
      111242,
      10000000000,
      0,
      1,
      1683073,
      27811,
      15562352
    ],
    [
      7530976,
      1554773783,
      947,
      35,
      10000000000000000,
      534420,
      10000000000,
      0,
      1,
      1412701,
      267210,
      15561102
    ],
    [
      7530980,
      1554773828,
      948,
      49,
      0,
      138662,
      10000000000,
      0,
      1,
      1835783,
      34666,
      15561098
    ],
    [
      7530988,
      1554773943,
      949,
      65,
      10000000000000000,
      534420,
      10000000000,
      0,
      1,
      3076679,
      267210,
      15561090
    ],
    [
      7530990,
      1554773951,
      950,
      36,
      0,
      138662,
      10000000000,
      0,
      1,
      899007,
      34666,
      15561088
    ],
    [
      7530994,
      1554774004,
      951,
      17,
      10000000000000000,
      534420,
      10000000000,
      0,
      1,
      1379374,
      267210,
      15561084
    ],
    [
      7530997,
      1554774056,
      952,
      28,
      0,
      111014,
      10000000000,
      0,
      1,
      1747805,
      27754,
      15561081
    ],
    [
      7531013,
      1554774257,
      953,
      55,
      10000000000000000,
      534420,
      10000000000,
      0,
      1,
      2981854,
      267210,
      15561065
    ],
    [
      7531017,
      1554774318,
      954,
      16,
      0,
      133066,
      10000000000,
      0,
      1,
      521486,
      33267,
      15561061
    ],
    [
      7531018,
      1554774331,
      955,
      100,
      10000000000000000,
      534420,
      10000000000,
      0,
      1,
      6573369,
      267210,
      15561060
    ],
    [
      7531021,
      1554774373,
      956,
      43,
      0,
      139242,
      10000000000,
      0,
      1,
      1279787,
      34811,
      15561057
    ],
    [
      7531023,
      1554774416,
      957,
      78,
      10000000000000000,
      534420,
      10000000000,
      0,
      1,
      2201263,
      267210,
      15561055
    ],
    [
      7531027,
      1554774451,
      958,
      14,
      0,
      139242,
      10000000000,
      0,
      1,
      454778,
      34811,
      15561051
    ],
    [
      7531031,
      1554774483,
      959,
      88,
      10000000000000000,
      534164,
      10000000000,
      0,
      1,
      2713501,
      267082,
      15561047
    ],
    [
      7531033,
      1554774517,
      960,
      64,
      0,
      110546,
      10000000000,
      0,
      1,
      2649584,
      27637,
      15561045
    ],
    [
      7531036,
      1554774556,
      961,
      33,
      10000000000000000,
      534292,
      10000000000,
      0,
      1,
      1115668,
      267146,
      15561042
    ],
    [
      7531038,
      1554774560,
      962,
      25,
      0,
      138428,
      10000000000,
      0,
      1,
      827690,
      34607,
      15561040
    ],
    [
      7531040,
      1554774606,
      963,
      28,
      10000000000000000,
      534292,
      10000000000,
      0,
      1,
      1276936,
      267146,
      15561038
    ],
    [
      7531044,
      1554774636,
      964,
      36,
      0,
      112064,
      10000000000,
      0,
      1,
      1317886,
      28016,
      15561034
    ],
    [
      7531046,
      1554774645,
      965,
      35,
      10000000000000000,
      534292,
      10000000000,
      0,
      1,
      1565382,
      267146,
      15561032
    ],
    [
      7531048,
      1554774689,
      966,
      97,
      0,
      110780,
      10000000000,
      0,
      1,
      3872604,
      27695,
      15561030
    ],
    [
      7531053,
      1554774803,
      967,
      69,
      10000000000000000,
      534292,
      10000000000,
      0,
      1,
      4728958,
      267146,
      15561025
    ],
    [
      7531057,
      1554774832,
      968,
      90,
      0,
      112064,
      10000000000,
      0,
      1,
      4867607,
      28016,
      15561021
    ],
    [
      7531059,
      1554774851,
      969,
      92,
      10000000000000000,
      534164,
      10000000000,
      0,
      1,
      3057793,
      267082,
      15561019
    ],
    [
      7531061,
      1554774900,
      970,
      73,
      0,
      110546,
      10000000000,
      0,
      1,
      2438538,
      27637,
      15561017
    ],
    [
      7537165,
      1554856718,
      976,
      39,
      0,
      42347,
      10000000000,
      0,
      1,
      4817937,
      42347,
      15554913
    ],
    [
      7537167,
      1554856725,
      977,
      10,
      0,
      42347,
      10000000000,
      0,
      1,
      350377,
      27347,
      15554911
    ],
    [
      7537174,
      1554856797,
      978,
      2,
      0,
      42284,
      10000000000,
      0,
      1,
      63142,
      21142,
      15554904
    ],
    [
      7509090,
      1554481331,
      0,
      0,
      10000000000000000,
      24771,
      0,
      0,
      0,
      0,
      23469,
      0
    ],
    [
      7509285,
      1554483770,
      0,
      0,
      58000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7509862,
      1554491752,
      0,
      0,
      11700000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7509871,
      1554491833,
      0,
      0,
      11700000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7509876,
      1554491915,
      0,
      0,
      11700000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7509882,
      1554492040,
      0,
      0,
      14700000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7509891,
      1554492112,
      0,
      0,
      14700000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7510832,
      1554504446,
      0,
      0,
      58000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7523835,
      1554677449,
      0,
      0,
      11700000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7530980,
      1554773828,
      0,
      0,
      19500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7530990,
      1554773951,
      0,
      0,
      19500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7531017,
      1554774318,
      0,
      0,
      19500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7531021,
      1554774373,
      0,
      0,
      19500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7531027,
      1554774451,
      0,
      0,
      19500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7531038,
      1554774560,
      0,
      0,
      29000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7537174,
      1554856797,
      0,
      0,
      2000000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  ],
  "sourcecode": "pragma solidity ^0.4.25;\n\ninterface DSG {\n    function gamingDividendsReception() payable external;\n}\n\ncontract DSG_Dice{\n    using SafeMath for uint256;\n    \n    address constant public DSG_ADDRESS = 0x696826C18A6Bc9Be4BBfe3c3A6BB9f5a69388687;\n    uint256 public totalDividends;\n    uint256 public totalWinnings;\n    uint256 public totalTurnover;\n    uint256 public totalPlayed;\n    uint256 public maxBet;\n    uint256 public minBet;\n    uint256 public minContractBalance;\n    uint256 public minBetForJackpot;\n    uint256 public jackpotBalance;\n    uint256 public nextPayout;\n    uint256 public ownerDeposit;\n    address[2] public owners;\n    address[2] public candidates;\n    bool public paused;\n    \n    mapping (address => Bet) private usersBets;\n    \n    struct Bet {\n        uint blockNumber;\n        uint bet;\n        bool[6] dice;\n    }\n    \n    modifier onlyOwners(){\n        require(msg.sender == owners[0] || msg.sender == owners[1]);\n        _;\n    }\n    modifier onlyUsers(){\n        require(tx.origin == msg.sender);\n        _;\n    }\n    modifier checkBlockNumber(){\n        uint256 blockNumber = usersBets[msg.sender].blockNumber;\n        if(block.number.sub(blockNumber) >= 250 && blockNumber > 0){\n            emit Result(msg.sender, 601, 0, jackpotBalance, usersBets[msg.sender].bet, usersBets[msg.sender].dice, 0);\n            delete usersBets[msg.sender];\n        }\n        else{\n            _;\n        }\n    }\n    constructor(address secondOwner) public payable{\n        owners[0]   = msg.sender;\n        owners[1]   = secondOwner;\n        ownerDeposit   = msg.value;\n        jackpotBalance = jackpotBalance.add(ownerDeposit.div(1000));\n    }\n    function play(bool dice1, bool dice2, bool dice3, bool dice4, bool dice5, bool dice6) public payable checkBlockNumber onlyUsers{\n        uint256 bet = msg.value;\n        require(checkSolvency(bet), \"Not enough ETH in contract\");\n        require(paused == false, \"Game was stopped\");\n        require(bet >= minBet && bet <= maxBet, \"Amount should be within range\");\n        require(usersBets[msg.sender].bet == 0, \"You have already bet\");\n        bool[6] memory dice = [dice1, dice2, dice3, dice4, dice5, dice6];\n        usersBets[msg.sender].bet = bet;\n        usersBets[msg.sender].blockNumber = block.number;\n        usersBets[msg.sender].dice = dice;\n        totalTurnover = totalTurnover.add(bet);\n        totalPlayed = totalPlayed.add(1);\n        emit PlaceBet(msg.sender, bet, dice, now);\n    }\n    function result() public checkBlockNumber onlyUsers{\n        require(blockhash(usersBets[msg.sender].blockNumber) != 0, \"Your time to determine the result has come out or not yet come\");\n        uint256 r = _random(601);\n        bool[6] memory dice = usersBets[msg.sender].dice;\n        uint256 bet = usersBets[msg.sender].bet;\n        uint256 rate = getXRate(dice);\n        uint256 totalWinAmount;\n        if(getDice(r) == 1 && dice[0] == true){\n            totalWinAmount = totalWinAmount.add(bet.mul(rate).div(100));\n\t\t}\n\t\telse if(getDice(r) == 2 && dice[1] == true){\n\t\t    totalWinAmount = totalWinAmount.add(bet.mul(rate).div(100));\n\t\t}\n\t\telse if(getDice(r) == 3 && dice[2] == true){\n\t\t    totalWinAmount = totalWinAmount.add(bet.mul(rate).div(100));\n\t\t}\n\t\telse if(getDice(r) == 4 && dice[3] == true){\n\t\t    totalWinAmount = totalWinAmount.add(bet.mul(rate).div(100));\n\t\t}\n\t\telse if(getDice(r) == 5 && dice[4] == true){\n\t\t    totalWinAmount = totalWinAmount.add(bet.mul(rate).div(100));\n\t\t}\n\t\telse if(getDice(r) == 6 && dice[5] == true){\n\t\t    totalWinAmount = totalWinAmount.add(bet.mul(rate).div(100));\n\t\t}\n\t\tif(bet >= minBetForJackpot && r == 0 && jackpotBalance > 0){\n\t\t    totalWinAmount = totalWinAmount.add(jackpotBalance);\n\t\t    emit Jackpot(msg.sender, jackpotBalance, now);\n            delete jackpotBalance;\n\t\t}\n\t\tif(totalWinAmount > 0){\n\t\t    msg.sender.transfer(totalWinAmount);\n\t    \ttotalWinnings = totalWinnings.add(totalWinAmount);\n\t\t}\n        jackpotBalance = jackpotBalance.add(bet.div(1000));\n\t\tdelete usersBets[msg.sender];\n\t\temit Result(msg.sender, r, totalWinAmount, jackpotBalance, bet, dice, rate);\n    }\n    function getXRate(bool[6] dice) public pure returns(uint){\n        uint sum;\n        for(uint i = 0; i < dice.length; i++){\n            if(dice[i] == true) sum = sum.add(1);\n        }\n\t\tif(sum == 1) return 580;\n\t\tif(sum == 2) return 290;\n\t\tif(sum == 3) return 195;\n\t\tif(sum == 4) return 147;\n\t\tif(sum == 5) return 117;\n\t}\n    function getDice(uint r) private pure returns (uint){\n\t\tif((r > 0 && r <= 50) || (r > 300 && r <= 350)){\n\t\t\treturn 1;\n\t\t}\n\t\telse if((r > 50 && r <= 100) || (r > 500 && r <= 550)){\n\t\t\treturn 2;\n\t\t}\n\t\telse if((r > 100 && r <= 150) || (r > 450 && r <= 500)){\n\t\t\treturn 3;\n\t\t}\n\t\telse if((r > 150 && r <= 200) || (r > 400 && r <= 450)){\n\t\t\treturn 4;\n\t\t}\n\t\telse if((r > 200 && r <= 250) || (r > 350 && r <= 400)){\n\t\t\treturn 5;\n\t\t}\n\t\telse if((r > 250 && r <= 300) || (r > 550 && r <= 600)){\n\t\t\treturn 6;\n\t\t}\n\t}\n    function checkSolvency(uint bet) view public returns(bool){\n        if(getContractBalance() > bet.add(bet.mul(500).div(100)).add(jackpotBalance)) return true;\n        else return false;\n    }\n    function sendDividends() public {\n        require(getContractBalance() > minContractBalance && now > nextPayout, \"You cannot send dividends\");\n        DSG DSG0 = DSG(DSG_ADDRESS);\n        uint256 balance = getContractBalance();\n        uint256 dividends  = balance.sub(minContractBalance);\n        nextPayout = now.add(7 days);\n        totalDividends = totalDividends.add(dividends);\n        DSG0.gamingDividendsReception.value(dividends)();\n        emit Dividends(balance, dividends, now);\n    }\n     function getContractBalance() public view returns (uint256){\n        return address(this).balance;\n    }\n    function _random(uint256 max) private view returns(uint256){\n        bytes32 hash = blockhash(usersBets[msg.sender].blockNumber);\n        return uint256(keccak256(abi.encode(hash, msg.sender))) % max;\n    }\n    function deposit() public payable onlyOwners{\n        ownerDeposit = ownerDeposit.add(msg.value);\n    }\n    function sendOwnerDeposit(address recipient) public onlyOwners{\n        require(paused == true, 'Game was not stopped');\n        uint256 contractBalance = getContractBalance();\n        if(contractBalance >= ownerDeposit){\n            recipient.transfer(ownerDeposit);\n        }\n        else{\n            recipient.transfer(contractBalance);\n        }\n        delete jackpotBalance;\n        delete ownerDeposit;\n    }\n    function pauseGame(bool option) public onlyOwners{\n        paused = option;\n    }\n    function setMinBet(uint256 eth) public onlyOwners{\n        minBet = eth;\n    }\n    function setMaxBet(uint256 eth) public onlyOwners{\n        maxBet = eth;\n    }\n    function setMinBetForJackpot(uint256 eth) public onlyOwners{\n        minBetForJackpot = eth;\n    }\n    function setMinContractBalance(uint256 eth) public onlyOwners{\n        minContractBalance = eth;\n    }\n    function transferOwnership(address newOwnerAddress, uint8 k) public onlyOwners{\n        candidates[k] = newOwnerAddress;\n    }\n    function confirmOwner(uint8 k) public{\n        require(msg.sender == candidates[k]);\n        owners[k] = candidates[k];\n    }\n    event Dividends(\n        uint256 balance,\n        uint256 dividends,\n        uint256 timestamp\n    );\n    event Jackpot(\n        address indexed player,\n        uint256 jackpot,\n        uint256 timestamp\n    );\n    event PlaceBet(\n        address indexed player,\n        uint256 bet,\n        bool[6] dice,\n        uint256 timestamp\n    );\n    event Result(\n        address indexed player,\n        uint256 indexed random,\n        uint256 totalWinAmount,\n        uint256 jackpotBalance,\n        uint256 bet,\n        bool[6] dice,\n        uint256 winRate\n    );\n}\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {  return 0; }\n        uint256 c = a * b;\n        require(c / a == b);\n        return c;\n    }\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0);\n        uint256 c = a / b;\n        return c;\n    }\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n        return c;\n    }\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}"
}