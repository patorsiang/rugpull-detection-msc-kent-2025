{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 MLOAD PUSH1 DUP1 PUSH2 DUP4 CODECOPY DUP2 ADD PUSH1 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH1 CALLER PUSH1 DUP1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 DUP2 SWAP1 SSTORE POP DUP3 SWAP1 POP DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 DUP1 PUSH2 PUSH1 CODECOPY PUSH1 RETURN STOP PUSH1 PUSH1 MSTORE PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH29 SWAP1 DIV PUSH4 AND DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST STOP JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH27 NOT AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH27 NOT AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP5 DUP2 MSTORE PUSH1 ADD DUP4 DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP5 POP POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH27 NOT AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP5 DUP2 MSTORE PUSH1 ADD DUP4 DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP5 POP POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH27 NOT AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH27 NOT AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 DUP1 PUSH1 PUSH1 PUSH1 DUP6 PUSH27 NOT AND PUSH27 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SWAP3 POP DUP3 PUSH1 ADD SLOAD CALLVALUE EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP3 PUSH1 ADD SLOAD TIMESTAMP GT ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND SWAP2 POP DUP3 PUSH1 ADD SLOAD SWAP1 POP PUSH1 PUSH1 DUP6 PUSH27 NOT AND PUSH27 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP1 DUP3 ADD PUSH1 PUSH2 EXP DUP2 SLOAD SWAP1 PUSH20 MUL NOT AND SWAP1 SSTORE PUSH1 DUP3 ADD PUSH1 SWAP1 SSTORE PUSH1 DUP3 ADD PUSH1 SWAP1 SSTORE PUSH1 DUP3 ADD PUSH1 SWAP1 SSTORE POP POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 DUP6 CALLER PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH27 NOT AND PUSH27 NOT AND DUP2 MSTORE PUSH1 ADD DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP DUP2 PUSH20 AND PUSH2 PUSH2 PUSH1 SLOAD DUP5 MUL DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV DUP4 SUB SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP4 PUSH27 NOT AND PUSH32 DUP5 PUSH1 ADD SLOAD TIMESTAMP CALLER PUSH1 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 ADD DUP4 DUP2 MSTORE PUSH1 ADD DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP4 POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 PUSH20 AND PUSH4 PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP4 PUSH1 PUSH1 MLOAD PUSH1 ADD MSTORE PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 MLOAD DUP1 MLOAD SWAP1 POP ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST POP POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 MSTORE DUP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 PUSH1 SWAP2 POP SWAP1 POP DUP1 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND SWAP1 DUP1 PUSH1 ADD SLOAD SWAP1 DUP1 PUSH1 ADD SLOAD SWAP1 DUP1 PUSH1 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH2 ADDRESS PUSH20 AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP1 PUSH1 PUSH1 PUSH1 DUP8 PUSH27 NOT AND PUSH27 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SWAP1 POP DUP1 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 PUSH1 ADD SLOAD DUP3 PUSH1 ADD SLOAD DUP4 PUSH1 ADD SLOAD SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 DUP3 GT ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 CALLER PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP4 DUP2 MSTORE PUSH1 ADD TIMESTAMP DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE POP PUSH1 PUSH1 DUP6 PUSH27 NOT AND PUSH27 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD SSTORE PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD SSTORE PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD SSTORE SWAP1 POP POP CALLER PUSH20 AND DUP4 PUSH27 NOT AND PUSH32 DUP5 TIMESTAMP DUP6 PUSH1 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 ADD DUP4 DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP4 POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 DUP4 PUSH27 NOT AND PUSH27 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SWAP1 POP DUP1 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ DUP1 PUSH2 JUMPI POP PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 DUP4 DUP4 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH27 NOT AND PUSH27 NOT AND DUP2 MSTORE PUSH1 ADD DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 PUSH1 DUP4 PUSH27 NOT AND PUSH27 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP1 DUP3 ADD PUSH1 PUSH2 EXP DUP2 SLOAD SWAP1 PUSH20 MUL NOT AND SWAP1 SSTORE PUSH1 DUP3 ADD PUSH1 SWAP1 SSTORE PUSH1 DUP3 ADD PUSH1 SWAP1 SSTORE PUSH1 DUP3 ADD PUSH1 SWAP1 SSTORE POP POP DUP2 PUSH27 NOT AND PUSH32 TIMESTAMP PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH20 AND PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 DUP1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH32 DUP2 MSTORE POP DUP2 JUMP STOP LOG1 PUSH6 SHA3 SHL UNKNOWN_0xe1 UNOFFICIAL_SWAP SWAP5 CODESIZE UNOFFICIAL_SWAP UNKNOWN_0xe1 PUSH13 UNKNOWN_0xbe UNKNOWN_0xd9 UNKNOWN_0xbe UNKNOWN_0xd SWAP8 PUSH3 LOG1 UNKNOWN_0xc5 STOP UNKNOWN_0x29 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP PUSH1 DUP7 UNKNOWN_0x2c SWAP13 PUSH9 UNKNOWN_0x4a UNKNOWN_0x4f UNKNOWN_0xc5 UNKNOWN_0x4a UNKNOWN_0xb6 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP UNKNOWN_0xc8",
  "opcode_entropy": 4.9529200554525135,
  "opcode_count": 2041,
  "unique_opcodes": 80,
  "byte_entropy": 4.262522304250137,
  "byte_0x": 0.0002025111381125962,
  "byte_60": 0.05427298501417578,
  "byte_40": 0.008707978938841636,
  "byte_52": 0.011745646010530578,
  "byte_34": 0.003037667071688943,
  "byte_15": 0.011745646010530578,
  "byte_61": 0.022478736330498177,
  "byte_00": 0.06601863102470636,
  "byte_0f": 0.0008100445524503848,
  "byte_57": 0.010328068043742407,
  "byte_80": 0.02754151478331308,
  "byte_fd": 0.006277845281490482,
  "byte_5b": 0.015795868772782502,
  "byte_51": 0.009518023491292021,
  "byte_13": 0.001012555690562981,
  "byte_09": 0.0018226002430133657,
  "byte_83": 0.007290400972053463,
  "byte_39": 0.0006075334143377885,
  "byte_81": 0.018428513568246253,
  "byte_01": 0.03078169299311462,
  "byte_90": 0.030376670716889428,
  "byte_20": 0.01437829080599433,
  "byte_91": 0.006682867557715674,
  "byte_50": 0.02612393681652491,
  "byte_33": 0.002430133657351154,
  "byte_0a": 0.006075334143377886,
  "byte_54": 0.007290400972053463,
  "byte_73": 0.014175779667881734,
  "byte_ff": 0.41413527744025924,
  "byte_02": 0.0074929121101660594,
  "byte_19": 0.0064803564196030785,
  "byte_16": 0.02025111381125962,
  "byte_17": 0.001215066828675577,
  "byte_55": 0.0038477116241393276,
  "byte_82": 0.007087889833940867,
  "byte_12": 0.0002025111381125962,
  "byte_36": 0.001215066828675577,
  "byte_d3": 0.0004050222762251924,
  "byte_f3": 0.0014175779667881733,
  "byte_04": 0.008302956662616445,
  "byte_10": 0.0014175779667881733,
  "byte_c5": 0.0006075334143377885,
  "byte_35": 0.003037667071688943,
  "byte_7c": 0.001012555690562981,
  "byte_63": 0.00425273390036452,
  "byte_1d": 0.0004050222762251924,
  "byte_0b": 0.001012555690562981,
  "byte_58": 0.0006075334143377885,
  "byte_14": 0.0044552450384771165,
  "byte_c7": 0.0006075334143377885,
  "byte_2f": 0.0002025111381125962,
  "byte_c8": 0.0006075334143377885,
  "byte_8b": 0.001012555690562981,
  "byte_3a": 0.0004050222762251924,
  "byte_5e": 0.0004050222762251924,
  "byte_25": 0.0002025111381125962,
  "byte_76": 0.0006075334143377885,
  "byte_3f": 0.0002025111381125962,
  "byte_41": 0.001012555690562981,
  "byte_da": 0.0006075334143377885,
  "byte_75": 0.0008100445524503848,
  "byte_62": 0.0006075334143377885,
  "byte_1a": 0.0002025111381125962,
  "byte_45": 0.0002025111381125962,
  "byte_5f": 0.0002025111381125962,
  "byte_d8": 0.0002025111381125962,
  "byte_21": 0.0004050222762251924,
  "byte_9f": 0.0002025111381125962,
  "byte_3e": 0.0002025111381125962,
  "byte_ca": 0.0006075334143377885,
  "byte_b5": 0.0006075334143377885,
  "byte_cc": 0.0004050222762251924,
  "byte_8d": 0.0004050222762251924,
  "byte_a5": 0.0002025111381125962,
  "byte_cb": 0.0002025111381125962,
  "byte_03": 0.009315512353179425,
  "byte_1f": 0.0006075334143377885,
  "byte_97": 0.0008100445524503848,
  "byte_8f": 0.0002025111381125962,
  "byte_68": 0.0008100445524503848,
  "byte_74": 0.0004050222762251924,
  "byte_a4": 0.0004050222762251924,
  "byte_44": 0.0004050222762251924,
  "byte_ae": 0.0004050222762251924,
  "byte_f2": 0.0004050222762251924,
  "byte_e3": 0.0006075334143377885,
  "byte_a1": 0.0006075334143377885,
  "byte_ad": 0.0006075334143377885,
  "byte_43": 0.0002025111381125962,
  "byte_fb": 0.0004050222762251924,
  "byte_7a": 0.0054678007290400975,
  "byte_d1": 0.0004050222762251924,
  "byte_56": 0.0064803564196030785,
  "byte_08": 0.001012555690562981,
  "byte_3d": 0.0008100445524503848,
  "byte_0e": 0.0006075334143377885,
  "byte_4a": 0.0014175779667881733,
  "byte_5c": 0.0006075334143377885,
  "byte_6d": 0.0006075334143377885,
  "byte_c1": 0.0002025111381125962,
  "byte_96": 0.0004050222762251924,
  "byte_85": 0.0018226002430133657,
  "byte_84": 0.002430133657351154,
  "byte_94": 0.0014175779667881733,
  "byte_2c": 0.0004050222762251924,
  "byte_e9": 0.0004050222762251924,
  "byte_d7": 0.0004050222762251924,
  "byte_86": 0.0006075334143377885,
  "byte_2a": 0.0002025111381125962,
  "byte_32": 0.0004050222762251924,
  "byte_0d": 0.0006075334143377885,
  "byte_06": 0.0002025111381125962,
  "byte_7f": 0.0014175779667881733,
  "byte_b3": 0.0004050222762251924,
  "byte_2b": 0.0004050222762251924,
  "byte_c0": 0.0004050222762251924,
  "byte_4e": 0.0006075334143377885,
  "byte_11": 0.0008100445524503848,
  "byte_7b": 0.0002025111381125962,
  "byte_c3": 0.0002025111381125962,
  "byte_92": 0.001012555690562981,
  "byte_05": 0.0006075334143377885,
  "byte_42": 0.001012555690562981,
  "byte_4c": 0.0002025111381125962,
  "byte_f8": 0.0004050222762251924,
  "byte_e5": 0.0004050222762251924,
  "byte_87": 0.0008100445524503848,
  "byte_3b": 0.0006075334143377885,
  "byte_07": 0.001012555690562981,
  "byte_c6": 0.0008100445524503848,
  "byte_5a": 0.001012555690562981,
  "byte_f1": 0.001012555690562981,
  "byte_1c": 0.0002025111381125962,
  "byte_fc": 0.0006075334143377885,
  "byte_27": 0.0004050222762251924,
  "byte_fe": 0.0006075334143377885,
  "byte_88": 0.0008100445524503848,
  "byte_93": 0.0016200891049007696,
  "byte_72": 0.0008100445524503848,
  "byte_6b": 0.0004050222762251924,
  "byte_1b": 0.0004050222762251924,
  "byte_a7": 0.0006075334143377885,
  "byte_9c": 0.0006075334143377885,
  "byte_c2": 0.0002025111381125962,
  "byte_28": 0.0006075334143377885,
  "byte_8a": 0.0002025111381125962,
  "byte_b0": 0.0004050222762251924,
  "byte_c4": 0.0006075334143377885,
  "byte_ed": 0.0004050222762251924,
  "byte_6c": 0.0004050222762251924,
  "byte_a2": 0.0004050222762251924,
  "byte_69": 0.0002025111381125962,
  "byte_46": 0.0004050222762251924,
  "byte_b7": 0.0004050222762251924,
  "byte_30": 0.0008100445524503848,
  "byte_31": 0.0006075334143377885,
  "byte_e7": 0.0002025111381125962,
  "byte_95": 0.0002025111381125962,
  "byte_9b": 0.0002025111381125962,
  "byte_f0": 0.0002025111381125962,
  "byte_e4": 0.0006075334143377885,
  "byte_ea": 0.0002025111381125962,
  "byte_29": 0.0004050222762251924,
  "byte_f5": 0.0002025111381125962,
  "byte_47": 0.0004050222762251924,
  "byte_dd": 0.0004050222762251924,
  "byte_48": 0.0002025111381125962,
  "byte_22": 0.0004050222762251924,
  "byte_d0": 0.0004050222762251924,
  "byte_a3": 0.0006075334143377885,
  "byte_0c": 0.0002025111381125962,
  "byte_ec": 0.0004050222762251924,
  "byte_f7": 0.0004050222762251924,
  "byte_26": 0.0002025111381125962,
  "byte_db": 0.0002025111381125962,
  "byte_b1": 0.0002025111381125962,
  "byte_23": 0.0002025111381125962,
  "byte_e6": 0.0004050222762251924,
  "byte_e8": 0.0002025111381125962,
  "byte_24": 0.0002025111381125962,
  "byte_8e": 0.0002025111381125962,
  "byte_c9": 0.0002025111381125962,
  "byte_e0": 0.0004050222762251924,
  "byte_53": 0.0002025111381125962,
  "byte_59": 0.0002025111381125962,
  "byte_cd": 0.0004050222762251924,
  "byte_49": 0.0002025111381125962,
  "byte_af": 0.0002025111381125962,
  "byte_b4": 0.0002025111381125962,
  "byte_18": 0.0002025111381125962,
  "byte_6f": 0.0002025111381125962,
  "byte_64": 0.0002025111381125962,
  "byte_2e": 0.0006075334143377885,
  "byte_65": 0.0002025111381125962,
  "byte_e1": 0.0004050222762251924,
  "byte_b2": 0.0006075334143377885,
  "byte_38": 0.0002025111381125962,
  "byte_bb": 0.0002025111381125962,
  "byte_de": 0.0002025111381125962,
  "byte_be": 0.0004050222762251924,
  "byte_d9": 0.0002025111381125962,
  "byte_a9": 0.0002025111381125962,
  "byte_9d": 0.0002025111381125962,
  "byte_9a": 0.0002025111381125962,
  "byte_dc": 0.0002025111381125962,
  "byte_99": 0.0002025111381125962,
  "byte_4f": 0.0002025111381125962,
  "byte_b6": 0.0002025111381125962,
  "num_nodes": 9,
  "num_edges": 13,
  "avg_degree": 2.888888888888889,
  "density": 0.18055555555555555,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 54,
  "event_nums": 38,
  "creation_block": 5001229,
  "creation_timestamp": 1517338257,
  "life_time": 7113536.0,
  "duration_seconds": 99425549.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 10,
  "num_buyers": 6,
  "num_sellers": 9,
  "num_creator_transfers": 13,
  "buy_amt": 3.0778958e+16,
  "sell_amt": 3.24271e+16,
  "avg_value": 1149201054545454.5,
  "txn_per_block": 7.591160346814812e-06,
  "avg_gas_limit": 145330.88888888888,
  "std_gas_limit": 263664.5958713222,
  "avg_gas_used": 77863.72222222222,
  "std_gas_used": 180734.39572768784,
  "avg_gas_price": 40573909676.22222,
  "std_gas_price": 61498846763.05773,
  "createlisting_num": 22,
  "buylisting_num": 15,
  "cancellisting_num": 3,
  "timeline_sequence": [
    [
      5001229,
      1517338257,
      117,
      118,
      0,
      2000000,
      2100000,
      0,
      1,
      7037740,
      1361873,
      18090849
    ],
    [
      5001291,
      1517339098,
      119,
      156,
      0,
      158755,
      2000000000,
      0,
      1,
      7165148,
      105837,
      18090787
    ],
    [
      5001312,
      1517339457,
      0,
      238,
      100000000000000,
      186658,
      4000000000,
      0,
      1,
      6961531,
      62202,
      18090766
    ],
    [
      5015564,
      1517550038,
      123,
      1,
      0,
      158851,
      4000000000,
      0,
      1,
      221871,
      105901,
      18076514
    ],
    [
      5018981,
      1517600577,
      125,
      81,
      0,
      151056,
      1000000000,
      0,
      1,
      6831775,
      50352,
      18073097
    ],
    [
      5019196,
      1517603573,
      130,
      108,
      0,
      158851,
      1000000000,
      0,
      1,
      7660112,
      105901,
      18072882
    ],
    [
      5021132,
      1517631141,
      135,
      42,
      0,
      158755,
      1000000000,
      0,
      1,
      6322280,
      105837,
      18070946
    ],
    [
      5021234,
      1517632865,
      138,
      113,
      0,
      158851,
      2000000000,
      0,
      1,
      4627159,
      105901,
      18070844
    ],
    [
      5043786,
      1517959241,
      139,
      73,
      0,
      151056,
      1000000000,
      0,
      1,
      7115982,
      50352,
      18048292
    ],
    [
      5043790,
      1517959264,
      141,
      56,
      0,
      151056,
      1000000000,
      0,
      1,
      4293105,
      50352,
      18048288
    ],
    [
      5045055,
      1517977779,
      144,
      27,
      0,
      158851,
      1000000000,
      0,
      1,
      3749115,
      105901,
      18047023
    ],
    [
      5045093,
      1517978353,
      7,
      34,
      0,
      158755,
      1000000000,
      0,
      1,
      1600381,
      105837,
      18046985
    ],
    [
      5045108,
      1517978686,
      10,
      84,
      0,
      158851,
      1000000000,
      0,
      1,
      7227467,
      105901,
      18046970
    ],
    [
      5045320,
      1517981552,
      145,
      111,
      1000000000000000,
      164158,
      1000000000,
      0,
      1,
      7343247,
      54702,
      18046758
    ],
    [
      5045336,
      1517981800,
      147,
      102,
      0,
      158851,
      1000000000,
      0,
      1,
      7090094,
      105901,
      18046742
    ],
    [
      5045351,
      1517981968,
      150,
      135,
      0,
      158851,
      1000000000,
      0,
      1,
      6059951,
      105901,
      18046727
    ],
    [
      5063288,
      1518242589,
      36,
      189,
      0,
      161347,
      2000000000,
      0,
      1,
      6028137,
      107565,
      18028790
    ],
    [
      5063316,
      1518243005,
      200,
      72,
      0,
      159043,
      4000000000,
      0,
      1,
      3950669,
      106029,
      18028762
    ],
    [
      5063356,
      1518243633,
      205,
      102,
      0,
      158947,
      4000000000,
      0,
      1,
      5254551,
      105965,
      18028722
    ],
    [
      5065472,
      1518273791,
      206,
      200,
      1230000000000000,
      164158,
      2000000000,
      0,
      1,
      7212239,
      54702,
      18026606
    ],
    [
      5066088,
      1518282648,
      216,
      85,
      0,
      158947,
      2000000000,
      0,
      1,
      6984820,
      105965,
      18025990
    ],
    [
      5216209,
      1520478983,
      0,
      105,
      20000000000000,
      186658,
      5000000000,
      0,
      1,
      7327392,
      64403,
      17875869
    ],
    [
      5216213,
      1520479029,
      1,
      65,
      20000000000000,
      186658,
      5000000000,
      1,
      0,
      2865419,
      22151,
      17875865
    ],
    [
      5219418,
      1520525712,
      451,
      221,
      0,
      158851,
      5000000000,
      0,
      1,
      6322414,
      105901,
      17872660
    ],
    [
      5841052,
      1529771458,
      649,
      24,
      0,
      159043,
      1000000000,
      0,
      1,
      2557987,
      106029,
      17251026
    ],
    [
      12025471,
      1615575752,
      4746,
      177,
      25000000000000000,
      164380,
      173000000000,
      0,
      1,
      10713619,
      54794,
      11066607
    ],
    [
      12025506,
      1615576237,
      4747,
      104,
      22100000000000,
      141880,
      170000000000,
      0,
      1,
      7436326,
      47294,
      11066572
    ],
    [
      12025524,
      1615576509,
      4748,
      95,
      4000000000000000,
      141880,
      170000000000,
      0,
      1,
      7210356,
      47294,
      11066554
    ],
    [
      12095358,
      1616505456,
      5033,
      73,
      1000000000000000,
      200000,
      125000000000,
      1,
      0,
      7259156,
      23172,
      10996720
    ],
    [
      12113891,
      1616752052,
      18,
      156,
      0,
      68365,
      130000000000,
      0,
      1,
      9070046,
      45577,
      10978187
    ],
    [
      12113901,
      1616752149,
      19,
      200,
      25000000000000,
      164380,
      125000000000,
      0,
      1,
      11630799,
      54794,
      10978177
    ],
    [
      12114381,
      1616758460,
      20,
      121,
      0,
      68365,
      103000000000,
      0,
      1,
      8734808,
      45577,
      10977697
    ],
    [
      12114386,
      1616758506,
      21,
      134,
      2000000000000,
      141880,
      104030000000,
      0,
      1,
      9598926,
      47294,
      10977692
    ],
    [
      12114658,
      1616762234,
      22,
      123,
      0,
      68365,
      124000000000,
      0,
      1,
      6856406,
      45577,
      10977420
    ],
    [
      12114684,
      1616762580,
      23,
      47,
      2000000000000,
      141880,
      111000000000,
      0,
      1,
      3267492,
      47294,
      10977394
    ],
    [
      12114704,
      1616762936,
      24,
      85,
      0,
      68365,
      145000000000,
      0,
      1,
      3590345,
      45577,
      10977374
    ],
    [
      12114711,
      1616763049,
      25,
      96,
      2000000000000,
      141880,
      122000010000,
      0,
      1,
      5865084,
      47294,
      10977367
    ],
    [
      12114724,
      1616763311,
      26,
      96,
      0,
      68365,
      137000000000,
      0,
      1,
      6079570,
      45577,
      10977354
    ],
    [
      12114731,
      1616763406,
      27,
      191,
      2000000000000,
      141880,
      128000000000,
      0,
      1,
      11960202,
      47294,
      10977347
    ],
    [
      12114738,
      1616763491,
      28,
      119,
      0,
      68365,
      145000000000,
      0,
      1,
      5222206,
      45577,
      10977340
    ],
    [
      12114765,
      1616763806,
      29,
      244,
      2000000000000,
      141880,
      125959012516,
      0,
      1,
      10442148,
      47294,
      10977313
    ],
    [
      5001312,
      1517339457,
      0,
      0,
      98000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      5045320,
      1517981552,
      0,
      0,
      980000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      5065472,
      1518273791,
      0,
      0,
      1205400000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      5216209,
      1520478983,
      0,
      0,
      19600000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      12025471,
      1615575752,
      0,
      0,
      24500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      12025506,
      1615576237,
      0,
      0,
      21658000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      12025524,
      1615576509,
      0,
      0,
      3920000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      12113901,
      1616752149,
      0,
      0,
      24500000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      12114386,
      1616758506,
      0,
      0,
      1960000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      12114684,
      1616762580,
      0,
      0,
      1960000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      12114711,
      1616763049,
      0,
      0,
      1960000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      12114731,
      1616763406,
      0,
      0,
      1960000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      12114765,
      1616763806,
      0,
      0,
      1960000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  ],
  "sourcecode": "pragma solidity ^0.4.13;\ncontract Token {\n\n    function totalSupply() constant returns (uint supply) {}\n    function balanceOf(address _owner) constant returns (uint balance) {}\n    function transfer(address _to, uint _value) returns (bool success) {}\n    function transferFrom(address _from, address _to, uint _value) returns (bool success) {}\n    function approve(address _spender, uint _value) returns (bool success) {}\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {}\n    event Transfer(address indexed _from, address indexed _to, uint _value);\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\n}\n\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() public {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\ncontract Mooncat {\n        function giveCat(bytes5 catId, address to) public;\n        function catOwners(bytes5 catId) constant returns (address catOwner);\n\n}\ncontract MooncatListing is Ownable {\n    struct Listing {\n        address seller;\n        uint256 price;\n        uint256 dateStarts;\n        uint256 dateEnds;\n    }\n    Mooncat public sourceContract;\n    uint256 public ownerPercentage;\n    mapping (bytes5 => Listing) public tokenIdToListing;\n\n    string constant public VERSION = \"1.0.0\";\n    event ListingCreated(bytes5 indexed tokenId, uint256 price, uint256 dateStarts, uint256 dateEnds, address indexed seller);\n    event ListingCancelled(bytes5 indexed tokenId, uint256 dateCancelled);\n    event ListingBought(bytes5 indexed tokenId, uint256 price, uint256 dateBought, address buyer);\n\n    function MooncatListing(address targetContract, uint256 percentage) public {\n        ownerPercentage = percentage;\n        Mooncat contractPassed = Mooncat(targetContract);\n        sourceContract = contractPassed;\n    }\n\n    function updateOwnerPercentage(uint256 percentage) external onlyOwner {\n        ownerPercentage = percentage;\n    }\n\n    function withdrawBalance() onlyOwner external {\n        assert(owner.send(this.balance));\n    }\n    function approveToken(address token, uint256 amount) onlyOwner external {\n        assert(Token(token).approve(owner, amount));\n    }\n\n    function() external payable { }\n\n    function createListing(bytes5 tokenId, uint256 price, uint256 dateEnds) external {\n        require(price > 0);\n        tokenIdToListing[tokenId] = Listing(msg.sender, price, now, dateEnds);\n        ListingCreated(tokenId, price, now, dateEnds, msg.sender);\n    }\n\n    function getListing(bytes5 tokenId) external view returns (address seller, uint256 price, uint256 dateStarts, uint256 dateEnds) {\n        Listing storage listing = tokenIdToListing[tokenId];\n        return (listing.seller, listing.price, listing.dateStarts, listing.dateEnds);\n    }\n\n    function buyListing(bytes5 tokenId) external payable {\n        Listing storage listing = tokenIdToListing[tokenId];\n        require(msg.value == listing.price);\n        require(now <= listing.dateEnds);\n        address seller = listing.seller;\n        uint256 currentPrice = listing.price;\n        delete tokenIdToListing[tokenId];\n        sourceContract.giveCat(tokenId, msg.sender);\n        seller.transfer(currentPrice - (currentPrice * ownerPercentage / 10000));\n        ListingBought(tokenId, listing.price, now, msg.sender);\n\n    }\n\n    function cancelListing(bytes5 tokenId) external {\n        Listing storage listing = tokenIdToListing[tokenId];\n        require(msg.sender == listing.seller || msg.sender == owner);\n        sourceContract.giveCat(tokenId, listing.seller);\n        delete tokenIdToListing[tokenId];\n        ListingCancelled(tokenId, now);\n    }\n}"
}