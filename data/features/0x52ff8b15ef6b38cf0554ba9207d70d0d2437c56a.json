{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE CALLDATASIZE ISZERO PUSH2 JUMPI PUSH4 PUSH29 PUSH1 CALLDATALOAD DIV AND PUSH4 DUP2 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH2 JUMPDEST PUSH1 SLOAD PUSH1 SLOAD PUSH1 SLOAD CALLVALUE SWAP3 DUP4 MUL SWAP3 SWAP2 PUSH1 SWAP2 MUL JUMPDEST DIV DUP3 PUSH1 SLOAD ADD GT ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD DUP3 SWAP1 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 PUSH1 EXP SUB CALLER AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD DUP3 DUP2 ADD GT JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 SLOAD TIMESTAMP GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 SLOAD PUSH1 AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 SLOAD PUSH21 SWAP1 DIV PUSH1 AND JUMPDEST ISZERO PUSH2 JUMPI PUSH1 DUP1 SLOAD PUSH1 ADD SWAP1 SSTORE PUSH1 PUSH1 PUSH1 EXP SUB CALLER DUP2 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP1 DUP3 SHA3 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE PUSH1 DUP1 SLOAD DUP6 AND DUP4 MSTORE SWAP2 DUP2 SWAP1 SHA3 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE PUSH1 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP1 SLOAD SWAP2 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP6 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB CALLER AND DUP2 ISZERO PUSH2 MUL DUP3 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH1 DUP1 DUP3 MSTORE DUP2 SWAP1 DUP2 ADD DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE JUMPDEST PUSH1 ADD PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD DUP2 AND SWAP1 PUSH1 CALLDATALOAD AND PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH1 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH1 DUP1 DUP3 MSTORE DUP2 SWAP1 DUP2 ADD DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE JUMPDEST PUSH1 ADD PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD DUP2 AND SWAP1 PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP3 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 ADD SWAP1 PUSH1 ADD DUP1 DUP4 GT PUSH2 JUMPI DUP3 SWAP1 SUB PUSH1 AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB CALLER DUP2 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP1 DUP3 SHA3 DUP6 SWAP1 SSTORE SWAP1 SWAP3 SWAP2 SWAP1 PUSH32 SWAP1 DUP6 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP4 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP2 SHA3 SLOAD DUP3 SWAP1 LT DUP1 ISZERO SWAP1 PUSH2 JUMPI POP PUSH1 PUSH1 PUSH1 EXP SUB DUP1 DUP6 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 CALLER SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SHA3 SLOAD DUP3 SWAP1 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 PUSH1 EXP SUB DUP4 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD DUP3 DUP2 ADD GT JUMPDEST ISZERO PUSH2 JUMPI PUSH1 PUSH1 PUSH1 EXP SUB DUP1 DUP6 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 DUP2 DUP2 MSTORE PUSH1 DUP1 DUP5 SHA3 DUP1 SLOAD DUP10 SWAP1 SUB SWAP1 SSTORE PUSH1 DUP3 MSTORE DUP1 DUP5 SHA3 CALLER DUP8 AND DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 SHA3 DUP1 SLOAD DUP10 SWAP1 SUB SWAP1 SSTORE SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 DUP4 SWAP1 SHA3 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP6 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 PUSH2 JUMP JUMPDEST POP PUSH1 JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP2 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD CALLER PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 JUMPI POP PUSH1 SLOAD PUSH21 SWAP1 DIV PUSH1 AND ISZERO JUMPDEST ISZERO PUSH2 JUMPI PUSH1 SLOAD PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 DUP3 SWAP1 SSTORE TIMESTAMP PUSH1 DUP4 MUL ADD PUSH1 SSTORE DUP1 SLOAD PUSH21 NOT AND PUSH21 OR SWAP1 SSTORE JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP3 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 ADD SWAP1 PUSH1 ADD DUP1 DUP4 GT PUSH2 JUMPI DUP3 SWAP1 SUB PUSH1 AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB CALLER AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP2 SHA3 SLOAD DUP3 SWAP1 LT DUP1 ISZERO SWAP1 PUSH2 JUMPI POP PUSH1 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 PUSH1 EXP SUB DUP4 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD DUP3 DUP2 ADD GT JUMPDEST ISZERO PUSH2 JUMPI PUSH1 PUSH1 PUSH1 EXP SUB CALLER DUP2 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP1 DUP3 SHA3 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 SHA3 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP6 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 PUSH2 JUMP JUMPDEST POP PUSH1 PUSH2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP1 DUP4 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SHA3 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 SLOAD TIMESTAMP GT DUP1 PUSH2 JUMPI POP PUSH1 SLOAD PUSH1 SLOAD DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV PUSH1 SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 JUMPI PUSH1 SLOAD PUSH1 SLOAD DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV PUSH1 SLOAD LT ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 PUSH1 EXP SUB CALLER AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP2 SHA3 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE SWAP1 DUP2 GT ISZERO PUSH2 JUMPI CALLER PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH2 PUSH1 SLOAD DUP4 DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO PUSH2 JUMPI PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 DUP2 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 DUP2 SWAP1 SHA3 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE PUSH1 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE SWAP2 SLOAD DUP2 AND SWAP2 CALLER SWAP1 SWAP2 AND SWAP1 PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP5 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB CALLER AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 DUP2 SWAP1 SSTORE JUMPDEST JUMPDEST JUMPDEST PUSH1 SLOAD CALLER PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 JUMPI POP PUSH1 SLOAD PUSH1 SLOAD DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV PUSH1 SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 JUMPI PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 DUP2 AND SWAP1 ADDRESS AND BALANCE DUP1 ISZERO PUSH2 MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO PUSH2 JUMPI PUSH1 DUP1 SLOAD PUSH1 NOT AND PUSH1 OR SWAP1 SSTORE JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP JUMP STOP UNKNOWN_0xdd CALLCODE MSTORE UNKNOWN_0xad SHL UNKNOWN_0xe2 UNKNOWN_0xc8 SWAP12 PUSH10 CALL PUSH4 CREATE2 GAS UNKNOWN_0x4d CREATE2 UNKNOWN_0x23 UNKNOWN_0xb3 UNKNOWN_0xef LOG1 PUSH6 SHA3 PUSH24 UNKNOWN_0xd9 INVALID_0x7e",
  "opcode_entropy": 4.779070445978812,
  "opcode_count": 2178,
  "unique_opcodes": 75,
  "byte_entropy": 5.586422748222843,
  "byte_60": 0.11872745162348311,
  "byte_40": 0.020006559527714005,
  "byte_52": 0.028533945555919975,
  "byte_36": 0.00032797638570022957,
  "byte_15": 0.02492620531321745,
  "byte_61": 0.0409970482125287,
  "byte_00": 0.05739586749754018,
  "byte_d8": 0.0006559527714004591,
  "byte_57": 0.0232863233847163,
  "byte_63": 0.0055755985569039025,
  "byte_ff": 0.0032797638570022957,
  "byte_7c": 0.0006559527714004591,
  "byte_01": 0.0409970482125287,
  "byte_35": 0.003935716628402755,
  "byte_04": 0.012791079042308954,
  "byte_16": 0.02164644145621515,
  "byte_06": 0.004919645785503444,
  "byte_fd": 0.005903574942604133,
  "byte_de": 0.0006559527714004591,
  "byte_03": 0.0321416857986225,
  "byte_81": 0.03804526074122663,
  "byte_14": 0.0065595277140045915,
  "byte_02": 0.02394227615611676,
  "byte_48": 0.00032797638570022957,
  "byte_80": 0.04394883568383076,
  "byte_09": 0.0036077402427025255,
  "byte_5e": 0.0009839291571006887,
  "byte_a7": 0.0006559527714004591,
  "byte_b3": 0.0006559527714004591,
  "byte_d3": 0.00032797638570022957,
  "byte_18": 0.00032797638570022957,
  "byte_0d": 0.00032797638570022957,
  "byte_dd": 0.0019678583142013774,
  "byte_23": 0.0006559527714004591,
  "byte_b8": 0.0006559527714004591,
  "byte_72": 0.0009839291571006887,
  "byte_2e": 0.00032797638570022957,
  "byte_29": 0.0009839291571006887,
  "byte_dc": 0.00032797638570022957,
  "byte_b0": 0.0006559527714004591,
  "byte_cf": 0.00032797638570022957,
  "byte_6a": 0.00032797638570022957,
  "byte_31": 0.0016398819285011479,
  "byte_3c": 0.0013119055428009183,
  "byte_e5": 0.0006559527714004591,
  "byte_67": 0.0006559527714004591,
  "byte_8f": 0.0006559527714004591,
  "byte_70": 0.0006559527714004591,
  "byte_a0": 0.009183338799606429,
  "byte_82": 0.012463102656608724,
  "byte_7b": 0.0006559527714004591,
  "byte_3e": 0.0006559527714004591,
  "byte_e9": 0.00032797638570022957,
  "byte_87": 0.0026238110856018366,
  "byte_fc": 0.0016398819285011479,
  "byte_d7": 0.0006559527714004591,
  "byte_08": 0.004263693014102984,
  "byte_0e": 0.004919645785503444,
  "byte_92": 0.005247622171203673,
  "byte_df": 0.0006559527714004591,
  "byte_f4": 0.0006559527714004591,
  "byte_8a": 0.00032797638570022957,
  "byte_26": 0.0006559527714004591,
  "byte_95": 0.0006559527714004591,
  "byte_9b": 0.0006559527714004591,
  "byte_41": 0.00032797638570022957,
  "byte_4b": 0.00032797638570022957,
  "byte_96": 0.00032797638570022957,
  "byte_2d": 0.00032797638570022957,
  "byte_0c": 0.0013119055428009183,
  "byte_d6": 0.0006559527714004591,
  "byte_a9": 0.00032797638570022957,
  "byte_05": 0.004919645785503444,
  "byte_9c": 0.00032797638570022957,
  "byte_bb": 0.00032797638570022957,
  "byte_fb": 0.00032797638570022957,
  "byte_62": 0.0006559527714004591,
  "byte_ed": 0.00032797638570022957,
  "byte_6b": 0.0019678583142013774,
  "byte_7e": 0.0009839291571006887,
  "byte_f8": 0.00032797638570022957,
  "byte_68": 0.0006559527714004591,
  "byte_5b": 0.04132502459822893,
  "byte_46": 0.0009839291571006887,
  "byte_54": 0.02164644145621515,
  "byte_0a": 0.011807149885208265,
  "byte_34": 0.0055755985569039025,
  "byte_83": 0.012463102656608724,
  "byte_91": 0.020334535913414234,
  "byte_64": 0.00032797638570022957,
  "byte_11": 0.004263693014102984,
  "byte_1f": 0.004263693014102984,
  "byte_50": 0.026238110856018366,
  "byte_90": 0.05313217448343719,
  "byte_20": 0.029845851098720892,
  "byte_10": 0.004263693014102984,
  "byte_2b": 0.0006559527714004591,
  "byte_33": 0.0045916693998032145,
  "byte_42": 0.0016398819285011479,
  "byte_6d": 0.00032797638570022957,
  "byte_93": 0.0019678583142013774,
  "byte_74": 0.0013119055428009183,
  "byte_0b": 0.003935716628402755,
  "byte_07": 0.0032797638570022957,
  "byte_55": 0.0065595277140045915,
  "byte_85": 0.005247622171203673,
  "byte_51": 0.019678583142013775,
  "byte_9e": 0.0013119055428009183,
  "byte_39": 0.0016398819285011479,
  "byte_a3": 0.0016398819285011479,
  "byte_56": 0.013447031813709412,
  "byte_88": 0.0026238110856018366,
  "byte_f1": 0.0013119055428009183,
  "byte_53": 0.00032797638570022957,
  "byte_7d": 0.0009839291571006887,
  "byte_98": 0.0006559527714004591,
  "byte_84": 0.0029517874713020664,
  "byte_7f": 0.0009839291571006887,
  "byte_c5": 0.0009839291571006887,
  "byte_19": 0.0019678583142013774,
  "byte_f3": 0.0045916693998032145,
  "byte_f5": 0.0016398819285011479,
  "byte_24": 0.0013119055428009183,
  "byte_1b": 0.0006559527714004591,
  "byte_1c": 0.0022958346999016072,
  "byte_44": 0.00032797638570022957,
  "byte_75": 0.0006559527714004591,
  "byte_99": 0.00032797638570022957,
  "byte_9a": 0.00032797638570022957,
  "byte_a2": 0.00032797638570022957,
  "byte_9f": 0.00032797638570022957,
  "byte_c3": 0.0009839291571006887,
  "byte_a4": 0.00032797638570022957,
  "byte_c9": 0.00032797638570022957,
  "byte_6f": 0.00032797638570022957,
  "byte_e1": 0.0006559527714004591,
  "byte_13": 0.0016398819285011479,
  "byte_73": 0.00032797638570022957,
  "byte_e8": 0.0006559527714004591,
  "byte_f6": 0.0006559527714004591,
  "byte_0f": 0.0013119055428009183,
  "byte_94": 0.0013119055428009183,
  "byte_8c": 0.00032797638570022957,
  "byte_eb": 0.0006559527714004591,
  "byte_ec": 0.00032797638570022957,
  "byte_d1": 0.00032797638570022957,
  "byte_4f": 0.00032797638570022957,
  "byte_71": 0.00032797638570022957,
  "byte_1e": 0.0006559527714004591,
  "byte_c0": 0.00032797638570022957,
  "byte_f7": 0.00032797638570022957,
  "byte_b2": 0.00032797638570022957,
  "byte_c8": 0.0006559527714004591,
  "byte_c7": 0.0006559527714004591,
  "byte_b9": 0.00032797638570022957,
  "byte_25": 0.0006559527714004591,
  "byte_8d": 0.0006559527714004591,
  "byte_89": 0.0006559527714004591,
  "byte_86": 0.0009839291571006887,
  "byte_12": 0.00032797638570022957,
  "byte_17": 0.0006559527714004591,
  "byte_fe": 0.0016398819285011479,
  "byte_3a": 0.00032797638570022957,
  "byte_49": 0.00032797638570022957,
  "byte_30": 0.0006559527714004591,
  "byte_f2": 0.00032797638570022957,
  "byte_ad": 0.00032797638570022957,
  "byte_e2": 0.00032797638570022957,
  "byte_69": 0.00032797638570022957,
  "byte_c2": 0.00032797638570022957,
  "byte_37": 0.00032797638570022957,
  "byte_aa": 0.00032797638570022957,
  "byte_c4": 0.00032797638570022957,
  "byte_a1": 0.0006559527714004591,
  "byte_28": 0.00032797638570022957,
  "byte_5a": 0.00032797638570022957,
  "byte_4d": 0.00032797638570022957,
  "byte_ef": 0.00032797638570022957,
  "byte_65": 0.00032797638570022957,
  "byte_7a": 0.0006559527714004591,
  "byte_58": 0.00032797638570022957,
  "byte_77": 0.00032797638570022957,
  "byte_f9": 0.00032797638570022957,
  "byte_be": 0.00032797638570022957,
  "byte_c1": 0.00032797638570022957,
  "byte_ae": 0.00032797638570022957,
  "byte_8e": 0.00032797638570022957,
  "byte_4a": 0.00032797638570022957,
  "byte_d9": 0.00032797638570022957,
  "byte_e4": 0.00032797638570022957,
  "byte_76": 0.00032797638570022957,
  "num_nodes": 13,
  "num_edges": 18,
  "avg_degree": 2.769230769230769,
  "density": 0.11538461538461539,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 40,
  "event_nums": 23,
  "creation_block": 4140073,
  "creation_timestamp": 1502363230,
  "life_time": 1643589.0,
  "duration_seconds": 26560373.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 14,
  "num_buyers": 7,
  "num_sellers": 13,
  "num_creator_transfers": 8,
  "buy_amt": 5.291e+18,
  "sell_amt": 6.866e+18,
  "avg_value": 2.965121951219512e+17,
  "txn_per_block": 2.4336969682220017e-05,
  "avg_gas_limit": 83206.0,
  "std_gas_limit": 179592.4722321345,
  "avg_gas_used": 62164.325,
  "std_gas_used": 160939.33441974147,
  "avg_gas_price": 14725000000.0,
  "std_gas_price": 8803372933.143295,
  "transfer_num": 5,
  "startico_num": 1,
  "safewithdrawal_num": 9,
  "timeline_sequence": [
    [
      4140073,
      1502363230,
      0,
      62,
      0,
      1155346,
      21000000000,
      0,
      0,
      2801358,
      1055345,
      18981078
    ],
    [
      4190788,
      1503420750,
      2,
      82,
      0,
      188204,
      3000000000,
      0,
      0,
      2121269,
      88203,
      18930363
    ],
    [
      4190805,
      1503421196,
      5,
      42,
      1000000000000000000,
      191988,
      10000000000,
      0,
      0,
      1485147,
      91987,
      18930346
    ],
    [
      4190829,
      1503421705,
      3,
      157,
      250000000000000000,
      161988,
      10000000000,
      0,
      0,
      5094833,
      61987,
      18930322
    ],
    [
      4190910,
      1503423374,
      28,
      29,
      1500000000000000000,
      210000,
      21000000000,
      0,
      0,
      1061637,
      61987,
      18930241
    ],
    [
      4191034,
      1503425644,
      4,
      24,
      250000000000000000,
      46988,
      21000000000,
      0,
      0,
      805542,
      46987,
      18930117
    ],
    [
      4191082,
      1503426618,
      2,
      62,
      300000000000000000,
      61988,
      21000000000,
      0,
      0,
      2371519,
      61987,
      18930069
    ],
    [
      4191557,
      1503435724,
      6,
      21,
      100000000000000000,
      46988,
      21000000000,
      0,
      0,
      737043,
      46987,
      18929594
    ],
    [
      4193384,
      1503473382,
      0,
      39,
      500000000000000000,
      61988,
      21000000000,
      0,
      0,
      1352825,
      61987,
      18927767
    ],
    [
      4194015,
      1503486037,
      0,
      8,
      100000000000000000,
      61988,
      21000000000,
      0,
      0,
      488615,
      61987,
      18927136
    ],
    [
      4194534,
      1503497078,
      17,
      13,
      500000000000000000,
      23487,
      21000000000,
      1,
      0,
      609500,
      23487,
      18926617
    ],
    [
      4194599,
      1503498236,
      18,
      71,
      250000000000000000,
      61988,
      21000000000,
      0,
      0,
      6400380,
      61987,
      18926552
    ],
    [
      4198610,
      1503580806,
      4,
      40,
      1000000000000000000,
      50000,
      21000000000,
      1,
      0,
      1661914,
      50000,
      18922541
    ],
    [
      4198623,
      1503581095,
      5,
      54,
      1000000000000000000,
      61988,
      21000000000,
      0,
      0,
      2449110,
      61987,
      18922528
    ],
    [
      4221088,
      1504126773,
      2,
      131,
      11000000000000000,
      21000,
      16000000000,
      1,
      0,
      4946424,
      21000,
      18900063
    ],
    [
      4221192,
      1504129567,
      4,
      12,
      11000000000000000,
      61988,
      15000000000,
      0,
      0,
      361079,
      61987,
      18899959
    ],
    [
      4227502,
      1504284079,
      9,
      92,
      10000000000000000,
      161988,
      7000000000,
      0,
      0,
      2888588,
      61987,
      18893649
    ],
    [
      4241960,
      1504637955,
      5,
      84,
      0,
      48988,
      21000000000,
      0,
      0,
      1798039,
      33988,
      18879191
    ],
    [
      4241995,
      1504639065,
      7,
      84,
      0,
      48988,
      21000000000,
      0,
      0,
      2428528,
      33988,
      18879156
    ],
    [
      4242095,
      1504641291,
      2,
      76,
      0,
      48988,
      21000000000,
      0,
      0,
      4021601,
      33988,
      18879056
    ],
    [
      4243303,
      1504670413,
      6,
      77,
      0,
      48988,
      21000000000,
      0,
      0,
      1732682,
      33988,
      18877848
    ],
    [
      4244036,
      1504689129,
      35,
      112,
      20000000000000000,
      33013,
      21000000000,
      0,
      0,
      4447121,
      30759,
      18877115
    ],
    [
      4245191,
      1504717620,
      36,
      164,
      0,
      48988,
      21000000000,
      0,
      0,
      3767483,
      33988,
      18875960
    ],
    [
      4323658,
      1506743454,
      7,
      83,
      0,
      51950,
      21000000000,
      0,
      0,
      5559061,
      36950,
      18797493
    ],
    [
      4323660,
      1506743530,
      8,
      43,
      0,
      51950,
      21000000000,
      0,
      0,
      2318610,
      24091,
      18797491
    ],
    [
      4354098,
      1507659227,
      0,
      124,
      0,
      52014,
      21000000000,
      0,
      0,
      5171480,
      37014,
      18767053
    ],
    [
      4354111,
      1507659626,
      9,
      142,
      0,
      48988,
      21000000000,
      0,
      0,
      6199757,
      33988,
      18767040
    ],
    [
      4407628,
      1508667249,
      5,
      15,
      0,
      52014,
      21000000000,
      0,
      1,
      642644,
      52014,
      18713523
    ],
    [
      4407657,
      1508667567,
      9,
      52,
      0,
      48988,
      21000000000,
      0,
      1,
      1877626,
      24494,
      18713494
    ],
    [
      4637684,
      1511871184,
      6,
      64,
      20000000000000000,
      22000,
      21000000000,
      0,
      0,
      1365683,
      21683,
      18483467
    ],
    [
      4637689,
      1511871258,
      7,
      29,
      44000000000000000,
      22000,
      21000000000,
      0,
      0,
      1005058,
      21683,
      18483462
    ],
    [
      5783662,
      1528923603,
      8,
      161,
      0,
      52078,
      3000000000,
      0,
      1,
      6813780,
      52078,
      17337489
    ],
    [
      4241960,
      1504637955,
      0,
      0,
      500000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      4241995,
      1504639065,
      0,
      0,
      1100000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      4242095,
      1504641291,
      0,
      0,
      500000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      4243303,
      1504670413,
      0,
      0,
      1000000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      4244036,
      1504689129,
      0,
      0,
      20000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      4245191,
      1504717620,
      0,
      0,
      1500000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      4354111,
      1507659626,
      0,
      0,
      300000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      4407657,
      1508667567,
      0,
      0,
      371000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  ],
  "sourcecode": "pragma solidity ^0.4.11;\n \ncontract Token {\n    string public symbol = \"711\";\n    string public name = \"711 token\";\n    uint8 public constant decimals = 18;\n    uint256 _totalSupply = 711000000000000000000;\n    address owner = 0;\n    bool startDone = false;\n    uint public amountRaised;\n    uint public deadline;\n    uint public overRaisedUnsend = 0;\n    uint public backers = 0;\n    uint rate = 4;\n    uint successcoef = 2;\n    uint unreserved = 80;\n    uint _durationInMinutes = 0;\n    bool fundingGoalReached = false;\n    mapping(address => uint256) public balanceOf;\n\t\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    mapping(address => uint256) balances;\n \n    mapping(address => mapping (address => uint256)) allowed;\n \n    function Token(address adr) {\n\t\towner = adr;        \n    }\n\t\n\tfunction StartICO(uint256 durationInMinutes)\n\t{\n\t\tif (msg.sender == owner && startDone == false)\n\t\t{\n\t\t\tbalances[owner] = _totalSupply;\n\t\t\t_durationInMinutes = durationInMinutes;\n            deadline = now + durationInMinutes * 1 minutes;\n\t\t\tstartDone = true;\n\t\t}\n\t}\n \n    function totalSupply() constant returns (uint256 totalSupply) {        \n\t\treturn _totalSupply;\n    }\n \n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n \n    function transfer(address _to, uint256 _amount) returns (bool success) {\n        if (balances[msg.sender] >= _amount \n            && _amount > 0\n            && balances[_to] + _amount > balances[_to]) {\n            balances[msg.sender] -= _amount;\n            balances[_to] += _amount;\n            Transfer(msg.sender, _to, _amount);\n            return true;\n        } else {\n            return false;\n        }\n    }\n \n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) returns (bool success) {\n        if (balances[_from] >= _amount\n            && allowed[_from][msg.sender] >= _amount\n            && _amount > 0\n            && balances[_to] + _amount > balances[_to]) {\n            balances[_from] -= _amount;\n            allowed[_from][msg.sender] -= _amount;\n            balances[_to] += _amount;\n            Transfer(_from, _to, _amount);\n            return true;\n        } else {\n            return false;\n        }\n    }\n    \n    function () payable {\n        uint _amount = msg.value;\n        uint amount = msg.value;\n        _amount = _amount * rate;\n        if (amountRaised + _amount <= _totalSupply * unreserved / 100\n            && balances[owner] >= _amount\n            && _amount > 0\n            && balances[msg.sender] + _amount > balances[msg.sender]\n            && now <= deadline\n            && !fundingGoalReached \n            && startDone) {\n        backers += 1;\n        balances[msg.sender] += _amount;\n        balances[owner] -= _amount;\n        amountRaised += _amount;\n        Transfer(owner, msg.sender, _amount);\n        } else {\n            if (!msg.sender.send(amount)) {\n                overRaisedUnsend += amount; \n            }\n        }\n    }\n \n    function approve(address _spender, uint256 _amount) returns (bool success) {\n        allowed[msg.sender][_spender] = _amount;\n        Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n \n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n    \n    modifier afterDeadline() { if (now > deadline || amountRaised >= _totalSupply / successcoef) _; }\n\n    function safeWithdrawal() afterDeadline {\n\n    if (amountRaised < _totalSupply / successcoef) {\n            uint _amount = balances[msg.sender];\n            balances[msg.sender] = 0;\n            if (_amount > 0) {\n                if (msg.sender.send(_amount / rate)) {\n                    balances[owner] += _amount;\n                    amountRaised -= _amount;\n                    Transfer(msg.sender, owner, _amount);\n                } else {\n                    balances[msg.sender] = _amount;\n                }\n            }\n        }\n\n    if (owner == msg.sender\n    \t&& amountRaised >= _totalSupply / successcoef) {\n           if (owner.send(this.balance)) {\n               fundingGoalReached = true;\n            } \n        }\n    }\n}"
}