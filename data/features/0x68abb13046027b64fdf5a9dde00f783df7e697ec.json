{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH4 PUSH29 PUSH1 CALLDATALOAD DIV AND PUSH4 DUP2 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 CALLDATALOAD ISZERO ISZERO PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP3 ISZERO ISZERO DUP6 DUP6 ADD MSTORE PUSH1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 DUP5 ADD MSTORE PUSH1 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD DUP2 AND SWAP1 PUSH1 CALLDATALOAD AND PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST PUSH1 SLOAD PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 DUP1 DUP1 DUP4 GT PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP2 SHA3 SWAP1 JUMPDEST PUSH1 DUP3 ADD SLOAD DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP3 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 PUSH1 MUL ADD PUSH1 ADD SLOAD PUSH3 ADD TIMESTAMP GT ISZERO PUSH2 JUMPI PUSH2 DUP3 PUSH1 ADD DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 SWAP2 DUP3 MSTORE PUSH1 SWAP1 SWAP2 SHA3 PUSH1 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 DUP5 ADD SLOAD SWAP1 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 DUP4 ADD SSTORE JUMPDEST PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD SLOAD DUP4 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP1 MLOAD PUSH1 PUSH1 EXP PUSH4 MUL DUP2 MSTORE ADDRESS PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD DUP7 SWAP4 PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP4 AND SWAP3 PUSH4 SWAP3 PUSH1 DUP1 DUP3 ADD SWAP4 PUSH1 SWAP4 SWAP1 SWAP3 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP3 ADD SLOAD PUSH2 SWAP1 DUP5 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 DUP4 ADD SSTORE PUSH1 DUP3 ADD SLOAD PUSH2 SWAP1 DUP5 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 DUP4 ADD SSTORE PUSH1 DUP3 ADD SLOAD PUSH2 SWAP1 PUSH1 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 DUP4 ADD SSTORE PUSH1 SLOAD PUSH2 SWAP1 DUP5 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SWAP1 DUP2 SSTORE PUSH1 DUP1 SLOAD PUSH1 DUP1 MLOAD PUSH32 DUP2 MSTORE CALLER SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP2 AND SWAP3 PUSH4 SWAP3 PUSH1 DUP1 DUP4 ADD SWAP4 PUSH1 SWAP4 SWAP1 SWAP3 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP PUSH1 DUP1 SLOAD PUSH1 DUP1 MLOAD PUSH1 PUSH1 EXP PUSH4 MUL DUP2 MSTORE ADDRESS PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP3 AND SWAP3 PUSH4 SWAP3 PUSH1 DUP1 DUP5 ADD SWAP4 PUSH1 SWAP4 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 SSTORE PUSH1 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 MLOAD PUSH32 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 PUSH2 PUSH2 JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 DUP2 DUP2 MSTORE PUSH1 DUP1 DUP5 SHA3 DUP2 MLOAD PUSH1 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 MSTORE SWAP4 DUP2 ADD SLOAD DUP5 DUP5 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 AND ISZERO ISZERO DUP5 DUP4 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 DUP6 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 DUP6 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 DUP6 ADD MSTORE PUSH1 DUP2 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP5 SWAP6 SWAP2 SWAP5 PUSH1 DUP8 ADD SWAP5 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 JUMPI PUSH1 DUP5 DUP2 MSTORE PUSH1 SWAP1 DUP2 SWAP1 SHA3 PUSH1 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP3 MSTORE PUSH1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 JUMP JUMPDEST POP POP POP SWAP2 MSTORE POP POP PUSH1 ADD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH2 PUSH2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 LT PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 LT PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD SWAP5 POP JUMPDEST PUSH1 SLOAD DUP6 LT DUP1 ISZERO PUSH2 JUMPI POP PUSH3 GAS GT JUMPDEST ISZERO PUSH2 JUMPI PUSH1 PUSH1 PUSH1 DUP8 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 SWAP2 DUP3 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP1 SWAP2 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 SWAP3 DUP4 ADD DUP3 SHA3 DUP4 MLOAD PUSH1 DUP2 ADD DUP6 MSTORE DUP2 SLOAD SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 DUP2 ADD SLOAD DUP6 DUP4 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 AND ISZERO ISZERO DUP6 DUP6 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 DUP7 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 DUP7 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 DUP7 ADD MSTORE PUSH1 DUP2 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP7 MSTORE DUP1 DUP7 MSTORE SWAP2 SWAP5 PUSH1 DUP8 ADD SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 JUMPI PUSH1 DUP5 DUP2 MSTORE PUSH1 SWAP1 DUP2 SWAP1 SHA3 PUSH1 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP3 MSTORE PUSH1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP POP SWAP4 POP PUSH1 SWAP3 POP PUSH1 SWAP2 POP JUMPDEST DUP4 PUSH1 ADD MLOAD MLOAD DUP3 LT ISZERO PUSH2 JUMPI PUSH1 DUP5 ADD MLOAD DUP1 MLOAD DUP4 SWAP1 DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP1 PUSH1 ADD SWAP1 PUSH1 MUL ADD MLOAD PUSH1 ADD MLOAD PUSH3 ADD TIMESTAMP GT ISZERO PUSH2 JUMPI PUSH2 DUP5 PUSH1 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 SWAP1 DUP2 MUL SWAP1 SWAP2 ADD ADD MLOAD MLOAD DUP5 SWAP1 PUSH4 PUSH2 AND JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 SWAP1 SWAP2 ADD SWAP1 PUSH2 JUMP JUMPDEST PUSH10 DUP4 LT PUSH2 JUMPI PUSH2 PUSH1 SLOAD PUSH2 DUP6 PUSH1 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 PUSH4 PUSH2 AND JUMP JUMPDEST SWAP1 POP ADDRESS BALANCE DUP2 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 MUL SWAP1 DUP4 SWAP1 PUSH1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP JUMPDEST PUSH1 SWAP1 SWAP5 ADD SWAP4 PUSH2 JUMP JUMPDEST POP POP POP PUSH1 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 DUP2 SWAP1 PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH10 DUP4 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP1 MLOAD PUSH32 DUP2 MSTORE CALLER PUSH1 DUP3 ADD MSTORE ADDRESS PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD DUP7 SWAP4 PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP4 AND SWAP3 PUSH4 SWAP3 PUSH1 DUP1 DUP3 ADD SWAP4 PUSH1 SWAP4 SWAP1 SWAP3 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 PUSH1 DUP2 ADD SLOAD PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 SLOAD PUSH1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 DUP4 SWAP1 MSTORE PUSH32 SWAP1 SWAP2 ADD DUP1 SLOAD CALLER PUSH20 NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE DUP5 SLOAD AND OR DUP4 SSTORE SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 DUP2 ADD SLOAD PUSH2 SWAP1 DUP5 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 DUP3 ADD SSTORE PUSH1 SLOAD PUSH2 SWAP1 DUP5 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SWAP1 DUP2 SSTORE PUSH1 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP6 DUP2 MSTORE TIMESTAMP PUSH1 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 DUP7 ADD DUP1 SLOAD PUSH1 DUP2 DUP2 ADD DUP4 SSTORE PUSH1 SWAP3 DUP4 MSTORE DUP4 DUP4 SHA3 SWAP6 MLOAD PUSH1 SWAP1 SWAP3 MUL SWAP1 SWAP6 ADD SWAP1 DUP2 SSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP2 SLOAD DUP4 MLOAD PUSH32 DUP2 MSTORE CALLER SWAP6 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE ADDRESS PUSH1 DUP7 ADD MSTORE PUSH1 DUP6 ADD DUP9 SWAP1 MSTORE SWAP3 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP4 AND SWAP4 PUSH4 SWAP4 PUSH1 DUP1 DUP4 ADD SWAP5 SWAP2 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP PUSH1 DUP1 SLOAD PUSH1 DUP1 MLOAD PUSH1 PUSH1 EXP PUSH4 MUL DUP2 MSTORE ADDRESS PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP3 AND SWAP3 PUSH4 SWAP3 PUSH1 DUP1 DUP5 ADD SWAP4 PUSH1 SWAP4 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 SSTORE PUSH1 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 MLOAD PUSH32 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP PUSH1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 PUSH2 PUSH2 JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 DUP2 DUP2 MSTORE PUSH1 DUP1 DUP5 SHA3 DUP2 MLOAD PUSH1 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 MSTORE SWAP4 DUP2 ADD SLOAD DUP5 DUP5 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 AND ISZERO ISZERO DUP5 DUP4 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 DUP6 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 DUP6 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 DUP6 ADD MSTORE PUSH1 DUP2 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP5 SWAP6 SWAP2 SWAP5 PUSH1 DUP8 ADD SWAP5 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 JUMPI PUSH1 DUP5 DUP2 MSTORE PUSH1 SWAP1 DUP2 SWAP1 SHA3 PUSH1 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP3 MSTORE PUSH1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 JUMP JUMPDEST POP POP POP SWAP2 MSTORE POP POP PUSH1 ADD MLOAD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD SWAP5 POP JUMPDEST PUSH1 SLOAD DUP6 LT DUP1 ISZERO PUSH2 JUMPI POP PUSH3 GAS GT JUMPDEST ISZERO PUSH2 JUMPI PUSH1 PUSH1 PUSH1 DUP8 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 SWAP2 DUP3 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP1 SWAP2 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 ADD DUP2 SHA3 SWAP5 POP SWAP3 POP DUP3 SWAP2 POP JUMPDEST PUSH1 DUP5 ADD SLOAD DUP3 LT ISZERO PUSH2 JUMPI PUSH1 DUP5 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 PUSH1 MUL ADD PUSH1 ADD SLOAD PUSH3 ADD TIMESTAMP GT ISZERO PUSH2 JUMPI PUSH2 DUP5 PUSH1 ADD DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 SWAP2 DUP3 MSTORE PUSH1 SWAP1 SWAP2 SHA3 PUSH1 SWAP1 SWAP2 MUL ADD SLOAD DUP5 SWAP1 PUSH4 PUSH2 AND JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 SWAP1 SWAP2 ADD SWAP1 PUSH2 JUMP JUMPDEST PUSH10 DUP4 LT PUSH2 JUMPI PUSH2 PUSH2 PUSH2 PUSH1 SLOAD DUP7 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP1 MLOAD PUSH1 PUSH1 EXP PUSH4 MUL DUP2 MSTORE ADDRESS PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP DUP5 SWAP4 PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP3 AND SWAP3 PUSH4 SWAP3 PUSH1 DUP1 DUP5 ADD SWAP4 PUSH1 SWAP4 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP5 ADD SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 DUP1 SLOAD DUP7 SLOAD PUSH1 DUP1 MLOAD PUSH32 DUP2 MSTORE PUSH1 PUSH1 PUSH1 EXP SUB SWAP3 DUP4 AND SWAP6 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 DUP6 ADD DUP7 SWAP1 MSTORE MLOAD SWAP2 AND SWAP3 PUSH4 SWAP3 PUSH1 DUP1 DUP4 ADD SWAP4 PUSH1 SWAP4 SWAP1 SWAP3 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SWAP1 SWAP5 ADD SWAP4 PUSH2 JUMP JUMPDEST PUSH1 DUP6 SWAP1 SSTORE PUSH1 SLOAD DUP6 EQ ISZERO PUSH2 JUMPI PUSH1 PUSH1 SSTORE JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP1 MLOAD PUSH1 PUSH1 EXP PUSH4 MUL DUP2 MSTORE ADDRESS PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP3 AND SWAP3 PUSH4 SWAP3 PUSH1 DUP1 DUP5 ADD SWAP4 PUSH1 SWAP4 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 PUSH2 PUSH2 JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 DUP2 DUP2 MSTORE PUSH1 DUP1 DUP5 SHA3 DUP2 MLOAD PUSH1 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 MSTORE SWAP4 DUP2 ADD SLOAD DUP5 DUP5 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 AND ISZERO ISZERO DUP5 DUP4 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 DUP6 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 DUP6 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 DUP6 ADD MSTORE PUSH1 DUP2 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP5 SWAP6 SWAP2 SWAP5 PUSH1 DUP8 ADD SWAP5 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 JUMPI PUSH1 DUP5 DUP2 MSTORE PUSH1 SWAP1 DUP2 SWAP1 SHA3 PUSH1 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP3 MSTORE PUSH1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 JUMP JUMPDEST POP POP POP SWAP2 MSTORE POP POP PUSH1 ADD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP2 GT PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH8 DUP2 MUL ADDRESS BALANCE LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 MLOAD CALLER SWAP1 PUSH8 DUP4 MUL DUP1 ISZERO PUSH2 MUL SWAP2 PUSH1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP2 GT PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP2 SWAP1 SSTORE PUSH1 DUP1 SLOAD PUSH1 DUP1 MLOAD PUSH1 PUSH1 EXP PUSH4 MUL DUP2 MSTORE ADDRESS PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP3 AND SWAP3 PUSH4 SWAP3 PUSH1 DUP1 DUP5 ADD SWAP4 PUSH1 SWAP4 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 SSTORE PUSH1 PUSH1 SSTORE PUSH1 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 SWAP2 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP2 GT PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP2 SWAP1 SSTORE PUSH1 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 SWAP2 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 PUSH1 DUP2 SWAP1 MSTORE PUSH1 SWAP2 DUP3 MSTORE PUSH1 SWAP1 SWAP2 SHA3 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 DUP3 ADD SLOAD PUSH1 DUP4 ADD SLOAD PUSH1 DUP5 ADD SLOAD PUSH1 SWAP1 SWAP5 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP6 AND SWAP5 SWAP3 SWAP4 PUSH1 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP7 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP3 PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH4 DUP4 DUP4 PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 PUSH2 PUSH2 JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 DUP2 DUP2 MSTORE PUSH1 DUP1 DUP5 SHA3 DUP2 MLOAD PUSH1 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 MSTORE SWAP4 DUP2 ADD SLOAD DUP5 DUP5 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 AND ISZERO ISZERO DUP5 DUP4 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 DUP6 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 DUP6 ADD MSTORE PUSH1 DUP2 ADD SLOAD PUSH1 DUP6 ADD MSTORE PUSH1 DUP2 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE DUP7 SWAP6 SWAP5 SWAP3 SWAP4 PUSH1 DUP7 ADD SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP8 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 JUMPI PUSH1 DUP5 DUP2 MSTORE PUSH1 SWAP1 DUP2 SWAP1 SHA3 PUSH1 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP3 MSTORE PUSH1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP POP SWAP3 POP PUSH1 SWAP1 POP PUSH1 SWAP2 POP JUMPDEST DUP3 PUSH1 ADD MLOAD MLOAD DUP3 LT ISZERO PUSH2 JUMPI PUSH1 DUP4 ADD MLOAD DUP1 MLOAD DUP4 SWAP1 DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP1 PUSH1 ADD SWAP1 PUSH1 MUL ADD MLOAD PUSH1 ADD MLOAD PUSH3 ADD TIMESTAMP LT ISZERO PUSH2 JUMPI PUSH2 DUP4 PUSH1 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 SWAP1 DUP2 MUL SWAP1 SWAP2 ADD ADD MLOAD MLOAD DUP3 SWAP1 PUSH4 PUSH2 AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 SWAP1 SWAP2 ADD SWAP1 PUSH2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SSTORE PUSH1 DUP1 MLOAD PUSH1 DUP2 MSTORE SWAP1 MLOAD PUSH32 SWAP2 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP1 MLOAD PUSH32 DUP2 MSTORE CALLER PUSH1 DUP3 ADD MSTORE ADDRESS PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH1 PUSH1 PUSH1 EXP SUB AND SWAP2 PUSH4 SWAP2 PUSH1 DUP1 DUP4 ADD SWAP3 PUSH1 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB DUP4 AND PUSH20 NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 SWAP2 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP3 DUP3 GT ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 DUP1 DUP4 ISZERO ISZERO PUSH2 JUMPI PUSH1 SWAP2 POP PUSH2 JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV EQ PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 PUSH1 PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 MSTORE PUSH1 ADD PUSH1 DUP2 MSTORE PUSH1 ADD PUSH1 ISZERO ISZERO DUP2 MSTORE PUSH1 ADD PUSH1 DUP2 MSTORE PUSH1 ADD PUSH1 DUP2 MSTORE PUSH1 ADD PUSH1 DUP2 MSTORE PUSH1 ADD PUSH1 DUP2 MSTORE POP SWAP1 JUMP STOP LOG1 PUSH6 SHA3 CHAINID DUP9 UNOFFICIAL_SWAP SWAP1 UNKNOWN_0xe3 UNKNOWN_0x22 SWAP5 UNKNOWN_0xb8 UNKNOWN_0xe0 SDIV NOT STOP DUP16 UNKNOWN_0xc2 UNKNOWN_0xe9 UNKNOWN_0xbb PUSH10 DUP11 UNKNOWN_0xe8 SWAP11 INVALID_0x6c",
  "opcode_entropy": 4.922441590265535,
  "opcode_count": 4518,
  "unique_opcodes": 80,
  "byte_entropy": 5.873813737237397,
  "byte_60": 0.10280517879161528,
  "byte_80": 0.04485203452527744,
  "byte_40": 0.008631319358816275,
  "byte_52": 0.02527743526510481,
  "byte_04": 0.007398273736128237,
  "byte_36": 0.0004623921085080148,
  "byte_10": 0.008168927250308261,
  "byte_61": 0.03976572133168927,
  "byte_01": 0.05718249075215783,
  "byte_48": 0.002157829839704069,
  "byte_57": 0.023736128236744758,
  "byte_63": 0.0094019728729963,
  "byte_ff": 0.018187422934648582,
  "byte_7c": 0.00030826140567200987,
  "byte_00": 0.0594944512946979,
  "byte_35": 0.002003699136868064,
  "byte_16": 0.013255240443896425,
  "byte_0f": 0.0012330456226880395,
  "byte_14": 0.007090012330456227,
  "byte_9c": 0.0012330456226880395,
  "byte_ce": 0.0004623921085080148,
  "byte_81": 0.03390875462392109,
  "byte_4a": 0.0009247842170160296,
  "byte_2b": 0.00030826140567200987,
  "byte_c8": 0.0004623921085080148,
  "byte_0c": 0.0010789149198520344,
  "byte_73": 0.0004623921085080148,
  "byte_19": 0.0015413070283600493,
  "byte_5d": 0.0004623921085080148,
  "byte_21": 0.0006165228113440197,
  "byte_a5": 0.0004623921085080148,
  "byte_8b": 0.0004623921085080148,
  "byte_1d": 0.0004623921085080148,
  "byte_db": 0.00030826140567200987,
  "byte_c3": 0.0006165228113440197,
  "byte_b2": 0.0007706535141800247,
  "byte_3a": 0.0009247842170160296,
  "byte_68": 0.00015413070283600493,
  "byte_c7": 0.0007706535141800247,
  "byte_43": 0.00030826140567200987,
  "byte_d8": 0.0004623921085080148,
  "byte_dc": 0.00030826140567200987,
  "byte_4d": 0.0006165228113440197,
  "byte_6c": 0.00030826140567200987,
  "byte_e1": 0.0006165228113440197,
  "byte_e5": 0.0004623921085080148,
  "byte_f1": 0.002466091245376079,
  "byte_53": 0.0004623921085080148,
  "byte_1e": 0.0006165228113440197,
  "byte_a0": 0.01125154130702836,
  "byte_02": 0.019266337854500618,
  "byte_09": 0.0030826140567200987,
  "byte_5a": 0.0027743526510480886,
  "byte_41": 0.0004623921085080148,
  "byte_ae": 0.00030826140567200987,
  "byte_23": 0.0007706535141800247,
  "byte_f4": 0.0004623921085080148,
  "byte_38": 0.00030826140567200987,
  "byte_62": 0.002157829839704069,
  "byte_93": 0.006935881627620222,
  "byte_e9": 0.0006165228113440197,
  "byte_ed": 0.0009247842170160296,
  "byte_76": 0.00030826140567200987,
  "byte_42": 0.0013871763255240443,
  "byte_98": 0.0006165228113440197,
  "byte_44": 0.0012330456226880395,
  "byte_8c": 0.0004623921085080148,
  "byte_1f": 0.00030826140567200987,
  "byte_08": 0.0026202219482120838,
  "byte_85": 0.006473489519112207,
  "byte_77": 0.00030826140567200987,
  "byte_94": 0.005394574599260173,
  "byte_ef": 0.0004623921085080148,
  "byte_fa": 0.0009247842170160296,
  "byte_9d": 0.00015413070283600493,
  "byte_a4": 0.0006165228113440197,
  "byte_a1": 0.0015413070283600493,
  "byte_83": 0.01310110974106042,
  "byte_7d": 0.0006165228113440197,
  "byte_bc": 0.00030826140567200987,
  "byte_a8": 0.0004623921085080148,
  "byte_74": 0.00015413070283600493,
  "byte_30": 0.002157829839704069,
  "byte_ba": 0.00030826140567200987,
  "byte_d4": 0.00030826140567200987,
  "byte_aa": 0.0007706535141800247,
  "byte_65": 0.0004623921085080148,
  "byte_4e": 0.00030826140567200987,
  "byte_45": 0.00030826140567200987,
  "byte_03": 0.01618372379778052,
  "byte_32": 0.00030826140567200987,
  "byte_c1": 0.0004623921085080148,
  "byte_6b": 0.00015413070283600493,
  "byte_07": 0.0018495684340320592,
  "byte_47": 0.00030826140567200987,
  "byte_cf": 0.00030826140567200987,
  "byte_64": 0.0006165228113440197,
  "byte_a6": 0.0004623921085080148,
  "byte_8f": 0.0007706535141800247,
  "byte_71": 0.0004623921085080148,
  "byte_d9": 0.00030826140567200987,
  "byte_ac": 0.00030826140567200987,
  "byte_8e": 0.0004623921085080148,
  "byte_d3": 0.0009247842170160296,
  "byte_86": 0.004007398273736128,
  "byte_da": 0.00030826140567200987,
  "byte_f9": 0.00030826140567200987,
  "byte_9b": 0.00030826140567200987,
  "byte_2f": 0.0006165228113440197,
  "byte_f8": 0.00030826140567200987,
  "byte_39": 0.0004623921085080148,
  "byte_b0": 0.0006165228113440197,
  "byte_f2": 0.0006165228113440197,
  "byte_92": 0.011405672009864365,
  "byte_c5": 0.0006165228113440197,
  "byte_fc": 0.0004623921085080148,
  "byte_54": 0.019266337854500618,
  "byte_6a": 0.00015413070283600493,
  "byte_e6": 0.0006165228113440197,
  "byte_5b": 0.03313810110974106,
  "byte_34": 0.004315659679408138,
  "byte_15": 0.026972872996300863,
  "byte_56": 0.01340937114673243,
  "byte_fd": 0.014180024660912454,
  "byte_50": 0.03190505548705302,
  "byte_5f": 0.0006165228113440197,
  "byte_17": 0.002157829839704069,
  "byte_51": 0.01757090012330456,
  "byte_91": 0.016954377311960544,
  "byte_82": 0.017416769420468558,
  "byte_90": 0.04192355117139334,
  "byte_20": 0.014180024660912454,
  "byte_f3": 0.0007706535141800247,
  "byte_7f": 0.002311960542540074,
  "byte_97": 0.0007706535141800247,
  "byte_be": 0.0009247842170160296,
  "byte_e8": 0.00030826140567200987,
  "byte_06": 0.0036991368680641184,
  "byte_0a": 0.009093711467324291,
  "byte_6d": 0.00030826140567200987,
  "byte_0d": 0.0018495684340320592,
  "byte_9a": 0.0007706535141800247,
  "byte_c4": 0.0006165228113440197,
  "byte_0e": 0.0015413070283600493,
  "byte_9f": 0.00015413070283600493,
  "byte_59": 0.0004623921085080148,
  "byte_6e": 0.00030826140567200987,
  "byte_ab": 0.0006165228113440197,
  "byte_11": 0.004007398273736128,
  "byte_cd": 0.0004623921085080148,
  "byte_12": 0.0010789149198520344,
  "byte_a7": 0.0010789149198520344,
  "byte_13": 0.0010789149198520344,
  "byte_e0": 0.0027743526510480886,
  "byte_f5": 0.00030826140567200987,
  "byte_87": 0.004007398273736128,
  "byte_95": 0.002466091245376079,
  "byte_84": 0.010018495684340321,
  "byte_c0": 0.002157829839704069,
  "byte_3e": 0.0030826140567200987,
  "byte_24": 0.0018495684340320592,
  "byte_70": 0.002157829839704069,
  "byte_c9": 0.00030826140567200987,
  "byte_1b": 0.0004623921085080148,
  "byte_b8": 0.0010789149198520344,
  "byte_d1": 0.00030826140567200987,
  "byte_fb": 0.00030826140567200987,
  "byte_18": 0.004623921085080148,
  "byte_66": 0.0006165228113440197,
  "byte_33": 0.0038532675709001232,
  "byte_5e": 0.0004623921085080148,
  "byte_fe": 0.002466091245376079,
  "byte_75": 0.0015413070283600493,
  "byte_55": 0.004469790382244143,
  "byte_31": 0.002466091245376079,
  "byte_3b": 0.002157829839704069,
  "byte_05": 0.004623921085080148,
  "byte_25": 0.00030826140567200987,
  "byte_3d": 0.006473489519112207,
  "byte_4f": 0.0004623921085080148,
  "byte_5c": 0.00030826140567200987,
  "byte_a9": 0.0007706535141800247,
  "byte_bb": 0.0012330456226880395,
  "byte_b1": 0.00030826140567200987,
  "byte_0b": 0.0013871763255240443,
  "byte_3f": 0.00030826140567200987,
  "byte_46": 0.0007706535141800247,
  "byte_ad": 0.0006165228113440197,
  "byte_79": 0.00015413070283600493,
  "byte_28": 0.00030826140567200987,
  "byte_8d": 0.00030826140567200987,
  "byte_4c": 0.00030826140567200987,
  "byte_d5": 0.0007706535141800247,
  "byte_2a": 0.0004623921085080148,
  "byte_e3": 0.0012330456226880395,
  "byte_2e": 0.0006165228113440197,
  "byte_96": 0.0004623921085080148,
  "byte_7e": 0.00030826140567200987,
  "byte_69": 0.0007706535141800247,
  "byte_2d": 0.0006165228113440197,
  "byte_f6": 0.0006165228113440197,
  "byte_cc": 0.00030826140567200987,
  "byte_88": 0.0012330456226880395,
  "byte_dd": 0.0012330456226880395,
  "byte_b7": 0.00030826140567200987,
  "byte_1c": 0.0004623921085080148,
  "byte_ca": 0.00030826140567200987,
  "byte_a3": 0.0006165228113440197,
  "byte_de": 0.00015413070283600493,
  "byte_72": 0.0007706535141800247,
  "byte_27": 0.00030826140567200987,
  "byte_b9": 0.00030826140567200987,
  "byte_ec": 0.00030826140567200987,
  "byte_e2": 0.00015413070283600493,
  "byte_99": 0.00030826140567200987,
  "byte_78": 0.0006165228113440197,
  "byte_26": 0.0004623921085080148,
  "byte_d0": 0.00015413070283600493,
  "byte_d7": 0.00030826140567200987,
  "byte_cb": 0.00015413070283600493,
  "byte_67": 0.00030826140567200987,
  "byte_b6": 0.00030826140567200987,
  "byte_b3": 0.0004623921085080148,
  "byte_ee": 0.00030826140567200987,
  "byte_eb": 0.00015413070283600493,
  "byte_2c": 0.00015413070283600493,
  "byte_c6": 0.00030826140567200987,
  "byte_7a": 0.0006165228113440197,
  "byte_3c": 0.00030826140567200987,
  "byte_c2": 0.0006165228113440197,
  "byte_b4": 0.00030826140567200987,
  "byte_22": 0.0004623921085080148,
  "byte_d6": 0.00015413070283600493,
  "byte_f0": 0.00015413070283600493,
  "byte_4b": 0.00015413070283600493,
  "byte_ea": 0.00030826140567200987,
  "byte_a2": 0.00015413070283600493,
  "byte_7b": 0.00015413070283600493,
  "byte_bf": 0.00015413070283600493,
  "byte_af": 0.00015413070283600493,
  "byte_58": 0.00015413070283600493,
  "byte_e7": 0.00015413070283600493,
  "byte_8a": 0.00015413070283600493,
  "byte_29": 0.00015413070283600493,
  "num_nodes": 9,
  "num_edges": 13,
  "avg_degree": 2.888888888888889,
  "density": 0.18055555555555555,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 55,
  "event_nums": 15,
  "creation_block": 6528475,
  "creation_timestamp": 1539731111,
  "life_time": 131998.0,
  "duration_seconds": 1867639.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 10,
  "num_buyers": 6,
  "num_sellers": 9,
  "num_creator_transfers": 15,
  "buy_amt": 4.5e+18,
  "sell_amt": 5e+18,
  "avg_value": 1.6964285714285715e+17,
  "txn_per_block": 0.0004166698232562368,
  "avg_gas_limit": 211357.4,
  "std_gas_limit": 363592.56933594326,
  "avg_gas_used": 94328.74545454545,
  "std_gas_used": 247351.74895426794,
  "avg_gas_price": 17000000000.0,
  "std_gas_price": 11862852638.689934,
  "deposited_num": 5,
  "bonuschanged_num": 3,
  "multisendcomplete_num": 2,
  "ethbonusset_num": 3,
  "withdrawn_num": 2,
  "atinversebrah_num": 1,
  "changedepositestatus_num": 3,
  "deposit_num": 14,
  "withdrawtokens_num": 5,
  "changebonus_num": 3,
  "multisendtoken_num": 4,
  "multisendtokencomplete_num": 2,
  "setethbonus_num": 3,
  "multisendeth_num": 4,
  "timeline_sequence": [
    [
      6528475,
      1539731111,
      0,
      16,
      0,
      1837115,
      15000000000,
      0,
      1,
      2330177,
      1837115,
      16592716
    ],
    [
      6529260,
      1539742272,
      3,
      34,
      0,
      63444,
      23000000000,
      0,
      1,
      1416513,
      42296,
      16591931
    ],
    [
      6529266,
      1539742406,
      4,
      53,
      0,
      404451,
      23000000000,
      0,
      1,
      1879834,
      254634,
      16591925
    ],
    [
      6529544,
      1539746091,
      11,
      17,
      0,
      68577,
      23000000000,
      1,
      0,
      775220,
      22638,
      16591647
    ],
    [
      6529579,
      1539746661,
      4,
      22,
      0,
      314451,
      23000000000,
      0,
      1,
      1007728,
      194634,
      16591612
    ],
    [
      6529731,
      1539748630,
      12,
      96,
      0,
      68577,
      23000000000,
      1,
      0,
      3603490,
      22638,
      16591460
    ],
    [
      6529742,
      1539748748,
      13,
      20,
      0,
      68577,
      23000000000,
      1,
      0,
      695583,
      68577,
      16591449
    ],
    [
      6529782,
      1539749375,
      46,
      9,
      0,
      314451,
      22000000000,
      0,
      1,
      561195,
      194634,
      16591409
    ],
    [
      6529967,
      1539751979,
      15,
      12,
      0,
      68577,
      29000000000,
      1,
      0,
      470152,
      68577,
      16591224
    ],
    [
      6529986,
      1539752361,
      16,
      56,
      0,
      68577,
      29000000000,
      1,
      0,
      1294510,
      68577,
      16591205
    ],
    [
      6530271,
      1539756573,
      2,
      56,
      0,
      68577,
      29000000000,
      1,
      0,
      1308658,
      68577,
      16590920
    ],
    [
      6530280,
      1539756699,
      3,
      19,
      0,
      68577,
      28000000000,
      1,
      0,
      842225,
      68577,
      16590911
    ],
    [
      6530283,
      1539756748,
      4,
      31,
      0,
      68000,
      24000000000,
      1,
      0,
      1039153,
      68000,
      16590908
    ],
    [
      6530303,
      1539756996,
      5,
      28,
      0,
      60000,
      30000000000,
      1,
      0,
      977691,
      60000,
      16590888
    ],
    [
      6530604,
      1539761251,
      1,
      7,
      0,
      68577,
      25000000000,
      1,
      0,
      291950,
      68577,
      16590587
    ],
    [
      6530659,
      1539761972,
      2,
      11,
      0,
      60000,
      29000000000,
      1,
      0,
      916496,
      60000,
      16590532
    ],
    [
      6530738,
      1539762985,
      3,
      93,
      0,
      250000,
      27000000000,
      0,
      1,
      3262815,
      179634,
      16590453
    ],
    [
      6530739,
      1539763012,
      6,
      51,
      0,
      40944,
      5000000000,
      0,
      1,
      4612933,
      27296,
      16590452
    ],
    [
      6531130,
      1539768941,
      8,
      49,
      0,
      314451,
      20000000000,
      0,
      1,
      1896206,
      179634,
      16590061
    ],
    [
      6538924,
      1539878231,
      9,
      5,
      0,
      42481,
      50000000000,
      0,
      1,
      369378,
      28321,
      16582267
    ],
    [
      6538931,
      1539878319,
      10,
      28,
      0,
      900000,
      23000000000,
      0,
      1,
      2060670,
      285835,
      16582260
    ],
    [
      6542472,
      1539928421,
      11,
      35,
      0,
      40848,
      23000000000,
      0,
      1,
      1156990,
      13616,
      16578719
    ],
    [
      6545816,
      1539975907,
      12,
      6,
      0,
      42577,
      23000000000,
      0,
      1,
      213009,
      28385,
      16575375
    ],
    [
      6545820,
      1539976010,
      14,
      39,
      0,
      42307,
      23000000000,
      0,
      1,
      1980976,
      28205,
      16575371
    ],
    [
      6545824,
      1539976067,
      15,
      18,
      0,
      900000,
      23000000000,
      0,
      1,
      1334559,
      180835,
      16575367
    ],
    [
      6551307,
      1540053392,
      17,
      3,
      0,
      42577,
      23000000000,
      0,
      1,
      122741,
      28385,
      16569884
    ],
    [
      6551310,
      1540053433,
      18,
      29,
      0,
      42307,
      23000000000,
      0,
      1,
      1004360,
      28205,
      16569881
    ],
    [
      6551322,
      1540053577,
      19,
      0,
      0,
      53386,
      23000000000,
      0,
      1,
      35591,
      35591,
      16569869
    ],
    [
      6551340,
      1540053759,
      20,
      4,
      0,
      900000,
      23000000000,
      0,
      1,
      503627,
      180835,
      16569851
    ],
    [
      6557230,
      1540137505,
      1068444,
      26,
      5000000000000000000,
      21040,
      30000000000,
      0,
      1,
      999418,
      21040,
      16563961
    ],
    [
      6557627,
      1540142862,
      21,
      11,
      0,
      84793,
      23000000000,
      0,
      1,
      450345,
      56529,
      16563564
    ],
    [
      6557641,
      1540143014,
      22,
      11,
      0,
      900000,
      23000000000,
      0,
      1,
      698352,
      104909,
      16563550
    ],
    [
      6567283,
      1540278989,
      23,
      75,
      0,
      62293,
      23000000000,
      0,
      1,
      1840434,
      26529,
      16553908
    ],
    [
      6567288,
      1540279044,
      24,
      14,
      0,
      900000,
      23000000000,
      0,
      1,
      539277,
      104909,
      16553903
    ],
    [
      6570390,
      1540323032,
      25,
      9,
      0,
      900000,
      23000000000,
      0,
      1,
      705456,
      28011,
      16550801
    ],
    [
      6570396,
      1540323151,
      26,
      14,
      0,
      62293,
      23000000000,
      0,
      1,
      525976,
      26529,
      16550795
    ],
    [
      6570398,
      1540323218,
      27,
      21,
      0,
      900000,
      23000000000,
      0,
      1,
      1502784,
      104909,
      16550793
    ],
    [
      6654314,
      1541511264,
      52,
      69,
      0,
      163666,
      14000000000,
      0,
      1,
      4038904,
      79111,
      16466877
    ],
    [
      6660466,
      1541598681,
      4,
      111,
      0,
      150000,
      15000000000,
      0,
      1,
      3656948,
      79111,
      16460725
    ],
    [
      6660473,
      1541598750,
      5,
      82,
      0,
      163666,
      8000000000,
      1,
      0,
      4592258,
      163666,
      16460718
    ],
    [
      6557641,
      1540143014,
      0,
      0,
      500000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6557641,
      1540143014,
      0,
      0,
      500000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6557641,
      1540143014,
      0,
      0,
      500000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6557641,
      1540143014,
      0,
      0,
      500000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6557641,
      1540143014,
      0,
      0,
      500000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6567288,
      1540279044,
      0,
      0,
      200000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6567288,
      1540279044,
      0,
      0,
      200000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6567288,
      1540279044,
      0,
      0,
      200000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6567288,
      1540279044,
      0,
      0,
      200000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6567288,
      1540279044,
      0,
      0,
      200000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6570398,
      1540323218,
      0,
      0,
      200000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6570398,
      1540323218,
      0,
      0,
      200000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6570398,
      1540323218,
      0,
      0,
      200000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6570398,
      1540323218,
      0,
      0,
      200000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6570398,
      1540323218,
      0,
      0,
      200000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  ],
  "sourcecode": "pragma solidity ^0.4.23;\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n  /**\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address who) public view returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public view returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract NervesStakeTestingPremium{\n\n    using SafeMath for uint;\n    ERC20 public token;\n\n    struct Contribution{\n        uint amount;\n        uint time;\n    }\n\n    struct User{\n        address user;\n        uint amountAvailableToWithdraw;\n        bool exists;\n        uint totalAmount;\n        uint totalBonusReceived;\n        uint withdrawCount;\n        Contribution[] contributions;       \n    }\n\n    mapping(address => User) public users;\n    \n    address[] usersList;\n    address owner;\n\n    uint public totalTokensDeposited;\n\n    uint public indexOfPayee;\n    uint public EthBonus;\n    uint public stakeContractBalance;\n    uint public bonusRate;\n\n    uint public indexOfEthSent;\n\n    bool public depositStatus;\n\n\n\n    modifier onlyOwner(){\n        require(msg.sender == owner);\n        _;\n    }\n\n    constructor(address _token, uint _bonusRate) public {\n        token = ERC20(_token);\n        owner = msg.sender;\n        bonusRate = _bonusRate;\n    }\n\n    event OwnerChanged(address newOwner);\n\n    function ChangeOwner(address _newOwner) public onlyOwner {\n        require(_newOwner != 0x0);\n        require(_newOwner != owner);\n        owner = _newOwner;\n\n        emit OwnerChanged(_newOwner);\n    }\n\n    event BonusChanged(uint newBonus);\n\n    function ChangeBonus(uint _newBonus) public onlyOwner {\n        require(_newBonus > 0);\n        bonusRate = _newBonus;\n\n        emit BonusChanged(_newBonus);\n    }\n\n    event Deposited(address from, uint amount);\n\n    function Deposit(uint _value) public returns(bool) {\n        require(depositStatus);\n        require(_value >= 100000 * (10 ** 18));\n        require(token.allowance(msg.sender, address(this)) >= _value);\n\n        User storage user = users[msg.sender];\n\n        if(!user.exists){\n            usersList.push(msg.sender);\n            user.user = msg.sender;\n            user.exists = true;\n        }\n        user.totalAmount = user.totalAmount.add(_value);\n        totalTokensDeposited = totalTokensDeposited.add(_value);\n        user.contributions.push(Contribution(_value, now));\n        token.transferFrom(msg.sender, address(this), _value);\n\n        stakeContractBalance = token.balanceOf(address(this));\n\n        emit Deposited(msg.sender, _value);\n\n        return true;\n\n    }\n\n    function ChangeDepositeStatus(bool _status) public onlyOwner{\n        depositStatus = _status;\n    }\n\n    function MultiSendToken() public onlyOwner {\n        uint i = indexOfPayee;\n        \n        while(i<usersList.length && msg.gas > 90000){\n            User storage currentUser = users[usersList[i]];\n            \n            uint amount = 0;\n            for(uint q = 0; q < currentUser.contributions.length; q++){\n                if(now > currentUser.contributions[q].time + 24 hours){\n                    amount = amount.add(currentUser.contributions[q].amount);\n                }\n            }\n            \n            if(amount >= 100000 * (10 ** 18)){  //TODO\n                uint bonus = amount.mul(bonusRate).div(10000);\n\n                require(token.balanceOf(address(this)) >= bonus);\n                currentUser.totalBonusReceived = currentUser.totalBonusReceived.add(bonus);\n               \n                require(token.transfer(currentUser.user, bonus));\n            }\n            i++;\n        }\n\n        indexOfPayee = i;\n        if( i == usersList.length){\n            indexOfPayee = 0;\n        }\n        stakeContractBalance = token.balanceOf(address(this));\n    }\n\n\n    event EthBonusSet(uint bonus);\n    function SetEthBonus(uint _EthBonus) public onlyOwner {\n        require(_EthBonus > 0);\n        EthBonus = _EthBonus;\n        stakeContractBalance = token.balanceOf(address(this));\n        indexOfEthSent = 0;\n\n        emit EthBonusSet(_EthBonus);\n    } \n\n    function MultiSendEth() public onlyOwner {\n        require(EthBonus > 0);\n        require(stakeContractBalance > 0);\n        uint p = indexOfEthSent;\n\n        while(p<usersList.length && msg.gas > 90000){\n            User memory currentUser = users[usersList[p]];\n            \n            uint amount = 0;\n            for(uint q = 0; q < currentUser.contributions.length; q++){\n                if(now > currentUser.contributions[q].time + 3 days){\n                    amount = amount.add(currentUser.contributions[q].amount);\n                }\n            }            \n            if(amount >= 100000 * (10 ** 18)){  //TODO\n                uint EthToSend = EthBonus.mul(amount).div(totalTokensDeposited);\n                \n                require(address(this).balance >= EthToSend);\n                currentUser.user.transfer(EthToSend);\n            }\n            p++;\n        }\n\n        indexOfEthSent = p;\n\n    }\n\n    event MultiSendComplete(bool status);\n    function MultiSendTokenComplete() public onlyOwner {\n        indexOfPayee = 0;\n        emit MultiSendComplete(true);\n    }\n\n    event Withdrawn(address withdrawnTo, uint amount);\n    function WithdrawTokens(uint _value) public {\n        require(_value > 0);\n\n        User storage user = users[msg.sender];\n\n        for(uint q = 0; q < user.contributions.length; q++){\n            if(now > user.contributions[q].time + 1 weeks){\n                user.amountAvailableToWithdraw = user.amountAvailableToWithdraw.add(user.contributions[q].amount);\n            }\n        }\n\n        require(_value <= user.amountAvailableToWithdraw);\n        require(token.balanceOf(address(this)) >= _value);\n\n        user.amountAvailableToWithdraw = user.amountAvailableToWithdraw.sub(_value);\n        user.totalAmount = user.totalAmount.sub(_value);\n\n        user.withdrawCount = user.withdrawCount.add(1);\n\n        totalTokensDeposited = totalTokensDeposited.sub(_value);\n        token.transfer(msg.sender, _value);\n\n        stakeContractBalance = token.balanceOf(address(this));\n        emit Withdrawn(msg.sender, _value);\n\n\n    }\n\n\n    function() public payable{\n\n    }\n\n    function WithdrawETH(uint amount) public onlyOwner{\n        require(amount > 0);\n        require(address(this).balance >= amount * 1 ether);\n\n        msg.sender.transfer(amount * 1 ether);\n    }\n\n    function CheckAllowance() public view returns(uint){\n        uint allowance = token.allowance(msg.sender, address(this));\n        return allowance;\n    }\n\n    function GetBonusReceived() public view returns(uint){\n        User memory user = users[msg.sender];\n        return user.totalBonusReceived;\n    }\n    \n    function GetContributionsCount() public view returns(uint){\n        User memory user = users[msg.sender];\n        return user.contributions.length;\n    }\n\n    function GetWithdrawCount() public view returns(uint){\n        User memory user = users[msg.sender];\n        return user.withdrawCount;\n    }\n\n    function GetLockedTokens() public view returns(uint){\n        User memory user = users[msg.sender];\n\n        uint i;\n        uint lockedTokens = 0;\n        for(i = 0; i < user.contributions.length; i++){\n            if(now < user.contributions[i].time + 1 weeks){\n                lockedTokens = lockedTokens.add(user.contributions[i].amount);\n            }\n        }\n\n        return lockedTokens;\n\n    }\n\n    function ReturnTokens(address destination, address account, uint amount) public onlyOwner{\n        ERC20(destination).transfer(account,amount);\n    }\n   \n}"
}