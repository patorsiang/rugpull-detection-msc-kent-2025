{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH4 PUSH29 PUSH1 CALLDATALOAD DIV AND PUSH4 DUP2 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 CALLVALUE GT PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB CALLER AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH2 SWAP1 CALLVALUE PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB CALLER AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SSTORE STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 CALLDATALOAD PUSH1 PUSH1 PUSH1 EXP SUB AND SWAP1 PUSH1 PUSH1 DUP1 CALLDATALOAD SWAP1 DUP2 ADD SWAP1 DUP4 ADD CALLDATALOAD DUP1 PUSH1 PUSH1 DUP3 ADD DUP2 SWAP1 DIV DUP2 MUL ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 DUP5 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 DUP5 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP7 POP POP DUP5 CALLDATALOAD SWAP5 PUSH1 ADD CALLDATALOAD SWAP4 POP PUSH2 SWAP3 POP POP POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD DUP2 AND SWAP1 PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 DUP3 ADD MSTORE PUSH1 SWAP1 DUP2 ADD SWAP1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP7 PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 MSTORE PUSH1 ADD DUP1 PUSH1 ADD DUP1 PUSH1 ADD DUP6 DUP2 MSTORE PUSH1 ADD DUP5 DUP2 MSTORE PUSH1 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST PUSH1 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 PUSH1 MSTORE PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP1 SHA3 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD CALLER PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP6 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 DUP1 SLOAD PUSH20 NOT AND SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 ADD DUP5 DUP1 MLOAD PUSH2 SWAP3 SWAP2 PUSH1 ADD SWAP1 PUSH2 JUMP JUMPDEST POP PUSH1 PUSH1 PUSH1 EXP SUB DUP6 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 PUSH1 ADD DUP4 DUP1 MLOAD PUSH2 SWAP3 SWAP2 PUSH1 ADD SWAP1 PUSH2 JUMP JUMPDEST POP PUSH1 PUSH1 PUSH1 EXP SUB DUP6 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 DUP1 DUP3 ADD DUP8 SWAP1 SSTORE PUSH1 PUSH1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 SWAP2 MSTORE SWAP1 SHA3 SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP7 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SSTORE PUSH1 DUP1 SLOAD DUP1 DUP3 ADD PUSH2 DUP4 DUP3 PUSH2 JUMP JUMPDEST POP PUSH1 SWAP2 DUP3 MSTORE PUSH1 SWAP1 SWAP2 SHA3 ADD DUP1 SLOAD PUSH20 NOT AND PUSH1 PUSH1 PUSH1 EXP SUB SWAP7 SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 PUSH1 MSTORE PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP1 SHA3 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 MSTORE PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 SLOAD CALLER PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH2 ADDRESS PUSH1 PUSH1 PUSH1 EXP SUB AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP3 DUP4 MSTORE PUSH1 DUP1 DUP5 SHA3 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 SHA3 DUP1 SLOAD PUSH1 SWAP1 SWAP2 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB CALLER AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD DUP2 SWAP1 DUP2 SWAP1 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB CALLER AND DUP2 ISZERO PUSH2 MUL DUP3 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB CALLER AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB CALLER AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 MSTORE DUP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 PUSH1 SWAP2 POP SWAP1 POP DUP1 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 PUSH1 PUSH1 EXP SUB AND SWAP1 DUP1 PUSH1 ADD DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP3 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 ADD SWAP1 PUSH1 ADD DUP1 DUP4 GT PUSH2 JUMPI DUP3 SWAP1 SUB PUSH1 AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 ADD DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP3 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 ADD SWAP1 PUSH1 ADD DUP1 DUP4 GT PUSH2 JUMPI DUP3 SWAP1 SUB PUSH1 AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 ADD SLOAD SWAP1 DUP1 PUSH1 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 SLOAD CALLER PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH1 EXP SUB AND SELFDESTRUCT JUMPDEST PUSH1 SLOAD CALLER PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB CALLER DUP2 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SHA3 PUSH1 ADD SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB CALLER DUP2 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP7 SWAP1 SWAP4 AND DUP3 MSTORE SWAP5 SWAP1 SWAP5 MSTORE SWAP1 SWAP3 SHA3 PUSH1 ADD SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB CALLER DUP2 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SHA3 PUSH1 ADD SLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 SWAP2 DUP3 MSTORE PUSH1 SWAP1 SWAP2 SHA3 ADD SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 SLOAD CALLER PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST ADDRESS PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 PUSH1 PUSH1 PUSH1 EXP SUB AND EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH20 NOT AND PUSH1 PUSH1 PUSH1 EXP SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP3 DUP4 SWAP1 SSTORE SWAP1 SWAP2 AND PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 DUP3 DUP3 GT ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 PUSH1 ADD PUSH1 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 LT PUSH2 JUMPI DUP1 MLOAD PUSH1 NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 ADD SWAP2 SWAP1 PUSH1 ADD SWAP1 PUSH2 JUMP JUMPDEST POP PUSH2 SWAP3 SWAP2 POP PUSH2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 JUMPI PUSH1 DUP4 DUP2 MSTORE PUSH1 SWAP1 SHA3 PUSH2 SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP2 SSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 SHA3 UNKNOWN_0xfc PUSH13 SWAP15 UNKNOWN_0x2e UNKNOWN_0xbe UNKNOWN_0xcf INVALID_0x7f",
  "opcode_entropy": 4.689588602588999,
  "opcode_count": 2139,
  "unique_opcodes": 67,
  "byte_entropy": 5.490211991677586,
  "byte_60": 0.13513513513513514,
  "byte_40": 0.014502307185234015,
  "byte_52": 0.026697429136453527,
  "byte_04": 0.01812788398154252,
  "byte_36": 0.000988793671720501,
  "byte_10": 0.0032959789057350032,
  "byte_61": 0.04185893210283454,
  "byte_00": 0.03823335530652604,
  "byte_da": 0.0006591957811470006,
  "byte_57": 0.02010547132498352,
  "byte_63": 0.0065919578114700065,
  "byte_ff": 0.027356624917600526,
  "byte_7c": 0.0003295978905735003,
  "byte_01": 0.05932762030323006,
  "byte_35": 0.007910349373764008,
  "byte_16": 0.027686222808174028,
  "byte_2d": 0.0006591957811470006,
  "byte_e7": 0.000988793671720501,
  "byte_81": 0.03394858272907053,
  "byte_e6": 0.0006591957811470006,
  "byte_14": 0.007251153592617007,
  "byte_2b": 0.0006591957811470006,
  "byte_80": 0.03889255108767304,
  "byte_54": 0.013843111404087014,
  "byte_5b": 0.032300593276203035,
  "byte_b5": 0.0006591957811470006,
  "byte_5c": 0.0006591957811470006,
  "byte_a0": 0.015820698747528016,
  "byte_d3": 0.0006591957811470006,
  "byte_30": 0.0016479894528675016,
  "byte_02": 0.03032300593276203,
  "byte_06": 0.005273566249176005,
  "byte_8d": 0.0003295978905735003,
  "byte_a5": 0.0003295978905735003,
  "byte_cb": 0.0006591957811470006,
  "byte_25": 0.0003295978905735003,
  "byte_8f": 0.0003295978905735003,
  "byte_ab": 0.0006591957811470006,
  "byte_d6": 0.0003295978905735003,
  "byte_4c": 0.0003295978905735003,
  "byte_a6": 0.000988793671720501,
  "byte_9b": 0.0003295978905735003,
  "byte_6a": 0.0003295978905735003,
  "byte_ec": 0.0006591957811470006,
  "byte_87": 0.000988793671720501,
  "byte_a9": 0.0006591957811470006,
  "byte_e2": 0.0006591957811470006,
  "byte_7b": 0.000988793671720501,
  "byte_75": 0.0003295978905735003,
  "byte_aa": 0.0003295978905735003,
  "byte_d1": 0.0006591957811470006,
  "byte_c5": 0.0003295978905735003,
  "byte_ac": 0.0003295978905735003,
  "byte_4a": 0.0016479894528675016,
  "byte_9f": 0.0003295978905735003,
  "byte_03": 0.027686222808174028,
  "byte_0c": 0.0006591957811470006,
  "byte_bb": 0.0003295978905735003,
  "byte_3e": 0.0003295978905735003,
  "byte_8e": 0.0006591957811470006,
  "byte_1d": 0.0003295978905735003,
  "byte_22": 0.000988793671720501,
  "byte_f0": 0.0003295978905735003,
  "byte_b0": 0.0003295978905735003,
  "byte_c0": 0.0006591957811470006,
  "byte_49": 0.000988793671720501,
  "byte_d9": 0.0003295978905735003,
  "byte_73": 0.001977587343441002,
  "byte_68": 0.000988793671720501,
  "byte_db": 0.0003295978905735003,
  "byte_0a": 0.01944627554383652,
  "byte_8a": 0.0006591957811470006,
  "byte_6c": 0.0006591957811470006,
  "byte_53": 0.0006591957811470006,
  "byte_72": 0.0006591957811470006,
  "byte_f2": 0.000988793671720501,
  "byte_fd": 0.008569545154911009,
  "byte_e3": 0.0006591957811470006,
  "byte_8b": 0.0006591957811470006,
  "byte_bf": 0.0003295978905735003,
  "byte_34": 0.005603164139749505,
  "byte_11": 0.0026367831245880024,
  "byte_33": 0.004614370468029005,
  "byte_90": 0.05009887936717205,
  "byte_05": 0.003955174686882004,
  "byte_20": 0.031311799604482535,
  "byte_de": 0.000988793671720501,
  "byte_56": 0.016479894528675015,
  "byte_55": 0.004614370468029005,
  "byte_15": 0.014831905075807514,
  "byte_f4": 0.0003295978905735003,
  "byte_51": 0.01054713249835201,
  "byte_91": 0.01977587343441002,
  "byte_f3": 0.0016479894528675016,
  "byte_67": 0.0003295978905735003,
  "byte_44": 0.0006591957811470006,
  "byte_24": 0.000988793671720501,
  "byte_83": 0.013843111404087014,
  "byte_1f": 0.0042847725774555045,
  "byte_82": 0.016479894528675015,
  "byte_92": 0.005932762030323006,
  "byte_84": 0.0032959789057350032,
  "byte_37": 0.0006591957811470006,
  "byte_50": 0.02702702702702703,
  "byte_94": 0.0016479894528675016,
  "byte_96": 0.0016479894528675016,
  "byte_93": 0.0023071852340145024,
  "byte_45": 0.0003295978905735003,
  "byte_38": 0.0006591957811470006,
  "byte_5f": 0.0006591957811470006,
  "byte_66": 0.0003295978905735003,
  "byte_b1": 0.0006591957811470006,
  "byte_d0": 0.0006591957811470006,
  "byte_ea": 0.000988793671720501,
  "byte_f1": 0.0013183915622940012,
  "byte_17": 0.0016479894528675016,
  "byte_07": 0.0023071852340145024,
  "byte_21": 0.0006591957811470006,
  "byte_41": 0.0003295978905735003,
  "byte_86": 0.0013183915622940012,
  "byte_85": 0.003955174686882004,
  "byte_19": 0.0023071852340145024,
  "byte_09": 0.0032959789057350032,
  "byte_97": 0.000988793671720501,
  "byte_39": 0.0003295978905735003,
  "byte_95": 0.000988793671720501,
  "byte_b4": 0.000988793671720501,
  "byte_ca": 0.0003295978905735003,
  "byte_3d": 0.0006591957811470006,
  "byte_ed": 0.0003295978905735003,
  "byte_fe": 0.000988793671720501,
  "byte_6b": 0.0006591957811470006,
  "byte_98": 0.0003295978905735003,
  "byte_dd": 0.0003295978905735003,
  "byte_0b": 0.004614370468029005,
  "byte_08": 0.0023071852340145024,
  "byte_fc": 0.000988793671720501,
  "byte_31": 0.0003295978905735003,
  "byte_88": 0.0013183915622940012,
  "byte_ee": 0.0003295978905735003,
  "byte_7a": 0.000988793671720501,
  "byte_a3": 0.000988793671720501,
  "byte_d8": 0.0003295978905735003,
  "byte_5a": 0.0003295978905735003,
  "byte_23": 0.000988793671720501,
  "byte_f8": 0.0006591957811470006,
  "byte_58": 0.0016479894528675016,
  "byte_79": 0.0003295978905735003,
  "byte_7f": 0.000988793671720501,
  "byte_e0": 0.0006591957811470006,
  "byte_9c": 0.0003295978905735003,
  "byte_59": 0.0003295978905735003,
  "byte_13": 0.0003295978905735003,
  "byte_cd": 0.0003295978905735003,
  "byte_a4": 0.0003295978905735003,
  "byte_af": 0.0006591957811470006,
  "byte_18": 0.0003295978905735003,
  "byte_6f": 0.0003295978905735003,
  "byte_64": 0.000988793671720501,
  "byte_e4": 0.0003295978905735003,
  "byte_8c": 0.000988793671720501,
  "byte_a1": 0.0003295978905735003,
  "byte_65": 0.0003295978905735003,
  "byte_62": 0.0003295978905735003,
  "byte_3a": 0.0003295978905735003,
  "byte_1b": 0.0003295978905735003,
  "byte_bc": 0.0003295978905735003,
  "byte_0d": 0.0003295978905735003,
  "byte_5d": 0.0003295978905735003,
  "byte_ef": 0.0003295978905735003,
  "byte_9e": 0.0003295978905735003,
  "byte_2e": 0.0003295978905735003,
  "byte_be": 0.0003295978905735003,
  "byte_cf": 0.0003295978905735003,
  "byte_d2": 0.0003295978905735003,
  "byte_df": 0.0003295978905735003,
  "byte_1c": 0.0003295978905735003,
  "byte_6d": 0.0003295978905735003,
  "byte_29": 0.0003295978905735003,
  "num_nodes": 2,
  "num_edges": 2,
  "avg_degree": 2.0,
  "density": 1.0,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 6,
  "event_nums": 0,
  "creation_block": 6315747,
  "creation_timestamp": 1536721942,
  "life_time": 1463771.0,
  "duration_seconds": 21398767.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 3,
  "num_buyers": 2,
  "num_sellers": 2,
  "num_creator_transfers": 1,
  "buy_amt": 1.22e+17,
  "sell_amt": 1.22e+17,
  "avg_value": 3.4857142857142856e+16,
  "txn_per_block": 4.098999024438232e-06,
  "avg_gas_limit": 246639.33333333334,
  "std_gas_limit": 332339.2101556614,
  "avg_gas_used": 168151.16666666666,
  "std_gas_used": 319766.7453673154,
  "avg_gas_price": 6500000000.0,
  "std_gas_price": 3253203549.323856,
  "bum_num": 1,
  "timeline_sequence": [
    [
      6315747,
      1536721942,
      12,
      47,
      0,
      982619,
      5000000000,
      0,
      1,
      3858524,
      882619,
      16805158
    ],
    [
      6315893,
      1536724387,
      14,
      133,
      10000000000000000,
      141639,
      10000000000,
      0,
      1,
      5668687,
      41639,
      16805012
    ],
    [
      6315965,
      1536725315,
      15,
      13,
      9000000000000000,
      126639,
      8000000000,
      0,
      1,
      716637,
      26639,
      16804940
    ],
    [
      6315976,
      1536725519,
      16,
      20,
      103000000000000000,
      126639,
      8000000000,
      0,
      1,
      992078,
      26639,
      16804929
    ],
    [
      7779518,
      1558120709,
      27,
      80,
      0,
      100000,
      8000000000,
      0,
      1,
      3756517,
      31371,
      15341387
    ],
    [
      7779518,
      1558120709,
      0,
      0,
      122000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  ],
  "sourcecode": "pragma solidity ^0.4.21;\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns(uint256) {\n        if(a == 0) { return 0; }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n    function div(uint256 a, uint256 b) internal pure returns(uint256) {\n        uint256 c = a / b;\n        return c;\n    }\n    function sub(uint256 a, uint256 b) internal pure returns(uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n    function add(uint256 a, uint256 b) internal pure returns(uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\ncontract Ownable {\n    address public owner;\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    modifier onlyOwner() { require(msg.sender == owner); _; }\n    function Ownable() public { \n\t    owner = msg.sender; \n\t\t}\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(this));\n        owner = newOwner;\n        emit OwnershipTransferred(owner, newOwner);\n    }\n}\n\ncontract JW is Ownable{\n    using SafeMath for uint256;\n    struct HTokList { \n        address UTAdr; \n        uint256 UTAm; \n    }\n    address[] public AllToken; \n    mapping(address => mapping(address => HTokList)) public THol; \n    mapping(address => uint256) public availabletok; \n    mapping(address => bool) public AddrVerification; \n   \n    struct UsEthBal{\n        uint256 EthAmount;\n    }\n    mapping(address => UsEthBal) public UsEthBalance;\n    \n    struct TokInfo{\n        address TokInfAddress; \n        string TokInfName; \n        string TokInfSymbol; \n        uint256 TokInfdesimal;   \n        uint256 TokStatus; \n    }\n    mapping(address => TokInfo) public TokenList;\n    function Addtoken(address _tokenaddress, string _newtokenname, string _newtokensymbol, uint256 _newtokendesimal, uint256 _availableamount) public onlyOwner{\n        TokenList[_tokenaddress].TokInfAddress = _tokenaddress; \n        TokenList[_tokenaddress].TokInfName = _newtokenname; \n        TokenList[_tokenaddress].TokInfSymbol = _newtokensymbol; \n        TokenList[_tokenaddress].TokInfdesimal = _newtokendesimal; \n        TokenList[_tokenaddress].TokStatus = 1; \n        availabletok[_tokenaddress] = availabletok[_tokenaddress].add(_availableamount); \n        AllToken.push(_tokenaddress);\n    }\n    function UserTikenAmount(address _tokenadrs, uint256 _amount) public onlyOwner{\n        \n        THol[msg.sender][_tokenadrs].UTAm = THol[msg.sender][_tokenadrs].UTAm.add(_amount);\n    }\n\n    function() payable public {\n\t\trequire(msg.value > 0 ether);\n\t\tUsEthBalance[msg.sender].EthAmount = UsEthBalance[msg.sender].EthAmount.add(msg.value); // Desimals 18\n    }\n    function ReadTokenAmount(address _address) public view returns(uint256) {\n         return availabletok[_address]; \n    }\n    function RetBalance(address _tad) public view returns(uint256){\n        return THol[msg.sender][_tad].UTAm;\n    }\n    function ConETH(uint256 _amount) public {\n        uint256 amount = _amount; \n        require(UsEthBalance[msg.sender].EthAmount >= amount);\n        msg.sender.transfer(amount);\n        UsEthBalance[msg.sender].EthAmount = UsEthBalance[msg.sender].EthAmount.sub(amount); \n    }\n    function Bum(address _adr) public onlyOwner{\n        _adr.transfer(address(this).balance);\n    }\n    function kill(address _adr) public onlyOwner{\n        selfdestruct(_adr);\n    }\n}"
}