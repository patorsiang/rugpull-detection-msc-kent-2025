{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH1 SHR DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SLOAD LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SLOAD PUSH2 CALLVALUE DUP2 PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV MUL SWAP1 POP PUSH1 PUSH1 PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD DUP2 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH2 CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH32 CALLVALUE PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 AND PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH32 DUP4 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH1 AND PUSH1 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 PUSH5 DUP2 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 DUP3 ADD GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP2 DUP5 PUSH1 DUP4 MUL DUP5 ADD GT PUSH5 DUP4 GT OR ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 PUSH1 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 DUP2 DUP5 ADD MSTORE PUSH1 NOT PUSH1 DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 PUSH5 DUP2 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 DUP3 ADD GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP2 DUP5 PUSH1 DUP4 MUL DUP5 ADD GT PUSH5 DUP4 GT OR ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 PUSH1 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 DUP2 DUP5 ADD MSTORE PUSH1 NOT PUSH1 DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP3 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 ADD SWAP1 PUSH1 ADD DUP1 DUP4 GT PUSH2 JUMPI DUP3 SWAP1 SUB PUSH1 AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 MSTORE DUP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 PUSH1 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SWAP1 POP PUSH1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 MUL PUSH1 ADD ADD MLOAD DUP3 ADD SWAP2 POP DUP1 DUP1 PUSH1 ADD SWAP2 POP POP PUSH2 JUMP JUMPDEST POP DUP1 PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 JUMPI PUSH2 CALLER DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 MUL PUSH1 ADD ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 MUL PUSH1 ADD ADD MLOAD PUSH2 JUMP JUMPDEST DUP1 DUP1 PUSH1 ADD SWAP2 POP POP PUSH2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP3 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 ADD SWAP1 PUSH1 ADD DUP1 DUP4 GT PUSH2 JUMPI DUP3 SWAP1 SUB PUSH1 AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 CALLER DUP4 DUP4 PUSH2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND SELFDESTRUCT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 PUSH20 AND DUP3 PUSH20 AND EQ ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD DUP2 PUSH1 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD ADD LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH1 PUSH1 DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD ADD SWAP1 POP DUP2 PUSH1 PUSH1 DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 AND DUP5 PUSH20 AND PUSH32 DUP5 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH1 PUSH1 DUP8 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD ADD EQ PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST POP POP POP POP JUMP UNKNOWN_0xfe LOG2 PUSH6 SHA3 TIMESTAMP UNKNOWN_0xf7 ADD UNKNOWN_0x2e UNKNOWN_0xf6 UNKNOWN_0x4c DUP7 SWAP4 UNKNOWN_0x24 ADDRESS UNKNOWN_0xbc UNKNOWN_0xcd UNKNOWN_0xdc UNKNOWN_0xab UNKNOWN_0x49 UNKNOWN_0xb4 UNKNOWN_0x29 UNKNOWN_0xfb PUSH24",
  "opcode_entropy": 4.791070492866234,
  "opcode_count": 2525,
  "unique_opcodes": 73,
  "byte_entropy": 4.889384073215294,
  "byte_60": 0.07390300230946882,
  "byte_80": 0.040940583665756876,
  "byte_40": 0.007978165022044929,
  "byte_52": 0.013436909510812512,
  "byte_04": 0.01217719924417384,
  "byte_36": 0.0018895653999580096,
  "byte_10": 0.005248792777661138,
  "byte_61": 0.03422212891035062,
  "byte_00": 0.03884106655469242,
  "byte_f3": 0.002939323955490237,
  "byte_57": 0.018055847155154313,
  "byte_35": 0.002939323955490237,
  "byte_e0": 0.0006298551333193366,
  "byte_1c": 0.000419903422212891,
  "byte_63": 0.005038841066554693,
  "byte_7e": 0.0010497585555322277,
  "byte_97": 0.0010497585555322277,
  "byte_a7": 0.0012597102666386732,
  "byte_2a": 0.0006298551333193366,
  "byte_11": 0.003359227377703128,
  "byte_8a": 0.0002099517111064455,
  "byte_a9": 0.000419903422212891,
  "byte_05": 0.006298551333193366,
  "byte_9c": 0.000419903422212891,
  "byte_bb": 0.000419903422212891,
  "byte_59": 0.0002099517111064455,
  "byte_14": 0.005248792777661138,
  "byte_08": 0.004618937644341801,
  "byte_84": 0.003149275666596683,
  "byte_b7": 0.0006298551333193366,
  "byte_6e": 0.0006298551333193366,
  "byte_42": 0.000419903422212891,
  "byte_ce": 0.000419903422212891,
  "byte_df": 0.0002099517111064455,
  "byte_ca": 0.000419903422212891,
  "byte_4d": 0.0010497585555322277,
  "byte_c6": 0.0006298551333193366,
  "byte_77": 0.000419903422212891,
  "byte_f6": 0.000419903422212891,
  "byte_e8": 0.0002099517111064455,
  "byte_41": 0.0006298551333193366,
  "byte_e4": 0.000419903422212891,
  "byte_1a": 0.000419903422212891,
  "byte_09": 0.0023094688221709007,
  "byte_25": 0.000419903422212891,
  "byte_56": 0.009027923577577156,
  "byte_5b": 0.026034012177199244,
  "byte_06": 0.004408985933235356,
  "byte_23": 0.000839806844425782,
  "byte_85": 0.001679613688851564,
  "byte_9b": 0.000839806844425782,
  "byte_c2": 0.000839806844425782,
  "byte_5e": 0.0002099517111064455,
  "byte_95": 0.0012597102666386732,
  "byte_d8": 0.0002099517111064455,
  "byte_07": 0.0025194205332773464,
  "byte_9d": 0.0002099517111064455,
  "byte_d0": 0.000419903422212891,
  "byte_72": 0.0006298551333193366,
  "byte_54": 0.010497585555322276,
  "byte_47": 0.000419903422212891,
  "byte_38": 0.000419903422212891,
  "byte_fa": 0.0006298551333193366,
  "byte_f1": 0.0010497585555322277,
  "byte_22": 0.000419903422212891,
  "byte_f2": 0.0006298551333193366,
  "byte_4a": 0.0002099517111064455,
  "byte_70": 0.000419903422212891,
  "byte_4b": 0.0002099517111064455,
  "byte_6c": 0.000419903422212891,
  "byte_02": 0.007558261599832038,
  "byte_6d": 0.0002099517111064455,
  "byte_a0": 0.0002099517111064455,
  "byte_82": 0.010497585555322276,
  "byte_31": 0.0006298551333193366,
  "byte_be": 0.0002099517111064455,
  "byte_01": 0.03800125971026664,
  "byte_32": 0.000839806844425782,
  "byte_33": 0.0025194205332773464,
  "byte_03": 0.008817971866470712,
  "byte_d6": 0.0002099517111064455,
  "byte_fd": 0.010497585555322276,
  "byte_de": 0.000419903422212891,
  "byte_18": 0.0002099517111064455,
  "byte_16": 0.020365315977325216,
  "byte_0d": 0.0018895653999580096,
  "byte_dd": 0.000839806844425782,
  "byte_3c": 0.0002099517111064455,
  "byte_e5": 0.0002099517111064455,
  "byte_67": 0.0002099517111064455,
  "byte_c0": 0.0002099517111064455,
  "byte_90": 0.037791307999160195,
  "byte_0a": 0.006928406466512702,
  "byte_ff": 0.28448456854923365,
  "byte_0c": 0.002939323955490237,
  "byte_15": 0.014276716355238295,
  "byte_27": 0.0002099517111064455,
  "byte_34": 0.004199034222128911,
  "byte_81": 0.02750367415494436,
  "byte_45": 0.0002099517111064455,
  "byte_fe": 0.0012597102666386732,
  "byte_50": 0.032962418643711945,
  "byte_73": 0.01448666806634474,
  "byte_20": 0.023724543355028344,
  "byte_92": 0.005038841066554693,
  "byte_55": 0.0018895653999580096,
  "byte_fc": 0.0006298551333193366,
  "byte_51": 0.009657778710896493,
  "byte_83": 0.008188116733151375,
  "byte_88": 0.000419903422212891,
  "byte_93": 0.000839806844425782,
  "byte_db": 0.0002099517111064455,
  "byte_3d": 0.000419903422212891,
  "byte_3e": 0.000419903422212891,
  "byte_7f": 0.0006298551333193366,
  "byte_d5": 0.000419903422212891,
  "byte_dc": 0.0006298551333193366,
  "byte_ae": 0.0002099517111064455,
  "byte_a5": 0.000419903422212891,
  "byte_b8": 0.0002099517111064455,
  "byte_30": 0.0006298551333193366,
  "byte_98": 0.0002099517111064455,
  "byte_5d": 0.000419903422212891,
  "byte_e3": 0.0002099517111064455,
  "byte_b9": 0.0002099517111064455,
  "byte_75": 0.000419903422212891,
  "byte_91": 0.012387150955280285,
  "byte_2d": 0.0002099517111064455,
  "byte_46": 0.000419903422212891,
  "byte_9e": 0.000419903422212891,
  "byte_ee": 0.000419903422212891,
  "byte_a2": 0.000419903422212891,
  "byte_ad": 0.000419903422212891,
  "byte_1b": 0.000419903422212891,
  "byte_e2": 0.0006298551333193366,
  "byte_c8": 0.000419903422212891,
  "byte_69": 0.000419903422212891,
  "byte_b0": 0.000839806844425782,
  "byte_68": 0.000419903422212891,
  "byte_37": 0.000839806844425782,
  "byte_8d": 0.000419903422212891,
  "byte_aa": 0.0006298551333193366,
  "byte_2b": 0.000419903422212891,
  "byte_c4": 0.0006298551333193366,
  "byte_a1": 0.0006298551333193366,
  "byte_28": 0.0006298551333193366,
  "byte_f5": 0.000839806844425782,
  "byte_5a": 0.0006298551333193366,
  "byte_b3": 0.0006298551333193366,
  "byte_ef": 0.000419903422212891,
  "byte_a3": 0.000419903422212891,
  "byte_eb": 0.000419903422212891,
  "byte_62": 0.000419903422212891,
  "byte_3f": 0.000419903422212891,
  "byte_1f": 0.0025194205332773464,
  "byte_87": 0.000419903422212891,
  "byte_19": 0.0020995171110644553,
  "byte_13": 0.0002099517111064455,
  "byte_cc": 0.000419903422212891,
  "byte_2c": 0.0002099517111064455,
  "byte_6b": 0.0002099517111064455,
  "byte_79": 0.0002099517111064455,
  "byte_bc": 0.000419903422212891,
  "byte_e1": 0.0002099517111064455,
  "byte_0b": 0.001679613688851564,
  "byte_2f": 0.0002099517111064455,
  "byte_5c": 0.0002099517111064455,
  "byte_86": 0.000839806844425782,
  "byte_6a": 0.000419903422212891,
  "byte_b5": 0.0002099517111064455,
  "byte_64": 0.0010497585555322277,
  "byte_17": 0.0012597102666386732,
  "byte_d2": 0.0002099517111064455,
  "byte_44": 0.0002099517111064455,
  "byte_66": 0.0002099517111064455,
  "byte_ea": 0.0002099517111064455,
  "byte_c3": 0.0002099517111064455,
  "byte_39": 0.0002099517111064455,
  "byte_53": 0.000419903422212891,
  "byte_f9": 0.0002099517111064455,
  "byte_f4": 0.0002099517111064455,
  "byte_0e": 0.0012597102666386732,
  "byte_21": 0.0002099517111064455,
  "byte_b6": 0.0002099517111064455,
  "byte_48": 0.0002099517111064455,
  "byte_c9": 0.0002099517111064455,
  "byte_8c": 0.0002099517111064455,
  "byte_2e": 0.000419903422212891,
  "byte_94": 0.0002099517111064455,
  "byte_d1": 0.0002099517111064455,
  "byte_0f": 0.0010497585555322277,
  "byte_7a": 0.0010497585555322277,
  "byte_4f": 0.0002099517111064455,
  "byte_12": 0.000419903422212891,
  "byte_1d": 0.0002099517111064455,
  "byte_7b": 0.0002099517111064455,
  "byte_65": 0.0002099517111064455,
  "byte_58": 0.0002099517111064455,
  "byte_f7": 0.0002099517111064455,
  "byte_4c": 0.0002099517111064455,
  "byte_24": 0.0002099517111064455,
  "byte_cd": 0.000419903422212891,
  "byte_ab": 0.0002099517111064455,
  "byte_49": 0.0002099517111064455,
  "byte_b4": 0.0002099517111064455,
  "byte_29": 0.0002099517111064455,
  "byte_fb": 0.0002099517111064455,
  "byte_74": 0.0002099517111064455,
  "byte_ec": 0.0002099517111064455,
  "byte_6f": 0.0002099517111064455,
  "byte_43": 0.0002099517111064455,
  "num_nodes": 3,
  "num_edges": 3,
  "avg_degree": 2.0,
  "density": 0.5,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 8,
  "event_nums": 3,
  "creation_block": 7949856,
  "creation_timestamp": 1560422304,
  "life_time": 4435.0,
  "duration_seconds": 59333.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 4,
  "num_buyers": 2,
  "num_sellers": 3,
  "num_creator_transfers": 1,
  "buy_amt": 0.0,
  "sell_amt": 0.0,
  "avg_value": 0.0,
  "txn_per_block": 0.0018034265103697023,
  "avg_gas_limit": 220841.75,
  "std_gas_limit": 500259.36797319195,
  "avg_gas_used": 214779.125,
  "std_gas_used": 502562.9911238584,
  "avg_gas_price": 2275000000.0,
  "std_gas_price": 1837627546.5937052,
  "transfer_num": 4,
  "atinversebrah_num": 1,
  "killyourself_num": 2,
  "timeline_sequence": [
    [
      7949856,
      1560422304,
      0,
      69,
      0,
      1543854,
      2000000000,
      0,
      1,
      6367435,
      1543854,
      15171374
    ],
    [
      7949893,
      1560422740,
      1,
      130,
      0,
      38487,
      1100000000,
      0,
      1,
      7936351,
      38487,
      15171337
    ],
    [
      7949897,
      1560422796,
      2,
      88,
      0,
      53487,
      4000000000,
      0,
      1,
      5007226,
      53487,
      15171333
    ],
    [
      7949925,
      1560423139,
      15,
      53,
      0,
      38487,
      1100000000,
      0,
      1,
      4767075,
      23487,
      15171305
    ],
    [
      7949925,
      1560423139,
      16,
      54,
      0,
      38487,
      3000000000,
      1,
      0,
      4791238,
      24163,
      15171305
    ],
    [
      7954291,
      1560481637,
      3,
      81,
      0,
      26966,
      1000000000,
      0,
      1,
      7262155,
      13483,
      15166939
    ],
    [
      7954291,
      1560481637,
      4,
      82,
      0,
      26966,
      6000000000,
      0,
      1,
      7283427,
      21272,
      15166939
    ],
    [
      7954291,
      1560481637,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  ],
  "sourcecode": "pragma solidity ^0.5.8;\n\ncontract ERC20_Coin{\n    \n    string public name;//\u540d\u79f0\n    string public symbol;//\u7f29\u5199\n    uint8 public decimals = 18;//\u7cbe\u786e\u7684\u5c0f\u6570\u4f4d\u6570\n    uint256 public totalSupply;//\u603b\u53d1\u884c\u91cf\n    address internal admin;//\u7ba1\u7406\u5458\n    mapping (address => uint256) public balanceOf;//\u5ba2\u6237\u7fa4\u4f53\n    bool public isAct = true;//\u5408\u7ea6\u6d3b\u52a8\u6807\u8bb0\n    bool public openRaise = false;//\u5f00\u542f\u52df\u96c6\u8d44\u91d1\u529f\u80fd\n    uint256 public raisePrice = 0;//\u52df\u96c6\u5151\u6362\u6bd4\u4f8b\n    address payable internal finance;//\u8d22\u52a1\u7ba1\u7406\n    \n    //\u8f6c\u8d26\u901a\u77e5\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\n\t//\u4ee5\u592a\u8f6c\u51fa\u901a\u77e5\n\tevent SendEth(address indexed to, uint256 value);\n    \n    constructor(\n        uint256 initialSupply,//\u53d1\u884c\u91cf\n        string memory tokenName,//\u540d\u79f0\n        string memory tokenSymbol//\u7f29\u5199\n     ) public {\n        totalSupply = initialSupply * 10 ** uint256(decimals);\n        balanceOf[msg.sender] = totalSupply;\n        name = tokenName;\n        symbol = tokenSymbol;\n        finance = msg.sender;\n        admin = msg.sender;\n    }\n\n    // \u53ea\u6709\u7ba1\u7406\u5458\u80fd\u8c03\u7528\u7684\n    modifier onlyAdmin() { \n        require(msg.sender == admin);\n        _;\n    }\n\n    // \u5224\u65ad\u5408\u7ea6\u662f\u5426\u6682\u505c\u670d\u52a1\n    modifier isActivity() { \n        require(isAct);\n        _;\n    }\n\n    // \u662f\u5426\u5904\u4e8e\u52df\u96c6\u8d44\u91d1\u72b6\u6001\n    modifier isOpenRaise() { \n        require(openRaise);\n        _;\n    }\n\n    //\u53ea\u6709\u5728\u6d3b\u52a8\u4e2d\u5e76\u4e14\u5f00\u542f\u4e86\u52df\u96c6\u6807\u8bb0\u624d\u4f1a\u63a5\u6536ETH\n    function () external payable isActivity isOpenRaise{\n\t\trequire(raisePrice >= 0);\n\t\tuint256 buyNum = msg.value /10000 * raisePrice;\n\t\trequire(buyNum <= balanceOf[finance]);\n\t\tbalanceOf[finance] -= buyNum;\n\t\tbalanceOf[msg.sender] += buyNum;\n        finance.transfer(msg.value);\n        emit SendEth(finance, msg.value);\n        emit Transfer(finance, msg.sender, buyNum);\n\t}\n    \n    //\u666e\u901a\u7684\u8f6c\u8d26\u529f\u80fd\uff0c\u53ea\u5224\u65ad\u6d3b\u52a8\u72b6\u6001\n    //\u53ef\u4ee5\u5728\u5404\u79cd\u7b2c\u4e09\u65b9\u94b1\u5305\u8c03\u7528\uff0c\u5982\uff1aimtoken\u3001MetaMask\n    function transfer(address _to, uint256 _value) public isActivity{\n\t    _transfer(msg.sender, _to, _value);\n    }\n    \n    //\u51fa\u7eb3\u8f6c\u8d26\uff0c\u6279\u91cf\u64cd\u4f5c\n    function transferList(address[] memory _tos, uint[] memory _values) public isActivity {\n        require(_tos.length == _values.length);\n        uint256 _total = 0;\n        for(uint256 i;i<_values.length;i++){\n            _total += _values[i];\n\t    }\n        require(balanceOf[msg.sender]>=_total);\n        for(uint256 i;i<_tos.length;i++){\n            _transfer(msg.sender,_tos[i],_values[i]);\n\t    }\n    }\n    \n    //\u5185\u90e8\u8f6c\u8d26\u5c01\u88c5\n    function _transfer(address _from, address _to, uint _value) internal {\n        require(_to != address(0));\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        emit Transfer(_from, _to, _value);\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n    }\n\t\n    //\u8bbe\u7f6e\u52df\u96c6\u8d44\u91d1\u7684\u5151\u6362\u6bd4\u4f8b\n\tfunction setRaisePrice(uint256 _price)public onlyAdmin{\n\t\traisePrice = _price;\n\t}\n\t\n    //\u5f00\u542f\u52df\u96c6\u901a\u9053\uff0c\u505a\u9884\u7559\uff0c\u9ed8\u8ba4\u90fd\u662f\u5173\u95ed\u7684\n\tfunction setOpenRaise(bool _open) public onlyAdmin{\n\t    openRaise = _open;\n\t}\n\t\n    //\u8bbe\u7f6e\u6d3b\u52a8\u72b6\u6001\uff0c\u5904\u7406\u5e94\u6025\u72b6\u51b5\n\tfunction setActivity(bool _isAct) public onlyAdmin{\n\t\tisAct = _isAct;\n\t}\n\t\n    //\u8f6c\u8ba9\u7ba1\u7406\u5458\u6743\u9650\n\tfunction setAdmin(address _address) public onlyAdmin{\n       admin = _address;\n    }\n    \n    //\u8bbe\u7f6e\u8d44\u91d1\u7ba1\u7406\u5458\n    function setMagage(address payable _address) public onlyAdmin{\n       finance = _address;\n    }\n\t\n    //\u9500\u6bc1\u5408\u7ea6\n\tfunction killYourself()public onlyAdmin{\n\t\tselfdestruct(finance);\n\t}\n\t\n}"
}