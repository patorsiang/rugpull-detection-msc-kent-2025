{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE CALLDATASIZE ISZERO PUSH2 JUMPI PUSH4 PUSH1 PUSH1 EXP PUSH1 CALLDATALOAD DIV AND PUSH4 DUP2 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH1 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 DUP2 CALLDATALOAD DUP2 DUP2 ADD SWAP1 DUP4 ADD CALLDATALOAD DUP1 PUSH1 PUSH1 DUP3 ADD DUP2 SWAP1 DIV DUP2 MUL ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 DUP5 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP7 POP POP SWAP4 CALLDATALOAD SWAP4 POP PUSH2 SWAP3 POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH1 MLOAD PUSH1 DUP4 AND PUSH1 DUP3 ADD MSTORE PUSH1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 DUP1 DUP3 MSTORE DUP5 SLOAD PUSH1 PUSH1 NOT PUSH2 PUSH1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 SWAP1 PUSH1 DUP3 ADD SWAP1 DUP7 SWAP1 DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 ADD SWAP1 PUSH1 ADD DUP1 DUP4 GT PUSH2 JUMPI DUP3 SWAP1 SUB PUSH1 AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP5 POP POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 AND SWAP1 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 PUSH2 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD CALLER PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 DUP2 AND PUSH4 SWAP1 SWAP3 DIV AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 DUP1 SLOAD PUSH1 SWAP1 DUP2 ADD SWAP2 DUP3 SWAP1 SSTORE PUSH1 SWAP2 DUP3 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP2 DUP3 SWAP1 SHA3 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 NOT AND PUSH1 DUP6 AND OR SWAP1 SSTORE SWAP1 PUSH32 SWAP1 DUP4 SWAP1 MLOAD PUSH1 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 ADD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH2 SWAP1 DIV PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH4 SWAP1 DIV PUSH1 PUSH1 PUSH1 EXP SUB AND DUP1 PUSH4 DUP4 PUSH1 MLOAD PUSH1 ADD MSTORE PUSH1 MLOAD DUP2 PUSH4 AND PUSH1 PUSH1 EXP MUL DUP2 MSTORE PUSH1 ADD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 MLOAD DUP1 MLOAD SWAP1 POP PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER PUSH1 PUSH1 PUSH1 EXP SUB AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 PUSH2 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SWAP2 POP DUP2 DUP5 DUP1 MLOAD PUSH2 SWAP3 SWAP2 PUSH1 ADD SWAP1 PUSH2 JUMP JUMPDEST POP PUSH1 DUP3 DUP2 ADD DUP1 SLOAD PUSH1 NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 DUP3 ADD DUP4 SWAP1 SSTORE PUSH32 DUP5 PUSH1 MLOAD PUSH1 DUP1 DUP3 MSTORE DUP2 SWAP1 DUP2 ADD DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 PUSH1 MSTORE PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH4 SWAP1 DIV PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH4 DUP3 PUSH1 MLOAD PUSH1 ADD MSTORE PUSH1 MLOAD DUP2 PUSH4 AND PUSH1 PUSH1 EXP MUL DUP2 MSTORE PUSH1 ADD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 MLOAD DUP1 MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 SLOAD PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 PUSH2 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD CALLER PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 DUP2 AND PUSH4 SWAP1 SWAP3 DIV AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH4 SWAP1 DIV PUSH1 PUSH1 PUSH1 EXP SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 JUMPI POP PUSH1 PUSH1 PUSH1 EXP SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH23 NOT AND PUSH4 PUSH1 PUSH1 PUSH1 EXP SUB DUP6 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 SLOAD SWAP3 DIV AND SWAP1 PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 DUP2 SWAP1 PUSH4 SWAP1 DIV PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH4 DUP5 DUP4 PUSH1 MLOAD PUSH1 ADD MSTORE PUSH1 MLOAD PUSH1 PUSH1 EXP PUSH4 DUP5 AND MUL DUP2 MSTORE PUSH1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 ADD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 MLOAD DUP1 MLOAD SWAP2 POP POP PUSH1 PUSH1 PUSH1 EXP SUB DUP2 AND ISZERO PUSH2 JUMPI SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH4 SWAP1 DIV PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 CALLER PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 PUSH2 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH3 SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST POP PUSH1 DUP1 SLOAD PUSH3 NOT AND PUSH3 OR SWAP1 SSTORE PUSH1 SWAP1 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH2 SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD CALLER PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 DUP2 AND PUSH4 SWAP1 SWAP3 DIV AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP3 SWAP1 SSTORE PUSH2 PUSH32 PUSH2 JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 NOT AND PUSH1 SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH2 NOT AND PUSH2 OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 PUSH1 PUSH1 EXP SUB PUSH4 SWAP1 SWAP2 DIV AND DUP3 PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 SLOAD CALLER PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH2 SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP3 AND PUSH4 MUL PUSH23 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 PUSH1 MSTORE PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP1 SHA3 PUSH1 DUP2 ADD SLOAD PUSH1 DUP3 ADD SLOAD PUSH1 SWAP1 SWAP2 AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH3 SWAP1 DIV PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 DUP2 SWAP1 PUSH1 PUSH2 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 SLOAD PUSH4 SWAP1 DIV PUSH1 PUSH1 PUSH1 EXP SUB AND DUP1 PUSH4 DUP5 PUSH1 PUSH1 MLOAD PUSH1 ADD MSTORE PUSH1 MLOAD PUSH1 PUSH1 EXP PUSH4 DUP5 AND MUL DUP2 MSTORE PUSH1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 ADD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 MLOAD DUP1 MLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP2 SWAP1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 AND SWAP1 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 DUP2 SWAP1 PUSH1 PUSH2 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 SLOAD PUSH4 SWAP1 DIV PUSH1 PUSH1 PUSH1 EXP SUB AND DUP1 PUSH4 DUP5 PUSH1 PUSH1 MLOAD PUSH1 ADD MSTORE PUSH1 MLOAD PUSH1 PUSH1 EXP PUSH4 DUP5 AND MUL DUP2 MSTORE PUSH1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 ADD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH4 SWAP1 DIV PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH4 DUP4 DUP4 PUSH1 MLOAD PUSH1 ADD MSTORE PUSH1 MLOAD PUSH1 PUSH1 EXP PUSH4 DUP5 AND MUL DUP2 MSTORE PUSH1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 ADD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 MLOAD DUP1 MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH2 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH3 SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH32 DUP1 SLOAD PUSH1 NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH32 DUP1 SLOAD DUP3 AND PUSH1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 PUSH1 MSTORE PUSH1 MSTORE PUSH32 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 SLOAD PUSH2 SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 PUSH1 ADD PUSH1 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 LT PUSH2 JUMPI DUP1 MLOAD PUSH1 NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 ADD SWAP2 SWAP1 PUSH1 ADD SWAP1 PUSH2 JUMP JUMPDEST POP PUSH2 SWAP3 SWAP2 POP PUSH2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP2 SSTORE PUSH1 ADD PUSH2 JUMP STOP LOG1 PUSH6 SHA3 UNKNOWN_0xc5 UNKNOWN_0xbd COINBASE CALL UNKNOWN_0x2e UNKNOWN_0x4d UNKNOWN_0xca UNKNOWN_0x4c UNKNOWN_0xa6 UNKNOWN_0xfb UNKNOWN_0x2f INVALID_0x7b",
  "opcode_entropy": 4.712118729648608,
  "opcode_count": 2357,
  "unique_opcodes": 68,
  "byte_entropy": 5.939999128809453,
  "byte_60": 0.11022997620935765,
  "byte_40": 0.015331747290510176,
  "byte_52": 0.014538725878932065,
  "byte_36": 0.0007930214115781126,
  "byte_15": 0.023261961406291304,
  "byte_61": 0.048902987047316944,
  "byte_01": 0.04863864657679091,
  "byte_2d": 0.0013217023526301878,
  "byte_57": 0.02564102564102564,
  "byte_63": 0.013745704467353952,
  "byte_ff": 0.02802008987575998,
  "byte_e0": 0.0021147237642083,
  "byte_02": 0.019825535289452814,
  "byte_0a": 0.012424002114723763,
  "byte_00": 0.05789056304520222,
  "byte_35": 0.004493787998942638,
  "byte_04": 0.026434047052603753,
  "byte_16": 0.021940259053661114,
  "byte_18": 0.0007930214115781126,
  "byte_8e": 0.000528680941052075,
  "byte_c3": 0.000528680941052075,
  "byte_56": 0.017710811525244514,
  "byte_81": 0.024319323288395454,
  "byte_14": 0.010309278350515464,
  "byte_32": 0.000528680941052075,
  "byte_80": 0.03885804916732752,
  "byte_1a": 0.0015860428231562252,
  "byte_f8": 0.0002643404705260375,
  "byte_68": 0.0007930214115781126,
  "byte_66": 0.0002643404705260375,
  "byte_28": 0.0007930214115781126,
  "byte_58": 0.0007930214115781126,
  "byte_8a": 0.000528680941052075,
  "byte_83": 0.008194554586307164,
  "byte_30": 0.000528680941052075,
  "byte_72": 0.0021147237642083,
  "byte_cf": 0.0007930214115781126,
  "byte_9e": 0.000528680941052075,
  "byte_4a": 0.0002643404705260375,
  "byte_65": 0.00105736188210415,
  "byte_0d": 0.0013217023526301878,
  "byte_c5": 0.0018503832936822627,
  "byte_62": 0.003965107057890563,
  "byte_d6": 0.0018503832936822627,
  "byte_bb": 0.00105736188210415,
  "byte_df": 0.0013217023526301878,
  "byte_d8": 0.0007930214115781126,
  "byte_e2": 0.00105736188210415,
  "byte_f9": 0.000528680941052075,
  "byte_94": 0.0013217023526301878,
  "byte_2b": 0.0013217023526301878,
  "byte_6d": 0.0026434047052603755,
  "byte_11": 0.00105736188210415,
  "byte_41": 0.0007930214115781126,
  "byte_70": 0.0002643404705260375,
  "byte_c0": 0.0013217023526301878,
  "byte_f6": 0.0013217023526301878,
  "byte_89": 0.000528680941052075,
  "byte_78": 0.00105736188210415,
  "byte_23": 0.00105736188210415,
  "byte_6a": 0.0002643404705260375,
  "byte_73": 0.0007930214115781126,
  "byte_e9": 0.0013217023526301878,
  "byte_be": 0.0002643404705260375,
  "byte_7d": 0.00105736188210415,
  "byte_7c": 0.000528680941052075,
  "byte_5c": 0.000528680941052075,
  "byte_45": 0.002907745175786413,
  "byte_9c": 0.0013217023526301878,
  "byte_8d": 0.0002643404705260375,
  "byte_a5": 0.000528680941052075,
  "byte_cb": 0.000528680941052075,
  "byte_5b": 0.0359503039915411,
  "byte_ce": 0.000528680941052075,
  "byte_af": 0.000528680941052075,
  "byte_38": 0.00105736188210415,
  "byte_e1": 0.0007930214115781126,
  "byte_b8": 0.0002643404705260375,
  "byte_4e": 0.0018503832936822627,
  "byte_3a": 0.0013217023526301878,
  "byte_f4": 0.0002643404705260375,
  "byte_bc": 0.000528680941052075,
  "byte_91": 0.017446471054718478,
  "byte_21": 0.00105736188210415,
  "byte_03": 0.019561194818926778,
  "byte_bf": 0.0002643404705260375,
  "byte_b2": 0.0015860428231562252,
  "byte_31": 0.0013217023526301878,
  "byte_d2": 0.000528680941052075,
  "byte_29": 0.0015860428231562252,
  "byte_c9": 0.0002643404705260375,
  "byte_0c": 0.0031720856463124504,
  "byte_5d": 0.0007930214115781126,
  "byte_d9": 0.00105736188210415,
  "byte_dd": 0.000528680941052075,
  "byte_b9": 0.00105736188210415,
  "byte_76": 0.0018503832936822627,
  "byte_ec": 0.00105736188210415,
  "byte_07": 0.0037007665873645254,
  "byte_74": 0.0013217023526301878,
  "byte_e4": 0.0018503832936822627,
  "byte_90": 0.04097277293153582,
  "byte_13": 0.0013217023526301878,
  "byte_ea": 0.00105736188210415,
  "byte_f2": 0.0002643404705260375,
  "byte_ef": 0.00105736188210415,
  "byte_ed": 0.0002643404705260375,
  "byte_e3": 0.0015860428231562252,
  "byte_3e": 0.000528680941052075,
  "byte_de": 0.00105736188210415,
  "byte_4f": 0.00105736188210415,
  "byte_54": 0.015331747290510176,
  "byte_f0": 0.0007930214115781126,
  "byte_1b": 0.0007930214115781126,
  "byte_1d": 0.000528680941052075,
  "byte_c1": 0.000528680941052075,
  "byte_67": 0.0007930214115781126,
  "byte_fd": 0.015596087761036215,
  "byte_34": 0.006872852233676976,
  "byte_3d": 0.000528680941052075,
  "byte_51": 0.015596087761036215,
  "byte_20": 0.01401004493787999,
  "byte_f3": 0.0013217023526301878,
  "byte_82": 0.010309278350515464,
  "byte_97": 0.0002643404705260375,
  "byte_a9": 0.000528680941052075,
  "byte_b1": 0.0018503832936822627,
  "byte_05": 0.003436426116838488,
  "byte_d0": 0.0002643404705260375,
  "byte_24": 0.0013217023526301878,
  "byte_1f": 0.0018503832936822627,
  "byte_92": 0.0055511498810467885,
  "byte_84": 0.003436426116838488,
  "byte_37": 0.0002643404705260375,
  "byte_50": 0.019825535289452814,
  "byte_96": 0.0002643404705260375,
  "byte_93": 0.0015860428231562252,
  "byte_06": 0.0023790642347343376,
  "byte_4c": 0.0018503832936822627,
  "byte_f5": 0.000528680941052075,
  "byte_75": 0.0002643404705260375,
  "byte_7a": 0.0013217023526301878,
  "byte_88": 0.00105736188210415,
  "byte_a0": 0.006872852233676976,
  "byte_a7": 0.000528680941052075,
  "byte_08": 0.0015860428231562252,
  "byte_69": 0.000528680941052075,
  "byte_09": 0.003436426116838488,
  "byte_79": 0.000528680941052075,
  "byte_3f": 0.0002643404705260375,
  "byte_19": 0.0031720856463124504,
  "byte_86": 0.000528680941052075,
  "byte_c8": 0.0007930214115781126,
  "byte_10": 0.0007930214115781126,
  "byte_9d": 0.0002643404705260375,
  "byte_ab": 0.0002643404705260375,
  "byte_e6": 0.000528680941052075,
  "byte_f7": 0.0002643404705260375,
  "byte_fb": 0.0007930214115781126,
  "byte_0b": 0.0023790642347343376,
  "byte_95": 0.0007930214115781126,
  "byte_aa": 0.000528680941052075,
  "byte_49": 0.00105736188210415,
  "byte_b0": 0.0007930214115781126,
  "byte_5f": 0.0015860428231562252,
  "byte_42": 0.0007930214115781126,
  "byte_b4": 0.00105736188210415,
  "byte_33": 0.0015860428231562252,
  "byte_55": 0.0050224689399947136,
  "byte_85": 0.0015860428231562252,
  "byte_17": 0.0026434047052603755,
  "byte_7f": 0.003965107057890563,
  "byte_a4": 0.0007930214115781126,
  "byte_0f": 0.000528680941052075,
  "byte_dc": 0.0007930214115781126,
  "byte_fe": 0.000528680941052075,
  "byte_e7": 0.0002643404705260375,
  "byte_2f": 0.00105736188210415,
  "byte_db": 0.0002643404705260375,
  "byte_47": 0.0007930214115781126,
  "byte_a1": 0.00105736188210415,
  "byte_87": 0.0018503832936822627,
  "byte_3b": 0.0015860428231562252,
  "byte_c6": 0.0018503832936822627,
  "byte_5a": 0.0015860428231562252,
  "byte_f1": 0.0026434047052603755,
  "byte_ba": 0.000528680941052075,
  "byte_2a": 0.000528680941052075,
  "byte_0e": 0.0026434047052603755,
  "byte_6b": 0.0007930214115781126,
  "byte_3c": 0.0007930214115781126,
  "byte_fc": 0.0002643404705260375,
  "byte_c7": 0.0007930214115781126,
  "byte_b3": 0.00105736188210415,
  "byte_64": 0.0002643404705260375,
  "byte_e8": 0.0015860428231562252,
  "byte_22": 0.0002643404705260375,
  "byte_cd": 0.0007930214115781126,
  "byte_6c": 0.000528680941052075,
  "byte_c2": 0.0002643404705260375,
  "byte_eb": 0.0002643404705260375,
  "byte_6f": 0.000528680941052075,
  "byte_7b": 0.00105736188210415,
  "byte_2e": 0.0007930214115781126,
  "byte_ae": 0.0007930214115781126,
  "byte_fa": 0.0007930214115781126,
  "byte_8c": 0.0007930214115781126,
  "byte_53": 0.00105736188210415,
  "byte_c4": 0.0007930214115781126,
  "byte_a3": 0.00105736188210415,
  "byte_44": 0.00105736188210415,
  "byte_bd": 0.000528680941052075,
  "byte_77": 0.0002643404705260375,
  "byte_ee": 0.0002643404705260375,
  "byte_da": 0.000528680941052075,
  "byte_7e": 0.000528680941052075,
  "byte_cc": 0.0002643404705260375,
  "byte_2c": 0.0007930214115781126,
  "byte_a8": 0.0002643404705260375,
  "byte_48": 0.0007930214115781126,
  "byte_26": 0.0007930214115781126,
  "byte_46": 0.0002643404705260375,
  "byte_5e": 0.000528680941052075,
  "byte_a2": 0.000528680941052075,
  "byte_b5": 0.0002643404705260375,
  "byte_4b": 0.0007930214115781126,
  "byte_8f": 0.0002643404705260375,
  "byte_d7": 0.0002643404705260375,
  "byte_d1": 0.0002643404705260375,
  "byte_39": 0.0002643404705260375,
  "byte_d4": 0.0002643404705260375,
  "byte_59": 0.0002643404705260375,
  "byte_8b": 0.0002643404705260375,
  "byte_27": 0.0002643404705260375,
  "byte_ad": 0.0002643404705260375,
  "byte_6e": 0.0002643404705260375,
  "byte_71": 0.0007930214115781126,
  "byte_4d": 0.0002643404705260375,
  "byte_ca": 0.0002643404705260375,
  "byte_a6": 0.000528680941052075,
  "num_nodes": 2,
  "num_edges": 1,
  "avg_degree": 1.0,
  "density": 0.5,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 3,
  "event_nums": 3,
  "creation_block": 5015187,
  "creation_timestamp": 1517544634,
  "life_time": 5519.0,
  "duration_seconds": 80631.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 3,
  "num_buyers": 1,
  "num_sellers": 1,
  "num_creator_transfers": 0,
  "buy_amt": 0,
  "sell_amt": 0.0,
  "avg_value": 0.0,
  "txn_per_block": 0.0005434782608695652,
  "avg_gas_limit": 2283333.3333333335,
  "std_gas_limit": 3123121.6577150635,
  "avg_gas_used": 387655.6666666667,
  "std_gas_used": 496053.0824399967,
  "avg_gas_price": 10000000000.0,
  "std_gas_price": 0.0,
  "setinitialapplicationaddress_num": 1,
  "applyandlocksettings_num": 1,
  "timeline_sequence": [
    [
      5015187,
      1517544634,
      20,
      21,
      0,
      6700000,
      10000000000,
      0,
      1,
      1633280,
      1089131,
      18105723
    ],
    [
      5015364,
      1517547186,
      29,
      43,
      0,
      50000,
      10000000000,
      0,
      1,
      1324045,
      44147,
      18105546
    ],
    [
      5020706,
      1517625265,
      70,
      68,
      0,
      100000,
      10000000000,
      0,
      1,
      1674021,
      29689,
      18100204
    ]
  ],
  "sourcecode": "pragma solidity ^0.4.17;\n\n/*\n\n * source       https://github.com/blockbitsio/\n\n * @name        Application Entity Generic Contract\n * @package     BlockBitsIO\n * @author      Micky Socaci <micky@nowlive.ro>\n\n    Used for the ABI interface when assets need to call Application Entity.\n\n    This is required, otherwise we end up loading the assets themselves when we load the ApplicationEntity contract\n    and end up in a loop\n*/\n\n\n\ncontract ApplicationEntityABI {\n\n    address public ProposalsEntity;\n    address public FundingEntity;\n    address public MilestonesEntity;\n    address public MeetingsEntity;\n    address public BountyManagerEntity;\n    address public TokenManagerEntity;\n    address public ListingContractEntity;\n    address public FundingManagerEntity;\n    address public NewsContractEntity;\n\n    bool public _initialized = false;\n    bool public _locked = false;\n    uint8 public CurrentEntityState;\n    uint8 public AssetCollectionNum;\n    address public GatewayInterfaceAddress;\n    address public deployerAddress;\n    address testAddressAllowUpgradeFrom;\n    mapping (bytes32 => uint8) public EntityStates;\n    mapping (bytes32 => address) public AssetCollection;\n    mapping (uint8 => bytes32) public AssetCollectionIdToName;\n    mapping (bytes32 => uint256) public BylawsUint256;\n    mapping (bytes32 => bytes32) public BylawsBytes32;\n\n    function ApplicationEntity() public;\n    function getEntityState(bytes32 name) public view returns (uint8);\n    function linkToGateway( address _GatewayInterfaceAddress, bytes32 _sourceCodeUrl ) external;\n    function setUpgradeState(uint8 state) public ;\n    function addAssetProposals(address _assetAddresses) external;\n    function addAssetFunding(address _assetAddresses) external;\n    function addAssetMilestones(address _assetAddresses) external;\n    function addAssetMeetings(address _assetAddresses) external;\n    function addAssetBountyManager(address _assetAddresses) external;\n    function addAssetTokenManager(address _assetAddresses) external;\n    function addAssetFundingManager(address _assetAddresses) external;\n    function addAssetListingContract(address _assetAddresses) external;\n    function addAssetNewsContract(address _assetAddresses) external;\n    function getAssetAddressByName(bytes32 _name) public view returns (address);\n    function setBylawUint256(bytes32 name, uint256 value) public;\n    function getBylawUint256(bytes32 name) public view returns (uint256);\n    function setBylawBytes32(bytes32 name, bytes32 value) public;\n    function getBylawBytes32(bytes32 name) public view returns (bytes32);\n    function initialize() external returns (bool);\n    function getParentAddress() external view returns(address);\n    function createCodeUpgradeProposal( address _newAddress, bytes32 _sourceCodeUrl ) external returns (uint256);\n    function acceptCodeUpgradeProposal(address _newAddress) external;\n    function initializeAssetsToThisApplication() external returns (bool);\n    function transferAssetsToNewApplication(address _newAddress) external returns (bool);\n    function lock() external returns (bool);\n    function canInitiateCodeUpgrade(address _sender) public view returns(bool);\n    function doStateChanges() public;\n    function hasRequiredStateChanges() public view returns (bool);\n    function anyAssetHasChanges() public view returns (bool);\n    function extendedAnyAssetHasChanges() internal view returns (bool);\n    function getRequiredStateChanges() public view returns (uint8, uint8);\n    function getTimestamp() view public returns (uint256);\n\n}\n\n/*\n\n * source       https://github.com/blockbitsio/\n\n * @name        Application Asset Contract\n * @package     BlockBitsIO\n * @author      Micky Socaci <micky@nowlive.ro>\n\n Any contract inheriting this will be usable as an Asset in the Application Entity\n\n*/\n\n\n\n\ncontract ApplicationAsset {\n\n    event EventAppAssetOwnerSet(bytes32 indexed _name, address indexed _owner);\n    event EventRunBeforeInit(bytes32 indexed _name);\n    event EventRunBeforeApplyingSettings(bytes32 indexed _name);\n\n\n    mapping (bytes32 => uint8) public EntityStates;\n    mapping (bytes32 => uint8) public RecordStates;\n    uint8 public CurrentEntityState;\n\n    event EventEntityProcessor(bytes32 indexed _assetName, uint8 indexed _current, uint8 indexed _required);\n    event DebugEntityRequiredChanges( bytes32 _assetName, uint8 indexed _current, uint8 indexed _required );\n\n    bytes32 public assetName;\n\n    /* Asset records */\n    uint8 public RecordNum = 0;\n\n    /* Asset initialised or not */\n    bool public _initialized = false;\n\n    /* Asset settings present or not */\n    bool public _settingsApplied = false;\n\n    /* Asset owner ( ApplicationEntity address ) */\n    address public owner = address(0x0) ;\n    address public deployerAddress;\n\n    function ApplicationAsset() public {\n        deployerAddress = msg.sender;\n    }\n\n    function setInitialApplicationAddress(address _ownerAddress) public onlyDeployer requireNotInitialised {\n        owner = _ownerAddress;\n    }\n\n    function setInitialOwnerAndName(bytes32 _name) external\n        requireNotInitialised\n        onlyOwner\n        returns (bool)\n    {\n        // init states\n        setAssetStates();\n        assetName = _name;\n        // set initial state\n        CurrentEntityState = getEntityState(\"NEW\");\n        runBeforeInitialization();\n        _initialized = true;\n        EventAppAssetOwnerSet(_name, owner);\n        return true;\n    }\n\n    function setAssetStates() internal {\n        // Asset States\n        EntityStates[\"__IGNORED__\"]     = 0;\n        EntityStates[\"NEW\"]             = 1;\n        // Funding Stage States\n        RecordStates[\"__IGNORED__\"]     = 0;\n    }\n\n    function getRecordState(bytes32 name) public view returns (uint8) {\n        return RecordStates[name];\n    }\n\n    function getEntityState(bytes32 name) public view returns (uint8) {\n        return EntityStates[name];\n    }\n\n    function runBeforeInitialization() internal requireNotInitialised  {\n        EventRunBeforeInit(assetName);\n    }\n\n    function applyAndLockSettings()\n        public\n        onlyDeployer\n        requireInitialised\n        requireSettingsNotApplied\n        returns(bool)\n    {\n        runBeforeApplyingSettings();\n        _settingsApplied = true;\n        return true;\n    }\n\n    function runBeforeApplyingSettings() internal requireInitialised requireSettingsNotApplied  {\n        EventRunBeforeApplyingSettings(assetName);\n    }\n\n    function transferToNewOwner(address _newOwner) public requireInitialised onlyOwner returns (bool) {\n        require(owner != address(0x0) && _newOwner != address(0x0));\n        owner = _newOwner;\n        EventAppAssetOwnerSet(assetName, owner);\n        return true;\n    }\n\n    function getApplicationAssetAddressByName(bytes32 _name)\n        public\n        view\n        returns(address)\n    {\n        address asset = ApplicationEntityABI(owner).getAssetAddressByName(_name);\n        if( asset != address(0x0) ) {\n            return asset;\n        } else {\n            revert();\n        }\n    }\n\n    function getApplicationState() public view returns (uint8) {\n        return ApplicationEntityABI(owner).CurrentEntityState();\n    }\n\n    function getApplicationEntityState(bytes32 name) public view returns (uint8) {\n        return ApplicationEntityABI(owner).getEntityState(name);\n    }\n\n    function getAppBylawUint256(bytes32 name) public view requireInitialised returns (uint256) {\n        ApplicationEntityABI CurrentApp = ApplicationEntityABI(owner);\n        return CurrentApp.getBylawUint256(name);\n    }\n\n    function getAppBylawBytes32(bytes32 name) public view requireInitialised returns (bytes32) {\n        ApplicationEntityABI CurrentApp = ApplicationEntityABI(owner);\n        return CurrentApp.getBylawBytes32(name);\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    modifier onlyApplicationEntity() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    modifier requireInitialised() {\n        require(_initialized == true);\n        _;\n    }\n\n    modifier requireNotInitialised() {\n        require(_initialized == false);\n        _;\n    }\n\n    modifier requireSettingsApplied() {\n        require(_settingsApplied == true);\n        _;\n    }\n\n    modifier requireSettingsNotApplied() {\n        require(_settingsApplied == false);\n        _;\n    }\n\n    modifier onlyDeployer() {\n        require(msg.sender == deployerAddress);\n        _;\n    }\n\n    modifier onlyAsset(bytes32 _name) {\n        address AssetAddress = getApplicationAssetAddressByName(_name);\n        require( msg.sender == AssetAddress);\n        _;\n    }\n\n    function getTimestamp() view public returns (uint256) {\n        return now;\n    }\n\n\n}\n\n/*\n\n * source       https://github.com/blockbitsio/\n\n * @name        News Contract\n * @package     BlockBitsIO\n * @author      Micky Socaci <micky@nowlive.ro>\n\n Contains This Application's News Items\n\n*/\n\n\n\n\n\n\ncontract NewsContract is ApplicationAsset {\n\n    // state types\n    // 1 - generic news item\n\n    // 2 - FUNDING FAILED\n    // 3 - FUNDING SUCCESSFUL\n    // 4 - MEETING DATE AND TIME SET\n    // 5 - VOTING INITIATED\n\n    // 10 - GLOBAL CASHBACK AVAILABLE\n    // 50 - CODE UPGRADE PROPOSAL INITIATED\n\n    // 100 - DEVELOPMENT COMPLETE, HELLO SKYNET\n\n    // news items\n    struct item {\n        string hash;\n        uint8 itemType;\n        uint256 length;\n    }\n\n    mapping ( uint256 => item ) public items;\n    uint256 public itemNum = 0;\n\n    event EventNewsItem(string _hash);\n    event EventNewsState(uint8 itemType);\n\n    function NewsContract() ApplicationAsset() public {\n\n    }\n\n    function addInternalMessage(uint8 state) public requireInitialised {\n        require(msg.sender == owner); // only application\n        item storage child = items[++itemNum];\n        child.itemType = state;\n        EventNewsState(state);\n    }\n\n    function addItem(string _hash, uint256 _length) public onlyAppDeployer requireInitialised {\n        item storage child = items[++itemNum];\n        child.hash = _hash;\n        child.itemType = 1;\n        child.length = _length;\n        EventNewsItem(_hash);\n    }\n\n    modifier onlyAppDeployer() {\n        ApplicationEntityABI currentApp = ApplicationEntityABI(owner);\n        require(msg.sender == currentApp.deployerAddress());\n        _;\n    }\n}"
}