{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE PUSH1 DUP1 SLOAD PUSH1 PUSH1 EXP PUSH1 MUL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 DUP1 DUP3 MSTORE PUSH32 PUSH1 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE PUSH1 DUP6 MSTORE PUSH32 SWAP1 DUP6 ADD MSTORE DUP3 MLOAD SWAP3 SWAP4 SWAP3 PUSH3 SWAP2 PUSH1 SWAP2 PUSH3 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 SWAP1 PUSH1 SWAP1 PUSH1 DUP6 ADD SWAP1 PUSH3 JUMP JUMPDEST POP PUSH1 DUP1 SLOAD PUSH1 SWAP1 SWAP3 AND PUSH1 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH3 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 PUSH1 ADD PUSH1 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 LT PUSH3 JUMPI DUP1 MLOAD PUSH1 NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 ADD SWAP2 SWAP1 PUSH1 ADD SWAP1 PUSH3 JUMP JUMPDEST POP PUSH3 SWAP3 SWAP2 POP PUSH3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 JUMPI PUSH1 DUP2 SSTORE PUSH1 ADD PUSH3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 DUP1 PUSH3 PUSH1 CODECOPY PUSH1 RETURN STOP PUSH1 PUSH1 MSTORE PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH4 PUSH29 PUSH1 CALLDATALOAD DIV AND PUSH4 DUP2 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 DUP1 CALLDATALOAD DUP3 DUP2 ADD CALLDATALOAD PUSH1 DUP2 ADD DUP6 SWAP1 DIV DUP6 MUL DUP7 ADD DUP6 ADD SWAP1 SWAP7 MSTORE DUP6 DUP6 MSTORE PUSH2 SWAP6 DUP4 CALLDATALOAD PUSH1 PUSH1 PUSH1 EXP SUB AND SWAP6 CALLDATASIZE SWAP6 PUSH1 SWAP5 SWAP2 SWAP4 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 DUP1 CALLDATALOAD DUP3 DUP2 ADD CALLDATALOAD PUSH1 DUP2 ADD DUP6 SWAP1 DIV DUP6 MUL DUP7 ADD DUP6 ADD SWAP1 SWAP7 MSTORE DUP6 DUP6 MSTORE PUSH2 SWAP6 DUP4 CALLDATALOAD PUSH1 PUSH1 PUSH1 EXP SUB AND SWAP6 CALLDATASIZE SWAP6 PUSH1 SWAP5 SWAP2 SWAP4 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD DUP2 AND SWAP1 PUSH1 CALLDATALOAD AND PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 CALLDATALOAD DUP2 DUP2 ADD CALLDATALOAD PUSH1 DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 SWAP5 DUP3 CALLDATALOAD PUSH1 PUSH1 PUSH1 EXP SUB AND SWAP5 PUSH1 DUP1 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 SWAP5 PUSH1 SWAP5 SWAP3 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 CALLDATALOAD DUP2 DUP2 ADD CALLDATALOAD PUSH1 DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 SWAP5 DUP3 CALLDATALOAD PUSH1 PUSH1 PUSH1 EXP SUB AND SWAP5 PUSH1 DUP1 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 SWAP5 PUSH1 SWAP5 SWAP3 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 CALLDATALOAD PUSH1 DUP2 DUP2 ADD CALLDATALOAD SWAP3 DUP4 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE PUSH2 SWAP5 PUSH1 PUSH1 PUSH1 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP6 PUSH1 DUP1 CALLDATALOAD SWAP1 SWAP3 AND SWAP6 PUSH1 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 PUSH1 SWAP5 ADD SWAP2 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 CALLDATALOAD DUP2 DUP2 ADD CALLDATALOAD PUSH1 DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 SWAP5 DUP3 CALLDATALOAD PUSH1 PUSH1 PUSH1 EXP SUB AND SWAP5 PUSH1 DUP1 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 SWAP5 PUSH1 SWAP5 SWAP3 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 CALLDATALOAD DUP2 DUP2 ADD CALLDATALOAD PUSH1 DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 SWAP5 DUP3 CALLDATALOAD PUSH1 PUSH1 PUSH1 EXP SUB AND SWAP5 PUSH1 DUP1 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 SWAP5 PUSH1 SWAP5 SWAP3 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH1 CALLDATALOAD PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD DUP2 AND SWAP1 PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 CALLDATALOAD AND PUSH2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 EXP SWAP1 DIV PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 DUP6 AND ISZERO PUSH2 MUL PUSH1 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 ADD SWAP1 PUSH1 ADD DUP1 DUP4 GT PUSH2 JUMPI DUP3 SWAP1 SUB PUSH1 AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 EXP SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 SHA3 DUP7 SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH32 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 DUP3 PUSH1 DUP4 PUSH1 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 DUP4 LT PUSH2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 SWAP4 DUP5 SUB PUSH2 EXP PUSH1 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP PUSH1 MLOAD SWAP4 DUP5 SWAP1 SUB ADD SWAP1 SWAP3 SHA3 SWAP3 SWAP2 POP POP PUSH2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 PUSH2 DUP4 PUSH1 DUP5 PUSH1 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 DUP4 LT PUSH2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 SWAP4 DUP5 SUB PUSH2 EXP PUSH1 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP PUSH1 MLOAD SWAP4 DUP5 SWAP1 SUB ADD SWAP1 SWAP3 SHA3 SWAP3 SWAP2 POP POP PUSH2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 PUSH1 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP5 DUP5 DUP5 PUSH2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP2 PUSH1 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP PUSH2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 PUSH1 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP5 DUP5 DUP5 PUSH2 JUMP JUMPDEST PUSH1 PUSH2 CALLER PUSH1 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP PUSH2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 EXP SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SSTORE PUSH1 PUSH1 PUSH1 EXP SUB DUP4 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP5 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 DUP3 SWAP1 SHA3 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH32 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH1 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB DUP6 AND SWAP2 PUSH1 SWAP2 PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 LOG3 POP PUSH1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 CALLER DUP3 PUSH2 JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 SHA3 SLOAD DUP1 DUP4 GT ISZERO PUSH2 JUMPI CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 EXP SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 SHA3 SSTORE PUSH2 JUMP JUMPDEST PUSH2 DUP2 DUP5 PUSH4 PUSH2 AND JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 EXP SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SHA3 SSTORE JUMPDEST CALLER PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 EXP SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 SHA3 SLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP2 AND SWAP1 PUSH32 SWAP1 PUSH1 SWAP1 LOG2 PUSH1 DUP1 SLOAD PUSH20 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 EXP SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH21 NOT AND PUSH1 PUSH1 EXP OR SWAP1 SSTORE PUSH1 MLOAD PUSH32 SWAP1 PUSH1 SWAP1 LOG1 POP PUSH1 SWAP1 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 PUSH1 EXP SUB DUP5 AND ADDRESS EQ ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP5 DUP5 PUSH2 JUMP JUMPDEST POP DUP4 PUSH1 PUSH1 PUSH1 EXP SUB AND CALLVALUE DUP4 PUSH1 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 DUP2 MSTORE PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP1 MLOAD PUSH1 PUSH1 DUP5 DUP7 AND ISZERO PUSH2 MUL PUSH1 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP2 PUSH1 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP PUSH2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 PUSH1 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP4 DUP4 PUSH2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 PUSH1 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP6 DUP6 DUP6 DUP6 PUSH2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 PUSH1 EXP SUB DUP5 AND ADDRESS EQ ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP5 DUP5 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 PUSH1 EXP SUB DUP5 AND ADDRESS EQ ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP5 DUP5 PUSH2 JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 SHA3 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST CALLER PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 EXP SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 SHA3 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP2 SWAP4 PUSH32 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 DUP1 MLOAD PUSH32 DUP2 MSTORE PUSH1 PUSH1 PUSH1 EXP SUB SWAP3 DUP4 AND PUSH1 DUP3 ADD MSTORE PUSH1 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 SWAP2 PUSH1 DUP1 DUP3 ADD SWAP3 PUSH1 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB SWAP2 DUP3 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SHA3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST PUSH2 DUP3 DUP3 PUSH2 JUMP JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 AND SWAP1 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 PUSH1 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP5 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP5 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SHA3 SLOAD DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP5 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP1 DUP7 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP1 DUP3 SHA3 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SHA3 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP1 DUP6 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP8 AND DUP2 MSTORE PUSH1 DUP3 MSTORE DUP3 DUP2 SHA3 CALLER DUP3 MSTORE SWAP1 SWAP2 MSTORE SHA3 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP1 DUP7 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 CALLER DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 SHA3 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 DUP8 AND SWAP4 SWAP2 SWAP3 PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 DUP3 PUSH1 DUP4 PUSH1 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 DUP4 LT PUSH2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 SWAP4 DUP5 SUB PUSH2 EXP PUSH1 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP PUSH1 MLOAD SWAP4 DUP5 SWAP1 SUB ADD SWAP1 SWAP3 SHA3 SWAP3 SWAP2 POP POP PUSH2 JUMP JUMPDEST PUSH32 DUP3 DUP3 PUSH1 MLOAD DUP1 DUP4 PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 MSTORE PUSH1 ADD DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 PUSH1 EXP SUB DUP5 AND ADDRESS EQ ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP5 DUP5 PUSH2 JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP3 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD DUP2 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP3 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP4 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SSTORE PUSH1 SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SSTORE PUSH1 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB DUP5 AND SWAP2 PUSH32 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 LOG2 PUSH1 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 SWAP2 PUSH1 PUSH1 PUSH1 EXP SUB DUP6 AND SWAP2 PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 DUP3 DUP3 GT ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 DUP3 PUSH1 DUP4 PUSH1 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 DUP4 LT PUSH2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 SWAP4 DUP5 SUB PUSH2 EXP PUSH1 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP PUSH1 MLOAD SWAP4 DUP5 SWAP1 SUB ADD SWAP1 SWAP3 SHA3 SWAP3 SWAP2 POP POP PUSH2 JUMP JUMPDEST PUSH32 DUP3 DUP3 PUSH1 MLOAD DUP1 DUP4 PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 MSTORE PUSH1 ADD DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 PUSH1 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP1 DUP3 SHA3 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 PUSH1 PUSH1 EXP SUB DUP6 AND DUP2 MSTORE SHA3 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP5 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 DUP3 SWAP1 SHA3 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 CALLER SWAP3 PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 PUSH1 EXP SUB DUP5 AND ADDRESS EQ ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP6 DUP6 DUP6 PUSH2 JUMP JUMPDEST POP DUP4 PUSH1 PUSH1 PUSH1 EXP SUB AND CALLVALUE DUP4 PUSH1 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 SWAP1 PUSH1 SWAP1 LOG3 PUSH1 DUP1 SLOAD PUSH20 NOT AND PUSH1 PUSH1 PUSH1 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 SWAP1 SHA3 DUP1 SLOAD PUSH1 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 SWAP1 SHA3 DUP1 SLOAD PUSH1 NOT AND PUSH1 OR SWAP1 SSTORE JUMP STOP PUSH14 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP UNKNOWN_0xdd CALLCODE MSTORE UNKNOWN_0xad SHL UNKNOWN_0xe2 UNKNOWN_0xc8 SWAP12 PUSH10 CALL PUSH4 CREATE2 GAS UNKNOWN_0x4d CREATE2 UNKNOWN_0x23 UNKNOWN_0xb3 UNKNOWN_0xef LOG1 PUSH6 SHA3 DELEGATECALL UNKNOWN_0x23 PUSH16 CALLVALUE UNKNOWN_0x28 CODESIZE UNKNOWN_0xb9 JUMP UNKNOWN_0xc3 UNKNOWN_0xf9 INVALID_0x69",
  "opcode_entropy": 4.923487765370268,
  "opcode_count": 4596,
  "unique_opcodes": 89,
  "byte_entropy": 5.908760443552416,
  "byte_0x": 0.00015073861923424781,
  "byte_60": 0.11214953271028037,
  "byte_80": 0.04069942719324691,
  "byte_40": 0.012209828157974074,
  "byte_52": 0.02698221284293036,
  "byte_06": 0.005577328911667169,
  "byte_54": 0.008139885438649382,
  "byte_a0": 0.012963521254145313,
  "byte_02": 0.018540850165812483,
  "byte_0a": 0.014923123304190534,
  "byte_ff": 0.016129032258064516,
  "byte_19": 0.004522158577027435,
  "byte_16": 0.022309315646668677,
  "byte_90": 0.0447693699125716,
  "byte_55": 0.004220681338558939,
  "byte_34": 0.004371419957793186,
  "byte_15": 0.013717214350316552,
  "byte_62": 0.0030147723846849564,
  "byte_00": 0.04899005125113054,
  "byte_21": 0.0004522158577027434,
  "byte_57": 0.01673198673500151,
  "byte_fd": 0.008893578534820621,
  "byte_5b": 0.0309014169430208,
  "byte_50": 0.034217666566174254,
  "byte_51": 0.018540850165812483,
  "byte_82": 0.017636418450406994,
  "byte_01": 0.04672897196261682,
  "byte_12": 0.0015073861923424782,
  "byte_7f": 0.0028640337654507087,
  "byte_47": 0.0006029544769369913,
  "byte_61": 0.03919204100090443,
  "byte_73": 0.0009044317154054868,
  "byte_74": 0.0009044317154054868,
  "byte_72": 0.0010551703346397348,
  "byte_6f": 0.0009044317154054868,
  "byte_41": 0.0004522158577027434,
  "byte_64": 0.001658124811576726,
  "byte_76": 0.00030147723846849563,
  "byte_69": 0.0006029544769369913,
  "byte_6b": 0.0004522158577027434,
  "byte_65": 0.0009044317154054868,
  "byte_6e": 0.0009044317154054868,
  "byte_20": 0.024419656315948148,
  "byte_84": 0.014621646065722037,
  "byte_91": 0.018993066023515224,
  "byte_86": 0.0022610792885137173,
  "byte_95": 0.004220681338558939,
  "byte_04": 0.010250226107928851,
  "byte_85": 0.008139885438649382,
  "byte_46": 0.00015073861923424781,
  "byte_4f": 0.0006029544769369913,
  "byte_4b": 0.00030147723846849563,
  "byte_92": 0.012059089538739826,
  "byte_93": 0.005577328911667169,
  "byte_9d": 0.0009044317154054868,
  "byte_e3": 0.0007536930961712391,
  "byte_56": 0.017787157069641242,
  "byte_81": 0.029846246608381068,
  "byte_b3": 0.0004522158577027434,
  "byte_17": 0.0030147723846849564,
  "byte_03": 0.021857099788965932,
  "byte_33": 0.0037684654808561955,
  "byte_88": 0.0004522158577027434,
  "byte_1f": 0.0036177268616219473,
  "byte_10": 0.004220681338558939,
  "byte_26": 0.00030147723846849563,
  "byte_83": 0.01718420259270425,
  "byte_11": 0.002411817907747965,
  "byte_39": 0.0021103406692794696,
  "byte_68": 0.0006029544769369913,
  "byte_18": 0.001658124811576726,
  "byte_98": 0.0007536930961712391,
  "byte_f3": 0.0015073861923424782,
  "byte_36": 0.0013566475731082302,
  "byte_63": 0.006632499246306904,
  "byte_7c": 0.0006029544769369913,
  "byte_35": 0.007989146819415134,
  "byte_05": 0.003919204100090443,
  "byte_d2": 0.0004522158577027434,
  "byte_14": 0.008592101296352125,
  "byte_79": 0.0004522158577027434,
  "byte_de": 0.0006029544769369913,
  "byte_a2": 0.0007536930961712391,
  "byte_09": 0.0030147723846849564,
  "byte_5e": 0.00030147723846849563,
  "byte_a7": 0.0004522158577027434,
  "byte_2c": 0.00030147723846849563,
  "byte_ca": 0.0009044317154054868,
  "byte_8c": 0.0006029544769369913,
  "byte_0d": 0.0021103406692794696,
  "byte_dd": 0.0013566475731082302,
  "byte_b9": 0.0009044317154054868,
  "byte_e6": 0.0010551703346397348,
  "byte_c6": 0.00030147723846849563,
  "byte_e0": 0.0007536930961712391,
  "byte_23": 0.0006029544769369913,
  "byte_b8": 0.0004522158577027434,
  "byte_30": 0.0010551703346397348,
  "byte_af": 0.0007536930961712391,
  "byte_d5": 0.0007536930961712391,
  "byte_71": 0.0009044317154054868,
  "byte_31": 0.0004522158577027434,
  "byte_3c": 0.00030147723846849563,
  "byte_e5": 0.0006029544769369913,
  "byte_67": 0.0006029544769369913,
  "byte_ae": 0.0006029544769369913,
  "byte_bd": 0.00030147723846849563,
  "byte_c1": 0.0006029544769369913,
  "byte_0f": 0.0018088634308109737,
  "byte_42": 0.0006029544769369913,
  "byte_96": 0.0015073861923424782,
  "byte_6c": 0.00030147723846849563,
  "byte_3d": 0.0007536930961712391,
  "byte_66": 0.00030147723846849563,
  "byte_70": 0.0006029544769369913,
  "byte_a6": 0.00030147723846849563,
  "byte_9a": 0.00030147723846849563,
  "byte_7d": 0.0015073861923424782,
  "byte_bc": 0.0006029544769369913,
  "byte_b4": 0.0006029544769369913,
  "byte_8d": 0.00030147723846849563,
  "byte_a5": 0.0006029544769369913,
  "byte_cb": 0.0004522158577027434,
  "byte_c4": 0.0004522158577027434,
  "byte_db": 0.00030147723846849563,
  "byte_3f": 0.0006029544769369913,
  "byte_f5": 0.0007536930961712391,
  "byte_c3": 0.0010551703346397348,
  "byte_3a": 0.0009044317154054868,
  "byte_d8": 0.0004522158577027434,
  "byte_9b": 0.0006029544769369913,
  "byte_3b": 0.00030147723846849563,
  "byte_2d": 0.00015073861923424781,
  "byte_7b": 0.0004522158577027434,
  "byte_a9": 0.0006029544769369913,
  "byte_9c": 0.0010551703346397348,
  "byte_bb": 0.0007536930961712391,
  "byte_d3": 0.0006029544769369913,
  "byte_89": 0.0007536930961712391,
  "byte_c0": 0.0007536930961712391,
  "byte_e9": 0.00015073861923424781,
  "byte_22": 0.0006029544769369913,
  "byte_be": 0.00015073861923424781,
  "byte_7e": 0.00030147723846849563,
  "byte_d7": 0.00015073861923424781,
  "byte_d6": 0.0004522158577027434,
  "byte_da": 0.00030147723846849563,
  "byte_dc": 0.00030147723846849563,
  "byte_d0": 0.0006029544769369913,
  "byte_6d": 0.00030147723846849563,
  "byte_fe": 0.0010551703346397348,
  "byte_ed": 0.00015073861923424781,
  "byte_3e": 0.0004522158577027434,
  "byte_07": 0.002411817907747965,
  "byte_f2": 0.0007536930961712391,
  "byte_8b": 0.0006029544769369913,
  "byte_49": 0.0006029544769369913,
  "byte_8e": 0.0022610792885137173,
  "byte_6a": 0.00030147723846849563,
  "byte_b7": 0.001658124811576726,
  "byte_7a": 0.0006029544769369913,
  "byte_f1": 0.0010551703346397348,
  "byte_d9": 0.00030147723846849563,
  "byte_1e": 0.0015073861923424782,
  "byte_38": 0.00030147723846849563,
  "byte_24": 0.0025625565269822128,
  "byte_08": 0.003316249623153452,
  "byte_5c": 0.0004522158577027434,
  "byte_44": 0.0018088634308109737,
  "byte_94": 0.006632499246306904,
  "byte_37": 0.0012059089538739825,
  "byte_97": 0.0013566475731082302,
  "byte_c5": 0.00015073861923424781,
  "byte_ce": 0.0007536930961712391,
  "byte_ec": 0.0007536930961712391,
  "byte_e2": 0.00030147723846849563,
  "byte_53": 0.00030147723846849563,
  "byte_9e": 0.0004522158577027434,
  "byte_25": 0.0006029544769369913,
  "byte_f9": 0.0004522158577027434,
  "byte_0b": 0.0010551703346397348,
  "byte_0c": 0.0012059089538739825,
  "byte_1d": 0.00015073861923424781,
  "byte_5d": 0.00030147723846849563,
  "byte_87": 0.0013566475731082302,
  "byte_0e": 0.0015073861923424782,
  "byte_4d": 0.0006029544769369913,
  "byte_a8": 0.0010551703346397348,
  "byte_b6": 0.00030147723846849563,
  "byte_2a": 0.0004522158577027434,
  "byte_2e": 0.00030147723846849563,
  "byte_aa": 0.0013566475731082302,
  "byte_e1": 0.0004522158577027434,
  "byte_eb": 0.0004522158577027434,
  "byte_d1": 0.0006029544769369913,
  "byte_f7": 0.0004522158577027434,
  "byte_b2": 0.0006029544769369913,
  "byte_29": 0.0006029544769369913,
  "byte_c8": 0.0009044317154054868,
  "byte_c7": 0.0010551703346397348,
  "byte_a3": 0.0015073861923424782,
  "byte_a4": 0.0007536930961712391,
  "byte_4e": 0.0004522158577027434,
  "byte_1a": 0.00030147723846849563,
  "byte_fb": 0.00030147723846849563,
  "byte_df": 0.0006029544769369913,
  "byte_ee": 0.00030147723846849563,
  "byte_13": 0.0025625565269822128,
  "byte_28": 0.0004522158577027434,
  "byte_4c": 0.00030147723846849563,
  "byte_77": 0.00030147723846849563,
  "byte_f8": 0.00030147723846849563,
  "byte_2f": 0.0006029544769369913,
  "byte_59": 0.0004522158577027434,
  "byte_ab": 0.00015073861923424781,
  "byte_45": 0.00015073861923424781,
  "byte_5a": 0.0007536930961712391,
  "byte_48": 0.0004522158577027434,
  "byte_32": 0.00030147723846849563,
  "byte_2b": 0.00030147723846849563,
  "byte_ea": 0.00015073861923424781,
  "byte_f0": 0.0004522158577027434,
  "byte_b1": 0.00015073861923424781,
  "byte_fa": 0.00015073861923424781,
  "byte_a1": 0.0006029544769369913,
  "byte_5f": 0.00015073861923424781,
  "byte_ac": 0.00015073861923424781,
  "byte_d4": 0.00015073861923424781,
  "byte_cf": 0.00030147723846849563,
  "byte_fc": 0.00030147723846849563,
  "byte_8f": 0.00030147723846849563,
  "byte_c9": 0.00015073861923424781,
  "byte_b5": 0.00030147723846849563,
  "byte_cc": 0.00030147723846849563,
  "byte_bf": 0.00015073861923424781,
  "byte_27": 0.0006029544769369913,
  "byte_78": 0.00015073861923424781,
  "byte_ba": 0.00015073861923424781,
  "byte_b0": 0.00030147723846849563,
  "byte_cd": 0.00015073861923424781,
  "byte_ad": 0.00015073861923424781,
  "byte_1b": 0.00015073861923424781,
  "byte_c2": 0.00015073861923424781,
  "byte_ef": 0.00015073861923424781,
  "byte_58": 0.00030147723846849563,
  "byte_f4": 0.00015073861923424781,
  "byte_4a": 0.00015073861923424781,
  "byte_8a": 0.00015073861923424781,
  "num_nodes": 2,
  "num_edges": 1,
  "avg_degree": 1.0,
  "density": 0.5,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 2,
  "event_nums": 9,
  "creation_block": 5812109,
  "creation_timestamp": 1529343632,
  "life_time": 110320.0,
  "duration_seconds": 1635377.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 3,
  "num_buyers": 1,
  "num_sellers": 1,
  "num_creator_transfers": 0,
  "buy_amt": 0,
  "sell_amt": 0.0,
  "avg_value": 0.0,
  "txn_per_block": 1.8128914712520734e-05,
  "avg_gas_limit": 1397507.5,
  "std_gas_limit": 1327330.5,
  "avg_gas_used": 931672.0,
  "std_gas_used": 884887.0,
  "avg_gas_price": 16000000000.0,
  "std_gas_price": 14000000000.0,
  "roleadded_num": 1,
  "transfer_num": 4,
  "atinversebrah_num": 1,
  "addminter_num": 1,
  "timeline_sequence": [
    [
      5812109,
      1529343632,
      0,
      40,
      0,
      2724838,
      2000000000,
      0,
      1,
      3817180,
      1816559,
      17279981
    ],
    [
      5922429,
      1530979009,
      2,
      59,
      0,
      70177,
      30000000000,
      0,
      1,
      6053016,
      46785,
      17169661
    ]
  ],
  "sourcecode": "pragma solidity ^0.4.24;\n\n// File: openzeppelin-solidity/contracts/math/SafeMath.sol\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  uint256 totalSupply_;\n\n  /**\n  * @dev total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol\n\n/**\n * @title Burnable Token\n * @dev Token that can be irreversibly burned (destroyed).\n */\ncontract BurnableToken is BasicToken {\n\n  event Burn(address indexed burner, uint256 value);\n\n  /**\n   * @dev Burns a specific amount of tokens.\n   * @param _value The amount of token to be burned.\n   */\n  function burn(uint256 _value) public {\n    _burn(msg.sender, _value);\n  }\n\n  function _burn(address _who, uint256 _value) internal {\n    require(_value <= balances[_who]);\n    // no need to require value <= totalSupply, since that would imply the\n    // sender's balance is greater than the totalSupply, which *should* be an assertion failure\n\n    balances[_who] = balances[_who].sub(_value);\n    totalSupply_ = totalSupply_.sub(_value);\n    emit Burn(_who, _value);\n    emit Transfer(_who, address(0), _value);\n  }\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol\n\n/**\n * @title DetailedERC20 token\n * @dev The decimals are only for visualization purposes.\n * All the operations are done using the smallest and indivisible token unit,\n * just as on Ethereum all the operations are done in wei.\n */\ncontract DetailedERC20 is ERC20 {\n  string public name;\n  string public symbol;\n  uint8 public decimals;\n\n  constructor(string _name, string _symbol, uint8 _decimals) public {\n    name = _name;\n    symbol = _symbol;\n    decimals = _decimals;\n  }\n}\n\n// File: openzeppelin-solidity/contracts/ownership/rbac/Roles.sol\n\n/**\n * @title Roles\n * @author Francisco Giordano (@frangio)\n * @dev Library for managing addresses assigned to a Role.\n *      See RBAC.sol for example usage.\n */\nlibrary Roles {\n  struct Role {\n    mapping (address => bool) bearer;\n  }\n\n  /**\n   * @dev give an address access to this role\n   */\n  function add(Role storage role, address addr)\n    internal\n  {\n    role.bearer[addr] = true;\n  }\n\n  /**\n   * @dev remove an address' access to this role\n   */\n  function remove(Role storage role, address addr)\n    internal\n  {\n    role.bearer[addr] = false;\n  }\n\n  /**\n   * @dev check if an address has this role\n   * // reverts\n   */\n  function check(Role storage role, address addr)\n    view\n    internal\n  {\n    require(has(role, addr));\n  }\n\n  /**\n   * @dev check if an address has this role\n   * @return bool\n   */\n  function has(Role storage role, address addr)\n    view\n    internal\n    returns (bool)\n  {\n    return role.bearer[addr];\n  }\n}\n\n// File: openzeppelin-solidity/contracts/ownership/rbac/RBAC.sol\n\n/**\n * @title RBAC (Role-Based Access Control)\n * @author Matt Condon (@Shrugs)\n * @dev Stores and provides setters and getters for roles and addresses.\n * @dev Supports unlimited numbers of roles and addresses.\n * @dev See //contracts/mocks/RBACMock.sol for an example of usage.\n * This RBAC method uses strings to key roles. It may be beneficial\n *  for you to write your own implementation of this interface using Enums or similar.\n * It's also recommended that you define constants in the contract, like ROLE_ADMIN below,\n *  to avoid typos.\n */\ncontract RBAC {\n  using Roles for Roles.Role;\n\n  mapping (string => Roles.Role) private roles;\n\n  event RoleAdded(address addr, string roleName);\n  event RoleRemoved(address addr, string roleName);\n\n  /**\n   * @dev reverts if addr does not have role\n   * @param addr address\n   * @param roleName the name of the role\n   * // reverts\n   */\n  function checkRole(address addr, string roleName)\n    view\n    public\n  {\n    roles[roleName].check(addr);\n  }\n\n  /**\n   * @dev determine if addr has role\n   * @param addr address\n   * @param roleName the name of the role\n   * @return bool\n   */\n  function hasRole(address addr, string roleName)\n    view\n    public\n    returns (bool)\n  {\n    return roles[roleName].has(addr);\n  }\n\n  /**\n   * @dev add a role to an address\n   * @param addr address\n   * @param roleName the name of the role\n   */\n  function addRole(address addr, string roleName)\n    internal\n  {\n    roles[roleName].add(addr);\n    emit RoleAdded(addr, roleName);\n  }\n\n  /**\n   * @dev remove a role from an address\n   * @param addr address\n   * @param roleName the name of the role\n   */\n  function removeRole(address addr, string roleName)\n    internal\n  {\n    roles[roleName].remove(addr);\n    emit RoleRemoved(addr, roleName);\n  }\n\n  /**\n   * @dev modifier to scope access to a single role (uses msg.sender as addr)\n   * @param roleName the name of the role\n   * // reverts\n   */\n  modifier onlyRole(string roleName)\n  {\n    checkRole(msg.sender, roleName);\n    _;\n  }\n\n  /**\n   * @dev modifier to scope access to a set of roles (uses msg.sender as addr)\n   * @param roleNames the names of the roles to scope access to\n   * // reverts\n   *\n   * @TODO - when solidity supports dynamic arrays as arguments to modifiers, provide this\n   *  see: https://github.com/ethereum/solidity/issues/2467\n   */\n  // modifier onlyRoles(string[] roleNames) {\n  //     bool hasAnyRole = false;\n  //     for (uint8 i = 0; i < roleNames.length; i++) {\n  //         if (hasRole(msg.sender, roleNames[i])) {\n  //             hasAnyRole = true;\n  //             break;\n  //         }\n  //     }\n\n  //     require(hasAnyRole);\n\n  //     _;\n  // }\n}\n\n// File: openzeppelin-solidity/contracts/ownership/Ownable.sol\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    public\n    returns (bool)\n  {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(\n    address _owner,\n    address _spender\n   )\n    public\n    view\n    returns (uint256)\n  {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(\n    address _spender,\n    uint _addedValue\n  )\n    public\n    returns (bool)\n  {\n    allowed[msg.sender][_spender] = (\n      allowed[msg.sender][_spender].add(_addedValue));\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(\n    address _spender,\n    uint _subtractedValue\n  )\n    public\n    returns (bool)\n  {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol\n\n/**\n * @title Mintable token\n * @dev Simple ERC20 Token example, with mintable token creation\n * @dev Issue: * https://github.com/OpenZeppelin/openzeppelin-solidity/issues/120\n * Based on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol\n */\ncontract MintableToken is StandardToken, Ownable {\n  event Mint(address indexed to, uint256 amount);\n  event MintFinished();\n\n  bool public mintingFinished = false;\n\n\n  modifier canMint() {\n    require(!mintingFinished);\n    _;\n  }\n\n  modifier hasMintPermission() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Function to mint tokens\n   * @param _to The address that will receive the minted tokens.\n   * @param _amount The amount of tokens to mint.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function mint(\n    address _to,\n    uint256 _amount\n  )\n    hasMintPermission\n    canMint\n    public\n    returns (bool)\n  {\n    totalSupply_ = totalSupply_.add(_amount);\n    balances[_to] = balances[_to].add(_amount);\n    emit Mint(_to, _amount);\n    emit Transfer(address(0), _to, _amount);\n    return true;\n  }\n\n  /**\n   * @dev Function to stop minting new tokens.\n   * @return True if the operation was successful.\n   */\n  function finishMinting() onlyOwner canMint public returns (bool) {\n    mintingFinished = true;\n    emit MintFinished();\n    return true;\n  }\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/RBACMintableToken.sol\n\n/**\n * @title RBACMintableToken\n * @author Vittorio Minacori (@vittominacori)\n * @dev Mintable Token, with RBAC minter permissions\n */\ncontract RBACMintableToken is MintableToken, RBAC {\n  /**\n   * A constant role name for indicating minters.\n   */\n  string public constant ROLE_MINTER = \"minter\";\n\n  /**\n   * @dev override the Mintable token modifier to add role based logic\n   */\n  modifier hasMintPermission() {\n    checkRole(msg.sender, ROLE_MINTER);\n    _;\n  }\n\n  /**\n   * @dev add a minter role to an address\n   * @param minter address\n   */\n  function addMinter(address minter) onlyOwner public {\n    addRole(minter, ROLE_MINTER);\n  }\n\n  /**\n   * @dev remove a minter role from an address\n   * @param minter address\n   */\n  function removeMinter(address minter) onlyOwner public {\n    removeRole(minter, ROLE_MINTER);\n  }\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC827/ERC827.sol\n\n/**\n * @title ERC827 interface, an extension of ERC20 token standard\n *\n * @dev Interface of a ERC827 token, following the ERC20 standard with extra\n * @dev methods to transfer value and data and execute calls in transfers and\n * @dev approvals.\n */\ncontract ERC827 is ERC20 {\n  function approveAndCall(\n    address _spender,\n    uint256 _value,\n    bytes _data\n  )\n    public\n    payable\n    returns (bool);\n\n  function transferAndCall(\n    address _to,\n    uint256 _value,\n    bytes _data\n  )\n    public\n    payable\n    returns (bool);\n\n  function transferFromAndCall(\n    address _from,\n    address _to,\n    uint256 _value,\n    bytes _data\n  )\n    public\n    payable\n    returns (bool);\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC827/ERC827Token.sol\n\n/* solium-disable security/no-low-level-calls */\n\npragma solidity ^0.4.23;\n\n\n\n\n/**\n * @title ERC827, an extension of ERC20 token standard\n *\n * @dev Implementation the ERC827, following the ERC20 standard with extra\n * @dev methods to transfer value and data and execute calls in transfers and\n * @dev approvals.\n *\n * @dev Uses OpenZeppelin StandardToken.\n */\ncontract ERC827Token is ERC827, StandardToken {\n\n  /**\n   * @dev Addition to ERC20 token methods. It allows to\n   * @dev approve the transfer of value and execute a call with the sent data.\n   *\n   * @dev Beware that changing an allowance with this method brings the risk that\n   * @dev someone may use both the old and the new allowance by unfortunate\n   * @dev transaction ordering. One possible solution to mitigate this race condition\n   * @dev is to first reduce the spender's allowance to 0 and set the desired value\n   * @dev afterwards:\n   * @dev https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * @param _spender The address that will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   * @param _data ABI-encoded contract call to call `_to` address.\n   *\n   * @return true if the call function was executed successfully\n   */\n  function approveAndCall(\n    address _spender,\n    uint256 _value,\n    bytes _data\n  )\n    public\n    payable\n    returns (bool)\n  {\n    require(_spender != address(this));\n\n    super.approve(_spender, _value);\n\n    // solium-disable-next-line security/no-call-value\n    require(_spender.call.value(msg.value)(_data));\n\n    return true;\n  }\n\n  /**\n   * @dev Addition to ERC20 token methods. Transfer tokens to a specified\n   * @dev address and execute a call with the sent data on the same transaction\n   *\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amout of tokens to be transfered\n   * @param _data ABI-encoded contract call to call `_to` address.\n   *\n   * @return true if the call function was executed successfully\n   */\n  function transferAndCall(\n    address _to,\n    uint256 _value,\n    bytes _data\n  )\n    public\n    payable\n    returns (bool)\n  {\n    require(_to != address(this));\n\n    super.transfer(_to, _value);\n\n    // solium-disable-next-line security/no-call-value\n    require(_to.call.value(msg.value)(_data));\n    return true;\n  }\n\n  /**\n   * @dev Addition to ERC20 token methods. Transfer tokens from one address to\n   * @dev another and make a contract call on the same transaction\n   *\n   * @param _from The address which you want to send tokens from\n   * @param _to The address which you want to transfer to\n   * @param _value The amout of tokens to be transferred\n   * @param _data ABI-encoded contract call to call `_to` address.\n   *\n   * @return true if the call function was executed successfully\n   */\n  function transferFromAndCall(\n    address _from,\n    address _to,\n    uint256 _value,\n    bytes _data\n  )\n    public payable returns (bool)\n  {\n    require(_to != address(this));\n\n    super.transferFrom(_from, _to, _value);\n\n    // solium-disable-next-line security/no-call-value\n    require(_to.call.value(msg.value)(_data));\n    return true;\n  }\n\n  /**\n   * @dev Addition to StandardToken methods. Increase the amount of tokens that\n   * @dev an owner allowed to a spender and execute a call with the sent data.\n   *\n   * @dev approve should be called when allowed[_spender] == 0. To increment\n   * @dev allowed value is better to use this function to avoid 2 calls (and wait until\n   * @dev the first transaction is mined)\n   * @dev From MonolithDAO Token.sol\n   *\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   * @param _data ABI-encoded contract call to call `_spender` address.\n   */\n  function increaseApprovalAndCall(\n    address _spender,\n    uint _addedValue,\n    bytes _data\n  )\n    public\n    payable\n    returns (bool)\n  {\n    require(_spender != address(this));\n\n    super.increaseApproval(_spender, _addedValue);\n\n    // solium-disable-next-line security/no-call-value\n    require(_spender.call.value(msg.value)(_data));\n\n    return true;\n  }\n\n  /**\n   * @dev Addition to StandardToken methods. Decrease the amount of tokens that\n   * @dev an owner allowed to a spender and execute a call with the sent data.\n   *\n   * @dev approve should be called when allowed[_spender] == 0. To decrement\n   * @dev allowed value is better to use this function to avoid 2 calls (and wait until\n   * @dev the first transaction is mined)\n   * @dev From MonolithDAO Token.sol\n   *\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   * @param _data ABI-encoded contract call to call `_spender` address.\n   */\n  function decreaseApprovalAndCall(\n    address _spender,\n    uint _subtractedValue,\n    bytes _data\n  )\n    public\n    payable\n    returns (bool)\n  {\n    require(_spender != address(this));\n\n    super.decreaseApproval(_spender, _subtractedValue);\n\n    // solium-disable-next-line security/no-call-value\n    require(_spender.call.value(msg.value)(_data));\n\n    return true;\n  }\n\n}\n\n// File: contracts/GastroAdvisorToken.sol\n\ncontract GastroAdvisorToken is DetailedERC20, ERC827Token, RBACMintableToken, BurnableToken {\n\n  modifier canTransfer() {\n    require(mintingFinished);\n    _;\n  }\n\n  constructor()\n  DetailedERC20(\"GastroAdvisorToken\", \"FORK\", 18)\n  public\n  {}\n\n  function transfer(address _to, uint256 _value) canTransfer public returns (bool) {\n    return super.transfer(_to, _value);\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) canTransfer public returns (bool) {\n    return super.transferFrom(_from, _to, _value);\n  }\n\n  function transferAndCall(\n    address _to,\n    uint256 _value,\n    bytes _data)\n  canTransfer public payable returns (bool)\n  {\n    return super.transferAndCall(_to, _value, _data);\n  }\n\n  function transferFromAndCall(\n    address _from,\n    address _to,\n    uint256 _value,\n    bytes _data)\n  canTransfer public payable returns (bool)\n  {\n    return super.transferFromAndCall(\n      _from,\n      _to,\n      _value,\n      _data\n    );\n  }\n\n  function transferAnyERC20Token(address _tokenAddress, uint256 _tokens) onlyOwner public returns (bool success) {\n    return ERC20Basic(_tokenAddress).transfer(owner, _tokens);\n  }\n}"
}