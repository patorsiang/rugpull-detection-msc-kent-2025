{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH29 SWAP1 DIV DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH2 JUMP JUMPDEST STOP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 DUP2 ADD PUSH1 DUP3 ADD CALLDATALOAD PUSH5 DUP2 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 DUP3 ADD GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP2 DUP5 PUSH1 DUP4 MUL DUP5 ADD GT PUSH5 DUP4 GT OR ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 DUP2 ADD DUP2 CALLDATALOAD PUSH5 DUP2 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 DUP3 ADD GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP2 DUP5 PUSH1 DUP4 MUL DUP5 ADD GT PUSH5 DUP4 GT OR ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 PUSH1 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 ADD CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 ADD CALLDATALOAD ISZERO ISZERO PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 PUSH1 PUSH1 EXP SUB PUSH1 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 ADD CALLDATALOAD ISZERO ISZERO PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 EXP SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH20 NOT AND PUSH1 PUSH1 PUSH1 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP3 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP1 SWAP2 SHA3 DUP3 MLOAD PUSH2 SWAP3 PUSH1 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD SWAP1 PUSH2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 PUSH1 MSTORE PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 DUP3 MSTORE PUSH1 SWAP2 DUP3 SWAP1 SHA3 DUP1 SLOAD PUSH1 DUP1 DUP4 ADD DUP1 SLOAD DUP7 MLOAD PUSH1 PUSH2 SWAP5 DUP4 AND ISZERO SWAP5 SWAP1 SWAP5 MUL PUSH1 NOT ADD SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP3 DIV PUSH1 DUP2 ADD DUP7 SWAP1 DIV DUP7 MUL DUP4 ADD DUP7 ADD SWAP1 SWAP7 MSTORE DUP6 DUP3 MSTORE PUSH1 SWAP1 SWAP3 AND SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 ADD SWAP1 PUSH1 ADD DUP1 DUP4 GT PUSH2 JUMPI DUP3 SWAP1 SUB PUSH1 AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 JUMPI PUSH2 DUP3 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP1 PUSH1 ADD SWAP1 PUSH1 MUL ADD MLOAD PUSH2 JUMP JUMPDEST PUSH1 ADD PUSH2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 MLOAD PUSH1 SWAP2 PUSH1 PUSH1 PUSH1 EXP SUB AND SWAP1 PUSH32 SWAP1 DUP4 SWAP1 LOG3 PUSH1 DUP1 SLOAD PUSH20 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB SWAP4 SWAP1 SWAP4 AND PUSH13 MUL PUSH1 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 DUP1 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP6 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 SWAP1 SWAP4 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD SHA3 SWAP1 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 EXP SUB AND DUP2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB SWAP2 SWAP1 SWAP2 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 DUP1 SLOAD PUSH1 NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST DUP1 PUSH2 JUMPI POP CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 AND DUP1 ISZERO PUSH2 JUMPI POP CALLER PUSH1 PUSH1 PUSH1 EXP SUB DUP4 AND EQ JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP DUP1 JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH2 DUP4 DUP6 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD DUP5 ISZERO ISZERO DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 PUSH32 SWAP2 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 LOG2 PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 DUP1 SLOAD PUSH1 NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 DUP2 DUP4 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH32 SWAP2 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 MLOAD PUSH1 PUSH1 PUSH1 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 SWAP1 PUSH1 SWAP1 LOG3 PUSH1 DUP1 SLOAD PUSH20 NOT AND PUSH1 PUSH1 PUSH1 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 PUSH1 ADD PUSH1 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 LT PUSH2 JUMPI DUP1 MLOAD PUSH1 NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 ADD SWAP2 SWAP1 PUSH1 ADD SWAP1 PUSH2 JUMP JUMPDEST POP PUSH2 SWAP3 SWAP2 POP PUSH2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP2 SSTORE PUSH1 ADD PUSH2 JUMP UNKNOWN_0xfe LOG1 PUSH6 SHA3 UNKNOWN_0xbd POP RETURN UNKNOWN_0xce ADD PUSH12 CODECOPY DUP15 UNKNOWN_0xf UNKNOWN_0x28 UNOFFICIAL_PUSH SAR SIGNEXTEND DUP9 UNKNOWN_0xac UNKNOWN_0xf7 CALLDATASIZE SSTORE ISZERO UNKNOWN_0xc2 STOP UNKNOWN_0x29",
  "opcode_entropy": 4.845614549915102,
  "opcode_count": 1625,
  "unique_opcodes": 71,
  "byte_entropy": 5.835633398999365,
  "byte_60": 0.09938650306748466,
  "byte_80": 0.043353783231083846,
  "byte_40": 0.011042944785276074,
  "byte_52": 0.016768916155419224,
  "byte_34": 0.001226993865030675,
  "byte_15": 0.025766871165644172,
  "byte_61": 0.05030674846625767,
  "byte_00": 0.04703476482617587,
  "byte_10": 0.006952965235173824,
  "byte_57": 0.023721881390593048,
  "byte_fd": 0.011451942740286299,
  "byte_5b": 0.03885480572597137,
  "byte_50": 0.024130879345603273,
  "byte_04": 0.012678936605316974,
  "byte_36": 0.0049079754601227,
  "byte_01": 0.053987730061349694,
  "byte_07": 0.010224948875255624,
  "byte_35": 0.007770961145194274,
  "byte_7c": 0.00040899795501022495,
  "byte_90": 0.044989775051124746,
  "byte_63": 0.006952965235173824,
  "byte_8d": 0.0008179959100204499,
  "byte_a5": 0.001226993865030675,
  "byte_cb": 0.0008179959100204499,
  "byte_11": 0.0057259713701431495,
  "byte_a9": 0.0008179959100204499,
  "byte_cc": 0.0008179959100204499,
  "byte_db": 0.001226993865030675,
  "byte_3f": 0.0008179959100204499,
  "byte_45": 0.0008179959100204499,
  "byte_83": 0.013087934560327199,
  "byte_14": 0.007361963190184049,
  "byte_03": 0.025766871165644172,
  "byte_e1": 0.00040899795501022495,
  "byte_de": 0.001226993865030675,
  "byte_0f": 0.0016359918200408998,
  "byte_2b": 0.0008179959100204499,
  "byte_49": 0.0016359918200408998,
  "byte_e9": 0.00040899795501022495,
  "byte_eb": 0.0008179959100204499,
  "byte_f0": 0.0008179959100204499,
  "byte_56": 0.022085889570552148,
  "byte_e3": 0.0016359918200408998,
  "byte_17": 0.0036809815950920245,
  "byte_f2": 0.001226993865030675,
  "byte_8b": 0.001226993865030675,
  "byte_4b": 0.0008179959100204499,
  "byte_ad": 0.00040899795501022495,
  "byte_8f": 0.00040899795501022495,
  "byte_32": 0.0036809815950920245,
  "byte_d5": 0.00040899795501022495,
  "byte_9b": 0.001226993865030675,
  "byte_d1": 0.00040899795501022495,
  "byte_a7": 0.00040899795501022495,
  "byte_b3": 0.0016359918200408998,
  "byte_d9": 0.00040899795501022495,
  "byte_5d": 0.0008179959100204499,
  "byte_42": 0.0008179959100204499,
  "byte_b2": 0.0008179959100204499,
  "byte_b9": 0.0008179959100204499,
  "byte_e5": 0.0008179959100204499,
  "byte_02": 0.0212678936605317,
  "byte_1b": 0.001226993865030675,
  "byte_6c": 0.0008179959100204499,
  "byte_20": 0.025357873210633947,
  "byte_4f": 0.0008179959100204499,
  "byte_d7": 0.0032719836400817996,
  "byte_c4": 0.0008179959100204499,
  "byte_71": 0.0008179959100204499,
  "byte_18": 0.0016359918200408998,
  "byte_a6": 0.00040899795501022495,
  "byte_67": 0.0008179959100204499,
  "byte_7b": 0.00040899795501022495,
  "byte_da": 0.002044989775051125,
  "byte_6f": 0.0016359918200408998,
  "byte_53": 0.0016359918200408998,
  "byte_c3": 0.0008179959100204499,
  "byte_0c": 0.001226993865030675,
  "byte_2d": 0.0008179959100204499,
  "byte_ba": 0.0008179959100204499,
  "byte_8c": 0.001226993865030675,
  "byte_8a": 0.00040899795501022495,
  "byte_93": 0.004498977505112475,
  "byte_e8": 0.0008179959100204499,
  "byte_ea": 0.00040899795501022495,
  "byte_81": 0.027402862985685072,
  "byte_22": 0.001226993865030675,
  "byte_a0": 0.0081799591002045,
  "byte_0a": 0.009406952965235174,
  "byte_16": 0.016359918200409,
  "byte_4a": 0.00040899795501022495,
  "byte_82": 0.015950920245398775,
  "byte_91": 0.020858895705521473,
  "byte_64": 0.00245398773006135,
  "byte_75": 0.0008179959100204499,
  "byte_87": 0.0008179959100204499,
  "byte_84": 0.0057259713701431495,
  "byte_1f": 0.0036809815950920245,
  "byte_51": 0.012678936605316974,
  "byte_92": 0.00899795501022495,
  "byte_37": 0.002044989775051125,
  "byte_95": 0.001226993865030675,
  "byte_94": 0.0028629856850715747,
  "byte_fa": 0.0008179959100204499,
  "byte_f3": 0.00245398773006135,
  "byte_41": 0.00040899795501022495,
  "byte_31": 0.0008179959100204499,
  "byte_05": 0.00408997955010225,
  "byte_88": 0.001226993865030675,
  "byte_70": 0.0008179959100204499,
  "byte_b5": 0.001226993865030675,
  "byte_19": 0.004498977505112475,
  "byte_f5": 0.0008179959100204499,
  "byte_29": 0.0008179959100204499,
  "byte_bd": 0.001226993865030675,
  "byte_06": 0.008588957055214725,
  "byte_13": 0.001226993865030675,
  "byte_85": 0.0032719836400817996,
  "byte_7d": 0.001226993865030675,
  "byte_c7": 0.00040899795501022495,
  "byte_ee": 0.00040899795501022495,
  "byte_ff": 0.027811860940695297,
  "byte_3b": 0.0008179959100204499,
  "byte_79": 0.001226993865030675,
  "byte_54": 0.0081799591002045,
  "byte_73": 0.001226993865030675,
  "byte_55": 0.004498977505112475,
  "byte_bb": 0.00040899795501022495,
  "byte_c6": 0.00040899795501022495,
  "byte_08": 0.0028629856850715747,
  "byte_c9": 0.00040899795501022495,
  "byte_86": 0.0016359918200408998,
  "byte_96": 0.0008179959100204499,
  "byte_33": 0.002044989775051125,
  "byte_f8": 0.0008179959100204499,
  "byte_fe": 0.0016359918200408998,
  "byte_26": 0.00040899795501022495,
  "byte_7f": 0.00245398773006135,
  "byte_e0": 0.002044989775051125,
  "byte_9c": 0.0008179959100204499,
  "byte_59": 0.0008179959100204499,
  "byte_44": 0.0008179959100204499,
  "byte_cd": 0.0008179959100204499,
  "byte_d0": 0.0008179959100204499,
  "byte_a4": 0.0008179959100204499,
  "byte_97": 0.0008179959100204499,
  "byte_a3": 0.00245398773006135,
  "byte_af": 0.0008179959100204499,
  "byte_b4": 0.0008179959100204499,
  "byte_6b": 0.001226993865030675,
  "byte_43": 0.001226993865030675,
  "byte_6e": 0.00040899795501022495,
  "byte_21": 0.00040899795501022495,
  "byte_c0": 0.0008179959100204499,
  "byte_d2": 0.0008179959100204499,
  "byte_76": 0.00040899795501022495,
  "byte_12": 0.0008179959100204499,
  "byte_99": 0.00040899795501022495,
  "byte_62": 0.0008179959100204499,
  "byte_f6": 0.0008179959100204499,
  "byte_4e": 0.00040899795501022495,
  "byte_a2": 0.00040899795501022495,
  "byte_5e": 0.00040899795501022495,
  "byte_7e": 0.0008179959100204499,
  "byte_09": 0.00408997955010225,
  "byte_df": 0.00040899795501022495,
  "byte_d4": 0.0008179959100204499,
  "byte_39": 0.001226993865030675,
  "byte_3d": 0.0008179959100204499,
  "byte_1c": 0.001226993865030675,
  "byte_2a": 0.00040899795501022495,
  "byte_2c": 0.00040899795501022495,
  "byte_47": 0.00040899795501022495,
  "byte_4d": 0.00040899795501022495,
  "byte_a1": 0.00040899795501022495,
  "byte_65": 0.0008179959100204499,
  "byte_7a": 0.0008179959100204499,
  "byte_72": 0.00040899795501022495,
  "byte_30": 0.00040899795501022495,
  "byte_58": 0.00040899795501022495,
  "byte_ce": 0.00040899795501022495,
  "byte_f4": 0.00040899795501022495,
  "byte_e4": 0.00040899795501022495,
  "byte_8e": 0.00040899795501022495,
  "byte_28": 0.00040899795501022495,
  "byte_b0": 0.00040899795501022495,
  "byte_1d": 0.00040899795501022495,
  "byte_0b": 0.00040899795501022495,
  "byte_ac": 0.00040899795501022495,
  "byte_f7": 0.00040899795501022495,
  "byte_c2": 0.00040899795501022495,
  "num_nodes": 2,
  "num_edges": 1,
  "avg_degree": 1.0,
  "density": 0.5,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 6,
  "event_nums": 12,
  "creation_block": 7317439,
  "creation_timestamp": 1551897462,
  "life_time": 141428.0,
  "duration_seconds": 1904118.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 3,
  "num_buyers": 1,
  "num_sellers": 1,
  "num_creator_transfers": 0,
  "buy_amt": 0,
  "sell_amt": 0.0,
  "avg_value": 0.0,
  "txn_per_block": 4.242411386632162e-05,
  "avg_gas_limit": 450958.6666666667,
  "std_gas_limit": 916438.75192793,
  "avg_gas_used": 159387.0,
  "std_gas_used": 264660.87128877465,
  "avg_gas_price": 6166666666.666667,
  "std_gas_price": 6439893028.787219,
  "ownershiptransferred_num": 1,
  "certificate_num": 11,
  "atinversebrah_num": 1,
  "setcertifierid_num": 1,
  "setcertifierstatus_num": 1,
  "certifymany_num": 3,
  "timeline_sequence": [
    [
      7317439,
      1551897462,
      23,
      55,
      0,
      2500000,
      20000000000,
      0,
      1,
      2173874,
      750570,
      15803486
    ],
    [
      7317492,
      1551898344,
      24,
      14,
      0,
      45709,
      5000000000,
      0,
      1,
      1091429,
      45709,
      15803433
    ],
    [
      7317494,
      1551898370,
      25,
      3,
      0,
      43922,
      5000000000,
      0,
      1,
      386978,
      43922,
      15803431
    ],
    [
      7317505,
      1551898475,
      26,
      76,
      0,
      62217,
      5000000000,
      0,
      1,
      4224681,
      62217,
      15803420
    ],
    [
      7458783,
      1553800467,
      27,
      84,
      0,
      26952,
      1000000000,
      0,
      1,
      7972459,
      26952,
      15662142
    ],
    [
      7458867,
      1553801580,
      28,
      101,
      0,
      26952,
      1000000000,
      0,
      1,
      7713262,
      26952,
      15662058
    ]
  ],
  "sourcecode": "pragma solidity ^0.5.0;\n\n// File: openzeppelin-solidity/contracts/ownership/Ownable.sol\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @return the address of the owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner());\n        _;\n    }\n\n    /**\n     * @return true if `msg.sender` is the owner of the contract.\n     */\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    /**\n     * @dev Allows the current owner to relinquish control of the contract.\n     * @notice Renouncing to ownership will leave the contract without an owner.\n     * It will not be possible to call the functions with the `onlyOwner`\n     * modifier anymore.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n// File: contracts/Certification.sol\n\ncontract ICertification {\n  event Certificate(bytes32 indexed certHash, bytes32 innerHash, address indexed certifier);\n  event Revocation(bytes32 indexed certHash, bool invalid);  \n  address public newAddress;\n  uint public genesis;\n}\n\ncontract Certification is ICertification, Ownable {\n\n  struct Certifier {\n    bool valid;\n    string id;\n  }\n\n  mapping (address => Certifier) public certifiers;  \n  mapping (bytes32 => bool) public revoked;  \n\n  constructor() public {\n    genesis = block.number;\n  }\n\n  function setCertifierStatus(address certifier, bool valid)\n  onlyOwner public {\n    certifiers[certifier].valid = valid;\n  }\n\n  function setCertifierId(address certifier, string memory id)\n  onlyOwner public {\n    certifiers[certifier].id = id;\n  }\n\n  function computeCertHash(address certifier, bytes32 innerHash)\n  pure public returns (bytes32) {\n    return keccak256(abi.encodePacked(certifier, innerHash));\n  }\n\n  function _certify(bytes32 innerHash) internal {\n    emit Certificate(\n      computeCertHash(msg.sender, innerHash),\n      innerHash, msg.sender\n    );\n  }\n\n  function certifyMany(bytes32[] memory innerHashes) public {\n    require(certifiers[msg.sender].valid);\n    for(uint i = 0; i < innerHashes.length; i++) {\n      _certify(innerHashes[i]);\n    }\n  }\n\n  function revoke(bytes32 innerHash, address certifier, bool invalid) public {\n    require(isOwner() || (certifiers[msg.sender].valid && msg.sender == certifier && invalid));\n    bytes32 certHash = computeCertHash(certifier, innerHash);\n    emit Revocation(certHash, invalid);\n    revoked[certHash] = invalid;\n  }\n\n  function deprecate(address _newAddress) public onlyOwner {\n    newAddress = _newAddress;\n  }\n\n}"
}