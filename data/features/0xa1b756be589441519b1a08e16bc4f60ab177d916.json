{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH1 SHR DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 ADD PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 ADD CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST STOP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 ADD CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 ADD CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 ADD CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 ADD CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 ADD CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 RETURN JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 ADD CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 ADD CALLDATALOAD PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 ADD CALLDATALOAD AND PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH2 JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 PUSH1 NOT PUSH2 PUSH1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 ADD SWAP1 PUSH1 ADD DUP1 DUP4 GT PUSH2 JUMPI DUP3 SWAP1 SUB PUSH1 AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP4 DUP4 PUSH2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 MLOAD PUSH1 PUSH1 SHL PUSH4 MUL DUP2 MSTORE ADDRESS PUSH1 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 SWAP2 PUSH1 PUSH1 PUSH1 SHL SUB DUP5 AND SWAP2 PUSH4 SWAP2 PUSH1 DUP1 DUP3 ADD SWAP3 PUSH1 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 PUSH2 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP5 AND SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 DUP4 PUSH2 DUP2 PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP4 PUSH2 DUP2 PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP7 DUP7 DUP7 PUSH2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 AND SWAP1 JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP4 DUP4 PUSH2 JUMP JUMPDEST PUSH1 SLOAD PUSH1 DUP1 MLOAD PUSH1 PUSH1 SHL PUSH4 MUL DUP2 MSTORE PUSH1 PUSH1 PUSH1 SHL SUB DUP5 DUP2 AND PUSH1 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH4 SWAP2 PUSH1 DUP1 DUP3 ADD SWAP3 PUSH1 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 CALLER PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 NOT AND SWAP1 SSTORE PUSH1 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH32 SWAP2 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 DUP3 PUSH2 DUP2 PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP5 DUP5 PUSH2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 CALLER PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 CALLER DUP3 PUSH2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SLOAD PUSH1 AND SWAP1 JUMP JUMPDEST PUSH2 CALLER PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 PUSH2 DUP2 PUSH2 JUMP JUMPDEST ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP4 DUP4 PUSH2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 CALLER PUSH2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 MLOAD PUSH1 SWAP2 PUSH1 PUSH1 PUSH1 SHL SUB AND SWAP1 PUSH32 SWAP1 DUP4 SWAP1 LOG3 PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 CALLER PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP3 DUP3 PUSH2 JUMP JUMPDEST PUSH2 CALLER PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST PUSH2 CALLER PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 NOT AND PUSH1 OR SWAP1 SSTORE PUSH1 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH32 SWAP2 DUP2 SWAP1 SUB PUSH1 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB NOT AND PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 MLOAD PUSH32 SWAP1 PUSH1 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP1 MLOAD PUSH1 PUSH1 PUSH1 PUSH1 NOT PUSH2 DUP8 DUP10 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST PUSH2 CALLER PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST PUSH2 CALLER PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 MLOAD CALLER SWAP1 ADDRESS BALANCE DUP1 ISZERO PUSH2 MUL SWAP2 PUSH1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP4 DUP4 PUSH2 JUMP JUMPDEST PUSH1 CALLER PUSH2 DUP2 PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP4 PUSH2 DUP2 PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP6 DUP6 PUSH2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 PUSH2 PUSH1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB SWAP2 DUP3 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SHA3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 CALLER PUSH2 JUMP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST PUSH2 CALLER PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST CALLER PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 SHA3 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH4 DUP4 DUP4 PUSH1 MLOAD DUP4 PUSH4 AND PUSH1 SHL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH1 PUSH1 PUSH1 SHL SUB AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP PUSH1 MLOAD RETURNDATASIZE PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP5 DUP5 DUP5 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SHA3 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST CALLER PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 SHA3 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP2 SWAP4 PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH2 CALLER PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP4 DUP4 PUSH2 JUMP JUMPDEST POP PUSH1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SSTORE PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH1 AND SWAP1 JUMP JUMPDEST PUSH2 PUSH1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 MLOAD PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND SWAP1 PUSH32 SWAP1 PUSH1 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SHA3 SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SHA3 SSTORE PUSH2 DUP3 DUP3 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 SHA3 SLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 PUSH1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 MLOAD PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND SWAP1 PUSH32 SWAP1 PUSH1 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 PUSH1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 MLOAD PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND SWAP1 PUSH32 SWAP1 PUSH1 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 PUSH1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 MLOAD PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND SWAP1 PUSH32 SWAP1 PUSH1 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST CALLER PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 PUSH1 PUSH1 PUSH1 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SHA3 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SLOAD PUSH1 SWAP1 PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP4 DUP4 PUSH2 JUMP JUMPDEST PUSH2 PUSH1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 MLOAD PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND SWAP1 PUSH32 SWAP1 PUSH1 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP2 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH1 MLOAD PUSH1 PUSH1 PUSH1 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 SWAP1 PUSH1 SWAP1 LOG3 PUSH1 DUP1 SLOAD PUSH1 PUSH1 PUSH1 SHL SUB NOT AND PUSH1 PUSH1 PUSH1 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 PUSH1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 MLOAD PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND SWAP1 PUSH32 SWAP1 PUSH1 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 SHA3 SLOAD PUSH2 SWAP1 DUP4 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP6 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SHA3 SSTORE PUSH2 DUP5 DUP5 DUP5 PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP5 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 SHA3 SLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH1 DUP1 MLOAD PUSH1 PUSH2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 SSTORE PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 DUP1 DUP4 SHA3 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 DUP3 DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP2 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP3 DUP3 PUSH2 JUMP JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 SWAP1 SHA3 DUP1 SLOAD PUSH1 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP2 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP3 DUP3 PUSH2 JUMP JUMPDEST ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 SWAP1 SHA3 DUP1 SLOAD PUSH1 NOT AND PUSH1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 PUSH2 CALLER DUP5 DUP5 JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP3 AND PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP4 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 SWAP1 SHA3 SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP1 DUP6 AND PUSH1 SWAP1 DUP2 MSTORE PUSH1 PUSH1 MSTORE PUSH1 DUP1 DUP3 SHA3 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE SHA3 SLOAD PUSH2 SWAP1 DUP3 PUSH4 PUSH2 AND JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SHL SUB DUP1 DUP5 AND PUSH1 DUP2 DUP2 MSTORE PUSH1 PUSH1 SWAP1 DUP2 MSTORE PUSH1 SWAP2 DUP3 SWAP1 SHA3 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP UNKNOWN_0xfe DUP13 JUMPDEST UNKNOWN_0xe1 UNKNOWN_0xe5 UNKNOWN_0xeb UNKNOWN_0xec PUSH30 PUSH19 PUSH16 UNKNOWN_0x29",
  "opcode_entropy": 4.704807930306115,
  "opcode_count": 3680,
  "unique_opcodes": 73,
  "byte_entropy": 6.105968833144754,
  "byte_60": 0.10824831402386305,
  "byte_80": 0.03804253847484005,
  "byte_40": 0.01072107902472765,
  "byte_52": 0.019021269237420025,
  "byte_34": 0.0005187618882932734,
  "byte_15": 0.012104444060176378,
  "byte_61": 0.06034929967145081,
  "byte_00": 0.027148538820681307,
  "byte_10": 0.00760850769496801,
  "byte_57": 0.022306761196610757,
  "byte_fd": 0.013660729725056199,
  "byte_5b": 0.04253847484004842,
  "byte_50": 0.022652602455472938,
  "byte_04": 0.012969047207331835,
  "byte_36": 0.004150095106346187,
  "byte_02": 0.007954348953830192,
  "byte_1c": 0.0020750475531730937,
  "byte_35": 0.006398063288950372,
  "byte_e0": 0.0017292062943109112,
  "byte_63": 0.012796126577900744,
  "byte_79": 0.0008646031471554556,
  "byte_cc": 0.0017292062943109112,
  "byte_67": 0.0008646031471554556,
  "byte_90": 0.039080062251426594,
  "byte_11": 0.003631333218052914,
  "byte_01": 0.039944665398582054,
  "byte_25": 0.0008646031471554556,
  "byte_98": 0.0012104444060176379,
  "byte_65": 0.0012104444060176379,
  "byte_75": 0.0010375237765865469,
  "byte_ad": 0.0010375237765865469,
  "byte_aa": 0.0015562856648798202,
  "byte_27": 0.0010375237765865469,
  "byte_1e": 0.0008646031471554556,
  "byte_1a": 0.0006916825177243646,
  "byte_7c": 0.0006916825177243646,
  "byte_14": 0.01054815839529656,
  "byte_06": 0.0031125713297596403,
  "byte_17": 0.0015562856648798202,
  "byte_dd": 0.0017292062943109112,
  "byte_62": 0.0006916825177243646,
  "byte_ed": 0.0003458412588621823,
  "byte_3e": 0.0010375237765865469,
  "byte_3d": 0.0032854919591907314,
  "byte_e9": 0.0005187618882932734,
  "byte_ec": 0.0006916825177243646,
  "byte_9e": 0.0005187618882932734,
  "byte_8b": 0.0006916825177243646,
  "byte_6b": 0.0013833650354487291,
  "byte_f2": 0.0013833650354487291,
  "byte_e3": 0.0008646031471554556,
  "byte_73": 0.0003458412588621823,
  "byte_f4": 0.0012104444060176379,
  "byte_46": 0.0013833650354487291,
  "byte_37": 0.0008646031471554556,
  "byte_ba": 0.0005187618882932734,
  "byte_99": 0.0005187618882932734,
  "byte_56": 0.026975618191250217,
  "byte_05": 0.0044959363652083695,
  "byte_af": 0.0008646031471554556,
  "byte_9f": 0.0006916825177243646,
  "byte_72": 0.0020750475531730937,
  "byte_b7": 0.0003458412588621823,
  "byte_a4": 0.0006916825177243646,
  "byte_c2": 0.0010375237765865469,
  "byte_d7": 0.0008646031471554556,
  "byte_bf": 0.0012104444060176379,
  "byte_a9": 0.0008646031471554556,
  "byte_9c": 0.0010375237765865469,
  "byte_bb": 0.0013833650354487291,
  "byte_eb": 0.0008646031471554556,
  "byte_8d": 0.0012104444060176379,
  "byte_a5": 0.0006916825177243646,
  "byte_cb": 0.0005187618882932734,
  "byte_4d": 0.0006916825177243646,
  "byte_8f": 0.0006916825177243646,
  "byte_32": 0.00017292062943109114,
  "byte_d5": 0.0008646031471554556,
  "byte_9b": 0.0008646031471554556,
  "byte_71": 0.0005187618882932734,
  "byte_93": 0.003977174476915096,
  "byte_e5": 0.0006916825177243646,
  "byte_9d": 0.0003458412588621823,
  "byte_c1": 0.0008646031471554556,
  "byte_95": 0.0015562856648798202,
  "byte_d8": 0.0003458412588621823,
  "byte_41": 0.0005187618882932734,
  "byte_81": 0.02766730070897458,
  "byte_3b": 0.0010375237765865469,
  "byte_2d": 0.0010375237765865469,
  "byte_89": 0.0008646031471554556,
  "byte_cd": 0.0010375237765865469,
  "byte_82": 0.012969047207331835,
  "byte_dc": 0.00017292062943109114,
  "byte_c4": 0.0008646031471554556,
  "byte_f9": 0.00017292062943109114,
  "byte_84": 0.005014698253501643,
  "byte_59": 0.0012104444060176379,
  "byte_1f": 0.0024208888120352758,
  "byte_85": 0.0027667300708974583,
  "byte_4c": 0.0013833650354487291,
  "byte_ff": 0.017810824831402387,
  "byte_2f": 0.00017292062943109114,
  "byte_0f": 0.0032854919591907314,
  "byte_19": 0.002593809441466367,
  "byte_a8": 0.0005187618882932734,
  "byte_5c": 0.0005187618882932734,
  "byte_97": 0.0008646031471554556,
  "byte_5a": 0.0020750475531730937,
  "byte_77": 0.0003458412588621823,
  "byte_e7": 0.0006916825177243646,
  "byte_74": 0.0006916825177243646,
  "byte_6e": 0.0003458412588621823,
  "byte_f8": 0.0003458412588621823,
  "byte_d6": 0.00017292062943109114,
  "byte_6d": 0.0005187618882932734,
  "byte_70": 0.0006916825177243646,
  "byte_a0": 0.014006570983918382,
  "byte_31": 0.0013833650354487291,
  "byte_18": 0.0008646031471554556,
  "byte_a6": 0.00017292062943109114,
  "byte_c5": 0.00017292062943109114,
  "byte_03": 0.027840221338405673,
  "byte_ce": 0.0006916825177243646,
  "byte_42": 0.0008646031471554556,
  "byte_96": 0.0003458412588621823,
  "byte_6c": 0.0005187618882932734,
  "byte_68": 0.0010375237765865469,
  "byte_fa": 0.0006916825177243646,
  "byte_43": 0.00017292062943109114,
  "byte_4a": 0.0006916825177243646,
  "byte_fb": 0.00017292062943109114,
  "byte_f6": 0.0003458412588621823,
  "byte_8e": 0.0003458412588621823,
  "byte_23": 0.0012104444060176379,
  "byte_b8": 0.0003458412588621823,
  "byte_ef": 0.0019021269237420025,
  "byte_20": 0.019712951755144387,
  "byte_3c": 0.0005187618882932734,
  "byte_39": 0.0013833650354487291,
  "byte_51": 0.011239840913020924,
  "byte_3a": 0.0006916825177243646,
  "byte_f3": 0.0017292062943109112,
  "byte_2a": 0.0012104444060176379,
  "byte_3f": 0.00017292062943109114,
  "byte_4b": 0.0015562856648798202,
  "byte_c6": 0.0005187618882932734,
  "byte_de": 0.0003458412588621823,
  "byte_21": 0.0003458412588621823,
  "byte_09": 0.006743904547812554,
  "byte_5e": 0.0006916825177243646,
  "byte_a7": 0.0010375237765865469,
  "byte_b3": 0.0008646031471554556,
  "byte_c3": 0.0006916825177243646,
  "byte_16": 0.023690126232059485,
  "byte_0d": 0.0022479681826041847,
  "byte_29": 0.0017292062943109112,
  "byte_83": 0.014179491613349473,
  "byte_91": 0.012623205948469652,
  "byte_92": 0.008646031471554556,
  "byte_0a": 0.0055334601417949165,
  "byte_ca": 0.0022479681826041847,
  "byte_b4": 0.0008646031471554556,
  "byte_1b": 0.014352412242780563,
  "byte_07": 0.005879301400657099,
  "byte_55": 0.003631333218052914,
  "byte_0e": 0.0022479681826041847,
  "byte_08": 0.0048417776240705515,
  "byte_2b": 0.0008646031471554556,
  "byte_8a": 0.0010375237765865469,
  "byte_b6": 0.0006916825177243646,
  "byte_94": 0.003631333218052914,
  "byte_e4": 0.0003458412588621823,
  "byte_7a": 0.0005187618882932734,
  "byte_a1": 0.0020750475531730937,
  "byte_c0": 0.0015562856648798202,
  "byte_53": 0.0010375237765865469,
  "byte_d9": 0.0012104444060176379,
  "byte_f5": 0.0015562856648798202,
  "byte_b5": 0.0006916825177243646,
  "byte_ab": 0.00017292062943109114,
  "byte_c7": 0.0008646031471554556,
  "byte_e2": 0.0006916825177243646,
  "byte_0b": 0.0031125713297596403,
  "byte_b0": 0.0019021269237420025,
  "byte_d0": 0.0010375237765865469,
  "byte_0c": 0.0034584125886218224,
  "byte_30": 0.0008646031471554556,
  "byte_54": 0.008300190212692375,
  "byte_ea": 0.0015562856648798202,
  "byte_28": 0.0008646031471554556,
  "byte_88": 0.0010375237765865469,
  "byte_2e": 0.0003458412588621823,
  "byte_66": 0.0003458412588621823,
  "byte_24": 0.0005187618882932734,
  "byte_86": 0.0017292062943109112,
  "byte_64": 0.0010375237765865469,
  "byte_e8": 0.0003458412588621823,
  "byte_fc": 0.0012104444060176379,
  "byte_12": 0.0013833650354487291,
  "byte_33": 0.006052222030088189,
  "byte_2c": 0.0005187618882932734,
  "byte_7f": 0.0029396507003285493,
  "byte_5d": 0.0003458412588621823,
  "byte_b9": 0.0008646031471554556,
  "byte_ee": 0.00017292062943109114,
  "byte_49": 0.0005187618882932734,
  "byte_e6": 0.00017292062943109114,
  "byte_d2": 0.0003458412588621823,
  "byte_44": 0.0010375237765865469,
  "byte_4e": 0.0010375237765865469,
  "byte_7b": 0.0003458412588621823,
  "byte_d3": 0.0008646031471554556,
  "byte_bd": 0.0017292062943109112,
  "byte_fe": 0.0006916825177243646,
  "byte_58": 0.0006916825177243646,
  "byte_13": 0.0012104444060176379,
  "byte_22": 0.0006916825177243646,
  "byte_a3": 0.0020750475531730937,
  "byte_da": 0.0003458412588621823,
  "byte_6f": 0.0005187618882932734,
  "byte_8c": 0.0006916825177243646,
  "byte_be": 0.00017292062943109114,
  "byte_c9": 0.00017292062943109114,
  "byte_f7": 0.0006916825177243646,
  "byte_47": 0.00017292062943109114,
  "byte_db": 0.0005187618882932734,
  "byte_a2": 0.0019021269237420025,
  "byte_b1": 0.00017292062943109114,
  "byte_df": 0.0003458412588621823,
  "byte_7e": 0.0006916825177243646,
  "byte_d1": 0.0003458412588621823,
  "byte_87": 0.0012104444060176379,
  "byte_ac": 0.00017292062943109114,
  "byte_f1": 0.0010375237765865469,
  "byte_e1": 0.0013833650354487291,
  "byte_78": 0.0003458412588621823,
  "byte_c8": 0.0006916825177243646,
  "byte_69": 0.0006916825177243646,
  "byte_26": 0.0003458412588621823,
  "byte_f0": 0.00017292062943109114,
  "byte_6a": 0.00017292062943109114,
  "byte_d4": 0.0003458412588621823,
  "byte_4f": 0.0005187618882932734,
  "byte_48": 0.0003458412588621823,
  "byte_45": 0.00017292062943109114,
  "byte_bc": 0.00017292062943109114,
  "byte_7d": 0.0003458412588621823,
  "byte_b2": 0.00017292062943109114,
  "num_nodes": 6,
  "num_edges": 5,
  "avg_degree": 1.6666666666666667,
  "density": 0.16666666666666666,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 12,
  "event_nums": 17,
  "creation_block": 7371666,
  "creation_timestamp": 1552626958,
  "life_time": 45549.0,
  "duration_seconds": 612919.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 7,
  "num_buyers": 1,
  "num_sellers": 5,
  "num_creator_transfers": 0,
  "buy_amt": 0,
  "sell_amt": 0.0,
  "avg_value": 0.0,
  "txn_per_block": 0.00026344676180021956,
  "avg_gas_limit": 385197.1666666667,
  "std_gas_limit": 977724.9915432794,
  "avg_gas_used": 191411.91666666666,
  "std_gas_used": 489276.5429271498,
  "avg_gas_price": 2187500000.0,
  "std_gas_price": 963527589.9872648,
  "pauseradded_num": 2,
  "burneradded_num": 2,
  "minteradded_num": 2,
  "ownershiptransferred_num": 1,
  "whitelistchanged_num": 1,
  "paused_num": 1,
  "unpaused_num": 1,
  "transfer_num": 4,
  "atinversebrah_num": 1,
  "addpauser_num": 1,
  "addminter_num": 1,
  "addburner_num": 1,
  "setwhitelist_num": 1,
  "pause_num": 1,
  "unpause_num": 1,
  "mint_num": 2,
  "approve_num": 1,
  "burnfrom_num": 2,
  "timeline_sequence": [
    [
      7371666,
      1552626958,
      7,
      46,
      0,
      3627434,
      2000000000,
      0,
      1,
      4425116,
      1813717,
      15749264
    ],
    [
      7371732,
      1552627793,
      8,
      74,
      0,
      90710,
      2000000000,
      0,
      1,
      7188503,
      45355,
      15749198
    ],
    [
      7371732,
      1552627793,
      9,
      75,
      0,
      90840,
      2000000000,
      0,
      1,
      7233923,
      45420,
      15749198
    ],
    [
      7371734,
      1552627803,
      10,
      106,
      0,
      90838,
      2000000000,
      0,
      1,
      6982161,
      45419,
      15749196
    ],
    [
      7371761,
      1552628227,
      11,
      146,
      0,
      89342,
      3000000000,
      0,
      1,
      7732836,
      44671,
      15749169
    ],
    [
      7371933,
      1552630728,
      0,
      47,
      0,
      86892,
      1250000000,
      0,
      1,
      3154337,
      43446,
      15748997
    ],
    [
      7371941,
      1552630782,
      1,
      117,
      0,
      56962,
      2000000000,
      0,
      1,
      5978969,
      14241,
      15748989
    ],
    [
      7371942,
      1552630814,
      0,
      96,
      0,
      138414,
      2000000000,
      0,
      1,
      4647932,
      69207,
      15748988
    ],
    [
      7371984,
      1552631271,
      0,
      70,
      0,
      95100,
      1000000000,
      0,
      1,
      4026914,
      47550,
      15748946
    ],
    [
      7371988,
      1552631299,
      0,
      81,
      0,
      88646,
      2000000000,
      0,
      1,
      5072053,
      44323,
      15748942
    ],
    [
      7372004,
      1552631526,
      1,
      82,
      0,
      78414,
      2000000000,
      0,
      1,
      3525978,
      39207,
      15748926
    ],
    [
      7417215,
      1553239877,
      1,
      192,
      0,
      88774,
      5000000000,
      0,
      1,
      7824694,
      44387,
      15703715
    ]
  ],
  "sourcecode": "// File: openzeppelin-solidity/contracts/math/SafeMath.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title SafeMath\n * @dev Unsigned math operations with safety checks that revert on error\n */\nlibrary SafeMath {\n    /**\n    * @dev Multiplies two unsigned integers, reverts on overflow.\n    */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b);\n\n        return c;\n    }\n\n    /**\n    * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\n    */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n    * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n    * @dev Adds two unsigned integers, reverts on overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n\n        return c;\n    }\n\n    /**\n    * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\n    * reverts when dividing by zero.\n    */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ninterface IERC20 {\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address who) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\n\npragma solidity ^0.5.0;\n\n\n/**\n * @title ERC20Detailed token\n * @dev The decimals are only for visualization purposes.\n * All the operations are done using the smallest and indivisible token unit,\n * just as on Ethereum all the operations are done in wei.\n */\ncontract ERC20Detailed is IERC20 {\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\n\n    /**\n     * @return the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @return the symbol of the token.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @return the number of decimals of the token.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\n\npragma solidity ^0.5.0;\n\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\n * Originally based on code by FirstBlood:\n * https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n *\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\n * all accounts just by listening to said events. Note that this isn't required by the specification, and other\n * compliant implementations may not do it.\n */\ncontract ERC20 is IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowed;\n\n    uint256 private _totalSupply;\n\n    /**\n    * @dev Total number of tokens in existence\n    */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param owner The address to query the balance of.\n    * @return An uint256 representing the amount owned by the passed address.\n    */\n    function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }\n\n    /**\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\n     * @param owner address The address which owns the funds.\n     * @param spender address The address which will spend the funds.\n     * @return A uint256 specifying the amount of tokens still available for the spender.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowed[owner][spender];\n    }\n\n    /**\n    * @dev Transfer token for a specified address\n    * @param to The address to transfer to.\n    * @param value The amount to be transferred.\n    */\n    function transfer(address to, uint256 value) public returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     */\n    function approve(address spender, uint256 value) public returns (bool) {\n        require(spender != address(0));\n\n        _allowed[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev Transfer tokens from one address to another.\n     * Note that while this function emits an Approval event, this is not required as per the specification,\n     * and other compliant implementations may not emit the event.\n     * @param from address The address which you want to send tokens from\n     * @param to address The address which you want to transfer to\n     * @param value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n        _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n        _transfer(from, to, value);\n        emit Approval(from, msg.sender, _allowed[from][msg.sender]);\n        return true;\n    }\n\n    /**\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\n     * approve should be called when allowed_[_spender] == 0. To increment\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     * Emits an Approval event.\n     * @param spender The address which will spend the funds.\n     * @param addedValue The amount of tokens to increase the allowance by.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        require(spender != address(0));\n\n        _allowed[msg.sender][spender] = _allowed[msg.sender][spender].add(addedValue);\n        emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n        return true;\n    }\n\n    /**\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\n     * approve should be called when allowed_[_spender] == 0. To decrement\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     * Emits an Approval event.\n     * @param spender The address which will spend the funds.\n     * @param subtractedValue The amount of tokens to decrease the allowance by.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        require(spender != address(0));\n\n        _allowed[msg.sender][spender] = _allowed[msg.sender][spender].sub(subtractedValue);\n        emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n        return true;\n    }\n\n    /**\n    * @dev Transfer token for a specified addresses\n    * @param from The address to transfer from.\n    * @param to The address to transfer to.\n    * @param value The amount to be transferred.\n    */\n    function _transfer(address from, address to, uint256 value) internal {\n        require(to != address(0));\n\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Internal function that mints an amount of the token and assigns it to\n     * an account. This encapsulates the modification of balances such that the\n     * proper events are emitted.\n     * @param account The account that will receive the created tokens.\n     * @param value The amount that will be created.\n     */\n    function _mint(address account, uint256 value) internal {\n        require(account != address(0));\n\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }\n\n    /**\n     * @dev Internal function that burns an amount of the token of a given\n     * account.\n     * @param account The account whose tokens will be burnt.\n     * @param value The amount that will be burnt.\n     */\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0));\n\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\n\n    /**\n     * @dev Internal function that burns an amount of the token of a given\n     * account, deducting from the sender's allowance for said account. Uses the\n     * internal burn function.\n     * Emits an Approval event (reflecting the reduced allowance).\n     * @param account The account whose tokens will be burnt.\n     * @param value The amount that will be burnt.\n     */\n    function _burnFrom(address account, uint256 value) internal {\n        _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(value);\n        _burn(account, value);\n        emit Approval(account, msg.sender, _allowed[account][msg.sender]);\n    }\n}\n\n// File: openzeppelin-solidity/contracts/access/Roles.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title Roles\n * @dev Library for managing addresses assigned to a Role.\n */\nlibrary Roles {\n    struct Role {\n        mapping (address => bool) bearer;\n    }\n\n    /**\n     * @dev give an account access to this role\n     */\n    function add(Role storage role, address account) internal {\n        require(account != address(0));\n        require(!has(role, account));\n\n        role.bearer[account] = true;\n    }\n\n    /**\n     * @dev remove an account's access to this role\n     */\n    function remove(Role storage role, address account) internal {\n        require(account != address(0));\n        require(has(role, account));\n\n        role.bearer[account] = false;\n    }\n\n    /**\n     * @dev check if an account has this role\n     * @return bool\n     */\n    function has(Role storage role, address account) internal view returns (bool) {\n        require(account != address(0));\n        return role.bearer[account];\n    }\n}\n\n// File: openzeppelin-solidity/contracts/access/roles/PauserRole.sol\n\npragma solidity ^0.5.0;\n\n\ncontract PauserRole {\n    using Roles for Roles.Role;\n\n    event PauserAdded(address indexed account);\n    event PauserRemoved(address indexed account);\n\n    Roles.Role private _pausers;\n\n    constructor () internal {\n        _addPauser(msg.sender);\n    }\n\n    modifier onlyPauser() {\n        require(isPauser(msg.sender));\n        _;\n    }\n\n    function isPauser(address account) public view returns (bool) {\n        return _pausers.has(account);\n    }\n\n    function addPauser(address account) public onlyPauser {\n        _addPauser(account);\n    }\n\n    function renouncePauser() public {\n        _removePauser(msg.sender);\n    }\n\n    function _addPauser(address account) internal {\n        _pausers.add(account);\n        emit PauserAdded(account);\n    }\n\n    function _removePauser(address account) internal {\n        _pausers.remove(account);\n        emit PauserRemoved(account);\n    }\n}\n\n// File: openzeppelin-solidity/contracts/lifecycle/Pausable.sol\n\npragma solidity ^0.5.0;\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is PauserRole {\n    event Paused(address account);\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    constructor () internal {\n        _paused = false;\n    }\n\n    /**\n     * @return true if the contract is paused, false otherwise.\n     */\n    function paused() public view returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     */\n    modifier whenNotPaused() {\n        require(!_paused);\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     */\n    modifier whenPaused() {\n        require(_paused);\n        _;\n    }\n\n    /**\n     * @dev called by the owner to pause, triggers stopped state\n     */\n    function pause() public onlyPauser whenNotPaused {\n        _paused = true;\n        emit Paused(msg.sender);\n    }\n\n    /**\n     * @dev called by the owner to unpause, returns to normal state\n     */\n    function unpause() public onlyPauser whenPaused {\n        _paused = false;\n        emit Unpaused(msg.sender);\n    }\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20Pausable.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title Pausable token\n * @dev ERC20 modified with pausable transfers.\n **/\ncontract ERC20Pausable is ERC20, Pausable {\n    function transfer(address to, uint256 value) public whenNotPaused returns (bool) {\n        return super.transfer(to, value);\n    }\n\n    function transferFrom(address from, address to, uint256 value) public whenNotPaused returns (bool) {\n        return super.transferFrom(from, to, value);\n    }\n\n    function approve(address spender, uint256 value) public whenNotPaused returns (bool) {\n        return super.approve(spender, value);\n    }\n\n    function increaseAllowance(address spender, uint addedValue) public whenNotPaused returns (bool success) {\n        return super.increaseAllowance(spender, addedValue);\n    }\n\n    function decreaseAllowance(address spender, uint subtractedValue) public whenNotPaused returns (bool success) {\n        return super.decreaseAllowance(spender, subtractedValue);\n    }\n}\n\n// File: openzeppelin-solidity/contracts/access/roles/MinterRole.sol\n\npragma solidity ^0.5.0;\n\n\ncontract MinterRole {\n    using Roles for Roles.Role;\n\n    event MinterAdded(address indexed account);\n    event MinterRemoved(address indexed account);\n\n    Roles.Role private _minters;\n\n    constructor () internal {\n        _addMinter(msg.sender);\n    }\n\n    modifier onlyMinter() {\n        require(isMinter(msg.sender));\n        _;\n    }\n\n    function isMinter(address account) public view returns (bool) {\n        return _minters.has(account);\n    }\n\n    function addMinter(address account) public onlyMinter {\n        _addMinter(account);\n    }\n\n    function renounceMinter() public {\n        _removeMinter(msg.sender);\n    }\n\n    function _addMinter(address account) internal {\n        _minters.add(account);\n        emit MinterAdded(account);\n    }\n\n    function _removeMinter(address account) internal {\n        _minters.remove(account);\n        emit MinterRemoved(account);\n    }\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title ERC20Mintable\n * @dev ERC20 minting logic\n */\ncontract ERC20Mintable is ERC20, MinterRole {\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param value The amount of tokens to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\n        _mint(to, value);\n        return true;\n    }\n}\n\n// File: openzeppelin-solidity/contracts/ownership/Ownable.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @return the address of the owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner());\n        _;\n    }\n\n    /**\n     * @return true if `msg.sender` is the owner of the contract.\n     */\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    /**\n     * @dev Allows the current owner to relinquish control of the contract.\n     * @notice Renouncing to ownership will leave the contract without an owner.\n     * It will not be possible to call the functions with the `onlyOwner`\n     * modifier anymore.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n// File: contracts/whitelist/IWhitelist.sol\n\npragma solidity ^0.5.0;\n\ncontract IWhitelist {\n    function isWhitelisted(address account) public view returns (bool);\n}\n\n// File: contracts/token/ERC20Whitelistable.sol\n\npragma solidity ^0.5.0;\n\ncontract ERC20Whitelistable is ERC20Mintable, Ownable {\n    event WhitelistChanged(IWhitelist indexed account);\n\n    IWhitelist public whitelist;\n\n    function setWhitelist(IWhitelist _whitelist) public onlyOwner {\n        whitelist = _whitelist;\n        emit WhitelistChanged(_whitelist);\n    }\n\n    modifier onlyWhitelisted(address account) {\n        require(isWhitelisted(account));\n        _;\n    }\n\n    modifier notWhitelisted(address account) {\n        require(!isWhitelisted(account));\n        _;\n    }\n\n    function isWhitelisted(address account) public view returns (bool) {\n        return whitelist.isWhitelisted(account);\n    }\n\n    function transfer(address to, uint256 value)\n        public\n        onlyWhitelisted(msg.sender)\n        onlyWhitelisted(to)\n        returns (bool)\n    {\n        return super.transfer(to, value);\n    }\n\n    function transferFrom(address from, address to, uint256 value)\n        public\n        onlyWhitelisted(from)\n        onlyWhitelisted(to)\n        returns (bool)\n    {\n        return super.transferFrom(from, to, value);\n    }\n\n    function mint(address to, uint256 value) public onlyWhitelisted(to) returns (bool) {\n        return super.mint(to, value);\n    }\n}\n\n// File: contracts/token/BurnerRole.sol\n\npragma solidity ^0.5.0;\n\ncontract BurnerRole {\n    using Roles for Roles.Role;\n\n    event BurnerAdded(address indexed account);\n    event BurnerRemoved(address indexed account);\n\n    Roles.Role private _burners;\n\n    constructor () internal {\n        _addBurner(msg.sender);\n    }\n\n    modifier onlyBurner() {\n        require(isBurner(msg.sender));\n        _;\n    }\n\n    function isBurner(address account) public view returns (bool) {\n        return _burners.has(account);\n    }\n\n    function addBurner(address account) public onlyBurner {\n        _addBurner(account);\n    }\n\n    function renounceBurner() public {\n        _removeBurner(msg.sender);\n    }\n\n    function _addBurner(address account) internal {\n        _burners.add(account);\n        emit BurnerAdded(account);\n    }\n\n    function _removeBurner(address account) internal {\n        _burners.remove(account);\n        emit BurnerRemoved(account);\n    }\n}\n\n// File: contracts/token/ERC20Burnable.sol\n\npragma solidity ^0.5.0;\n\ncontract ERC20Burnable is ERC20, BurnerRole {\n    function burn(uint256 value) public onlyBurner() {\n        _burn(msg.sender, value);\n    }\n\n    function burnFrom(address from, uint256 value) public onlyBurner() {\n        _burnFrom(from, value);\n    }\n}\n\n// File: contracts/utils/CanReclaimEther.sol\n\npragma solidity ^0.5.0;\n\n// https://github.com/OpenZeppelin/openzeppelin-solidity/blob/2441fd7d17bffa1944f6f539b2cddd6d19997a31/contracts/ownership/HasNoEther.sol\ncontract CanReclaimEther is Ownable {\n    function reclaimEther() external onlyOwner {\n        msg.sender.transfer(address(this).balance);\n    }\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        require(token.transfer(to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        require(token.transferFrom(from, to, value));\n    }\n\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require((value == 0) || (token.allowance(address(this), spender) == 0));\n        require(token.approve(spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        require(token.approve(spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value);\n        require(token.approve(spender, newAllowance));\n    }\n}\n\n// File: contracts/utils/CanReclaimToken.sol\n\npragma solidity ^0.5.0;\n\n// https://github.com/OpenZeppelin/openzeppelin-solidity/blob/6c4c8989b399510a66d8b98ad75a0979482436d2/contracts/ownership/CanReclaimToken.sol\ncontract CanReclaimToken is Ownable {\n    using SafeERC20 for IERC20;\n\n    function reclaimToken(IERC20 token) external onlyOwner {\n        uint256 balance = token.balanceOf(address(this));\n        token.safeTransfer(owner(), balance);\n    }\n}\n\n// File: contracts/token/LeveragedToken.sol\n\npragma solidity ^0.5.0;\n\ncontract LeveragedToken is\n    ERC20Detailed,\n    ERC20Pausable,\n    ERC20Mintable,\n    ERC20Burnable,\n    ERC20Whitelistable,\n    CanReclaimEther,\n    CanReclaimToken\n{\n    using SafeMath for uint256;\n\n    constructor(string memory name, string memory symbol)\n        ERC20Detailed(name, symbol, 18)\n        public\n    {}\n\n    function burnBlacklisted(address from, uint256 value)\n        public\n        onlyBurner()\n        notWhitelisted(from)\n    {\n        _burn(from, value);\n    }\n}"
}