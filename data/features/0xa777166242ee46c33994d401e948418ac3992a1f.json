{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH29 SWAP1 DIV PUSH4 AND DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 SLOAD CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD GT ISZERO PUSH2 JUMPI PUSH2 PUSH2 JUMP JUMPDEST ISZERO PUSH2 JUMPI PUSH1 PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH2 CALLVALUE PUSH1 DUP1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH2 PUSH2 PUSH1 PUSH2 PUSH1 CALLVALUE PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH2 PUSH2 PUSH1 PUSH2 PUSH1 CALLVALUE PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP PUSH32 CALLER CALLVALUE PUSH1 MLOAD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 DUP1 PUSH1 PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD GT ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 CALLER PUSH2 JUMP JUMPDEST SWAP1 POP DUP1 ADDRESS PUSH20 AND BALANCE GT ISZERO PUSH2 JUMPI PUSH1 DUP2 GT ISZERO PUSH2 JUMPI PUSH2 DUP2 PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP CALLER PUSH20 AND PUSH2 DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP PUSH32 CALLER DUP3 PUSH1 MLOAD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 SWAP2 POP PUSH2 JUMP JUMPDEST PUSH1 SWAP2 POP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP5 EQ ISZERO PUSH2 JUMPI PUSH1 SWAP2 POP PUSH2 JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV EQ ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP3 PUSH20 AND EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 PUSH20 AND PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP2 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH2 CALLER PUSH2 JUMP JUMPDEST SWAP1 POP PUSH1 SLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI DUP1 ADDRESS PUSH20 AND BALANCE GT ISZERO PUSH2 JUMPI PUSH1 PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP CALLER PUSH20 AND PUSH2 DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP PUSH32 CALLER DUP3 PUSH1 MLOAD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH2 CALLER PUSH2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP2 PUSH1 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 PUSH1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP1 PUSH1 PUSH2 PUSH1 PUSH2 PUSH1 PUSH1 DUP11 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD TIMESTAMP PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP4 POP PUSH2 PUSH1 PUSH2 PUSH1 SLOAD PUSH1 DUP1 DUP12 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP3 POP PUSH2 PUSH2 PUSH2 DUP7 DUP7 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP2 POP PUSH2 PUSH1 PUSH1 DUP9 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD DUP4 PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 SHA3 UNKNOWN_0x23 UNOFFICIAL_DUP UNKNOWN_0xb5 UNOFFICIAL_PUSH UNKNOWN_0xee DUP2 SIGNEXTEND CALLDATACOPY UNKNOWN_0x4b TIMESTAMP UNKNOWN_0xa5 UNKNOWN_0x5e EQ INVALID_0x7f",
  "opcode_entropy": 4.811252274201489,
  "opcode_count": 1932,
  "unique_opcodes": 70,
  "byte_entropy": 4.531482401200758,
  "byte_60": 0.05520760844351658,
  "byte_80": 0.029691486893992113,
  "byte_40": 0.009742519137091163,
  "byte_52": 0.01229413129204361,
  "byte_04": 0.007654836464857342,
  "byte_36": 0.001855717930874507,
  "byte_10": 0.0027835768963117608,
  "byte_61": 0.030619345859429367,
  "byte_00": 0.033402922755741124,
  "byte_d0": 0.00046392948271862676,
  "byte_57": 0.01229413129204361,
  "byte_35": 0.002551612154952447,
  "byte_7c": 0.00046392948271862676,
  "byte_01": 0.020180932498260265,
  "byte_90": 0.03549060542797495,
  "byte_63": 0.006726977499420088,
  "byte_ff": 0.38042217582927396,
  "byte_16": 0.022268615170494086,
  "byte_0c": 0.0013917884481558804,
  "byte_19": 0.0009278589654372535,
  "byte_f8": 0.00046392948271862676,
  "byte_0e": 0.001855717930874507,
  "byte_14": 0.0048712595685455815,
  "byte_03": 0.008350730688935281,
  "byte_de": 0.00023196474135931338,
  "byte_3c": 0.00046392948271862676,
  "byte_cf": 0.00023196474135931338,
  "byte_d6": 0.00046392948271862676,
  "byte_0b": 0.0006958942240779402,
  "byte_4d": 0.00046392948271862676,
  "byte_64": 0.0013917884481558804,
  "byte_6d": 0.00046392948271862676,
  "byte_43": 0.0006958942240779402,
  "byte_54": 0.006958942240779402,
  "byte_21": 0.00023196474135931338,
  "byte_8f": 0.00023196474135931338,
  "byte_83": 0.003711435861749014,
  "byte_5c": 0.00023196474135931338,
  "byte_11": 0.0016237531895151936,
  "byte_f2": 0.0006958942240779402,
  "byte_8d": 0.00023196474135931338,
  "byte_a5": 0.0006958942240779402,
  "byte_cb": 0.0006958942240779402,
  "byte_5b": 0.024124333101368592,
  "byte_05": 0.003015541637671074,
  "byte_49": 0.0009278589654372535,
  "byte_93": 0.0016237531895151936,
  "byte_dc": 0.00023196474135931338,
  "byte_b7": 0.00023196474135931338,
  "byte_a0": 0.0009278589654372535,
  "byte_94": 0.001159823706796567,
  "byte_3d": 0.0020876826722338203,
  "byte_fe": 0.0016237531895151936,
  "byte_f1": 0.001855717930874507,
  "byte_f7": 0.00023196474135931338,
  "byte_9d": 0.00046392948271862676,
  "byte_9f": 0.0009278589654372535,
  "byte_cc": 0.0006958942240779402,
  "byte_72": 0.00046392948271862676,
  "byte_06": 0.003943400603108328,
  "byte_b3": 0.00046392948271862676,
  "byte_6b": 0.0006958942240779402,
  "byte_fd": 0.005799118533982834,
  "byte_65": 0.0006958942240779402,
  "byte_c7": 0.0006958942240779402,
  "byte_1d": 0.00046392948271862676,
  "byte_ac": 0.00046392948271862676,
  "byte_bc": 0.00046392948271862676,
  "byte_d3": 0.00046392948271862676,
  "byte_cd": 0.0016237531895151936,
  "byte_e1": 0.0009278589654372535,
  "byte_e7": 0.00023196474135931338,
  "byte_e2": 0.0009278589654372535,
  "byte_5f": 0.0006958942240779402,
  "byte_75": 0.00046392948271862676,
  "byte_07": 0.003711435861749014,
  "byte_34": 0.0048712595685455815,
  "byte_b2": 0.0013917884481558804,
  "byte_4f": 0.0006958942240779402,
  "byte_15": 0.014613778705636743,
  "byte_33": 0.004639294827186268,
  "byte_73": 0.018325214567385756,
  "byte_81": 0.02134075620505683,
  "byte_20": 0.017861285084667132,
  "byte_30": 0.001159823706796567,
  "byte_b6": 0.0006958942240779402,
  "byte_56": 0.012062166550684296,
  "byte_7b": 0.00023196474135931338,
  "byte_02": 0.003943400603108328,
  "byte_55": 0.0020876826722338203,
  "byte_50": 0.032011134307585246,
  "byte_09": 0.005103224309904894,
  "byte_91": 0.01507770818835537,
  "byte_42": 0.0009278589654372535,
  "byte_0a": 0.003943400603108328,
  "byte_08": 0.003247506379030387,
  "byte_fc": 0.001159823706796567,
  "byte_a8": 0.0006958942240779402,
  "byte_51": 0.009046624913013222,
  "byte_85": 0.0013917884481558804,
  "byte_88": 0.002319647413593134,
  "byte_3e": 0.0009278589654372535,
  "byte_45": 0.00023196474135931338,
  "byte_37": 0.0006958942240779402,
  "byte_70": 0.00046392948271862676,
  "byte_7f": 0.0013917884481558804,
  "byte_d9": 0.00046392948271862676,
  "byte_0d": 0.0013917884481558804,
  "byte_25": 0.00046392948271862676,
  "byte_3a": 0.00046392948271862676,
  "byte_e3": 0.00046392948271862676,
  "byte_2f": 0.00046392948271862676,
  "byte_dd": 0.00023196474135931338,
  "byte_5a": 0.00023196474135931338,
  "byte_ae": 0.00023196474135931338,
  "byte_ea": 0.0006958942240779402,
  "byte_17": 0.0006958942240779402,
  "byte_b4": 0.0009278589654372535,
  "byte_f3": 0.003247506379030387,
  "byte_c8": 0.00046392948271862676,
  "byte_23": 0.00046392948271862676,
  "byte_41": 0.00046392948271862676,
  "byte_99": 0.0006958942240779402,
  "byte_87": 0.00023196474135931338,
  "byte_2e": 0.00023196474135931338,
  "byte_82": 0.006263048016701462,
  "byte_92": 0.0041753653444676405,
  "byte_a1": 0.001159823706796567,
  "byte_1f": 0.00046392948271862676,
  "byte_4a": 0.00023196474135931338,
  "byte_79": 0.00046392948271862676,
  "byte_9b": 0.00023196474135931338,
  "byte_f0": 0.00023196474135931338,
  "byte_5e": 0.00046392948271862676,
  "byte_39": 0.00046392948271862676,
  "byte_b5": 0.0006958942240779402,
  "byte_1a": 0.00023196474135931338,
  "byte_b8": 0.00023196474135931338,
  "byte_71": 0.00023196474135931338,
  "byte_7a": 0.0006958942240779402,
  "byte_d1": 0.00023196474135931338,
  "byte_27": 0.00023196474135931338,
  "byte_32": 0.001159823706796567,
  "byte_0f": 0.0016237531895151936,
  "byte_2c": 0.00023196474135931338,
  "byte_31": 0.00046392948271862676,
  "byte_8b": 0.0006958942240779402,
  "byte_8c": 0.00023196474135931338,
  "byte_4e": 0.00046392948271862676,
  "byte_da": 0.00046392948271862676,
  "byte_ce": 0.00046392948271862676,
  "byte_6f": 0.00046392948271862676,
  "byte_a2": 0.00023196474135931338,
  "byte_44": 0.0006958942240779402,
  "byte_8a": 0.00046392948271862676,
  "byte_12": 0.00023196474135931338,
  "byte_eb": 0.00023196474135931338,
  "byte_96": 0.00023196474135931338,
  "byte_d2": 0.00023196474135931338,
  "byte_76": 0.00023196474135931338,
  "byte_84": 0.0020876826722338203,
  "byte_d4": 0.00023196474135931338,
  "byte_f9": 0.00046392948271862676,
  "byte_a9": 0.00023196474135931338,
  "byte_c0": 0.00023196474135931338,
  "byte_ef": 0.00046392948271862676,
  "byte_e0": 0.00046392948271862676,
  "byte_9c": 0.00023196474135931338,
  "byte_53": 0.00023196474135931338,
  "byte_59": 0.00023196474135931338,
  "byte_13": 0.00023196474135931338,
  "byte_a4": 0.00023196474135931338,
  "byte_97": 0.00023196474135931338,
  "byte_22": 0.00046392948271862676,
  "byte_a3": 0.00046392948271862676,
  "byte_af": 0.00046392948271862676,
  "byte_18": 0.00023196474135931338,
  "byte_47": 0.00023196474135931338,
  "byte_4c": 0.00023196474135931338,
  "byte_c4": 0.00023196474135931338,
  "byte_28": 0.00023196474135931338,
  "byte_e8": 0.00023196474135931338,
  "byte_2a": 0.00023196474135931338,
  "byte_e9": 0.00023196474135931338,
  "byte_c3": 0.00023196474135931338,
  "byte_ad": 0.00023196474135931338,
  "byte_5d": 0.00023196474135931338,
  "byte_4b": 0.00046392948271862676,
  "byte_fb": 0.00023196474135931338,
  "byte_fa": 0.00023196474135931338,
  "byte_f6": 0.00023196474135931338,
  "byte_69": 0.00023196474135931338,
  "byte_e5": 0.00023196474135931338,
  "byte_86": 0.00046392948271862676,
  "byte_62": 0.00023196474135931338,
  "byte_58": 0.00023196474135931338,
  "byte_b1": 0.00023196474135931338,
  "byte_b0": 0.00023196474135931338,
  "byte_ee": 0.00023196474135931338,
  "byte_3b": 0.00023196474135931338,
  "byte_f4": 0.00023196474135931338,
  "byte_8e": 0.00023196474135931338,
  "byte_29": 0.00023196474135931338,
  "num_nodes": 11,
  "num_edges": 18,
  "avg_degree": 3.272727272727273,
  "density": 0.16363636363636364,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 65,
  "event_nums": 27,
  "creation_block": 6398277,
  "creation_timestamp": 1537898557,
  "life_time": 1027240.0,
  "duration_seconds": 15453193.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 12,
  "num_buyers": 10,
  "num_sellers": 10,
  "num_creator_transfers": 37,
  "buy_amt": 3.0317620887152774e+17,
  "sell_amt": 3.0872415e+17,
  "avg_value": 9271217558659510.0,
  "txn_per_block": 6.327629056862021e-05,
  "avg_gas_limit": 59260.04615384615,
  "std_gas_limit": 167524.29210066414,
  "avg_gas_used": 44967.92307692308,
  "std_gas_used": 165623.13692525966,
  "avg_gas_price": 3369230769.230769,
  "std_gas_price": 4305878739.116597,
  "invest_num": 10,
  "withdraw_num": 17,
  "atinversebrah_num": 1,
  "timeline_sequence": [
    [
      6398277,
      1537898557,
      0,
      47,
      0,
      1346324,
      6000000000,
      0,
      1,
      5434578,
      1346324,
      16723045
    ],
    [
      6398305,
      1537898932,
      1,
      85,
      10000000000000000,
      158236,
      6000000000,
      0,
      1,
      7895883,
      104583,
      16723017
    ],
    [
      6398343,
      1537899432,
      146,
      68,
      10000000000000000,
      120736,
      12000000000,
      0,
      1,
      3854426,
      79583,
      16722979
    ],
    [
      6398354,
      1537899529,
      1960,
      31,
      10000000000000000,
      120736,
      10000000000,
      0,
      1,
      2132055,
      79583,
      16722968
    ],
    [
      6398443,
      1537900877,
      7782,
      77,
      10000000000000000,
      120736,
      8000000000,
      0,
      1,
      3419954,
      79583,
      16722879
    ],
    [
      6405803,
      1538005227,
      1081,
      8,
      10000000000000000,
      120736,
      8000000000,
      0,
      1,
      7797538,
      79583,
      16715519
    ],
    [
      6407435,
      1538028211,
      1101,
      115,
      0,
      81759,
      9000000000,
      0,
      1,
      4377755,
      53695,
      16713887
    ],
    [
      6409160,
      1538052931,
      2,
      92,
      0,
      81759,
      8000000000,
      0,
      1,
      3940283,
      53695,
      16712162
    ],
    [
      6409343,
      1538055623,
      118,
      29,
      15000000000000000,
      120736,
      6000000000,
      0,
      1,
      3894781,
      79583,
      16711979
    ],
    [
      6410444,
      1538071674,
      7822,
      63,
      0,
      81759,
      9000000000,
      0,
      1,
      7932909,
      53695,
      16710878
    ],
    [
      6413146,
      1538109418,
      1967,
      37,
      0,
      81759,
      11000000000,
      0,
      1,
      2550103,
      53695,
      16708176
    ],
    [
      6413355,
      1538112217,
      61,
      74,
      100000000000000000,
      120736,
      9000000000,
      0,
      1,
      5468747,
      79583,
      16707967
    ],
    [
      6414226,
      1538124911,
      1123,
      222,
      15000000000000000,
      109263,
      11000000000,
      0,
      1,
      5619109,
      56925,
      16707096
    ],
    [
      6415926,
      1538149103,
      71,
      27,
      10000000000000000,
      120736,
      6000000000,
      0,
      1,
      4097587,
      79583,
      16705396
    ],
    [
      6418178,
      1538181015,
      147,
      56,
      0,
      81759,
      13000000000,
      0,
      1,
      3601622,
      53695,
      16703144
    ],
    [
      6426567,
      1538299934,
      120,
      37,
      0,
      81759,
      4000000000,
      0,
      1,
      1597709,
      53695,
      16694755
    ],
    [
      6428646,
      1538329407,
      3,
      92,
      0,
      59259,
      8000000000,
      0,
      1,
      7573196,
      38695,
      16692676
    ],
    [
      6428648,
      1538329451,
      72,
      75,
      0,
      81759,
      8000000000,
      0,
      1,
      7813331,
      53695,
      16692674
    ],
    [
      6430028,
      1538348569,
      148,
      36,
      0,
      59259,
      10000000000,
      0,
      1,
      1311470,
      38695,
      16691294
    ],
    [
      6430079,
      1538349219,
      7824,
      23,
      0,
      59259,
      9000000000,
      0,
      1,
      6794043,
      38695,
      16691243
    ],
    [
      6430186,
      1538350717,
      1147,
      23,
      0,
      81759,
      12000000000,
      0,
      1,
      2723719,
      53695,
      16691136
    ],
    [
      6434986,
      1538418643,
      123,
      52,
      0,
      59259,
      12000000000,
      0,
      1,
      7597855,
      38695,
      16686336
    ],
    [
      7409448,
      1553134431,
      5,
      79,
      118724150000000000,
      120736,
      4000000000,
      0,
      1,
      3617550,
      79583,
      15711874
    ],
    [
      7415192,
      1553212512,
      7,
      109,
      0,
      81759,
      4000000000,
      0,
      1,
      7061836,
      53695,
      15706130
    ],
    [
      7415373,
      1553214767,
      9,
      185,
      0,
      59259,
      4000000000,
      0,
      1,
      7749433,
      38695,
      15705949
    ],
    [
      7416018,
      1553223885,
      10,
      48,
      0,
      59259,
      4000000000,
      0,
      1,
      3388332,
      38695,
      15705304
    ],
    [
      7420387,
      1553282606,
      12,
      79,
      0,
      59259,
      4000000000,
      0,
      1,
      3814964,
      38695,
      15700935
    ],
    [
      7425517,
      1553351750,
      16,
      144,
      0,
      36448,
      4000000000,
      0,
      1,
      5512066,
      24299,
      15695805
    ],
    [
      6398305,
      1537898932,
      0,
      0,
      500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6398305,
      1537898932,
      0,
      0,
      500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6398343,
      1537899432,
      0,
      0,
      500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6398343,
      1537899432,
      0,
      0,
      500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6398354,
      1537899529,
      0,
      0,
      500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6398354,
      1537899529,
      0,
      0,
      500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6398443,
      1537900877,
      0,
      0,
      500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6398443,
      1537900877,
      0,
      0,
      500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6405803,
      1538005227,
      0,
      0,
      500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6405803,
      1538005227,
      0,
      0,
      500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6407435,
      1538028211,
      0,
      0,
      1329861111111111,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6409160,
      1538052931,
      0,
      0,
      8909722222222222,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6409343,
      1538055623,
      0,
      0,
      750000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6409343,
      1538055623,
      0,
      0,
      750000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6410444,
      1538071674,
      0,
      0,
      9881944444444444,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6413146,
      1538109418,
      0,
      0,
      12145833333333333,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6413355,
      1538112217,
      0,
      0,
      5000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6413355,
      1538112217,
      0,
      0,
      5000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6414226,
      1538124911,
      0,
      0,
      5593750000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6414226,
      1538124911,
      0,
      0,
      750000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6414226,
      1538124911,
      0,
      0,
      750000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6415926,
      1538149103,
      0,
      0,
      500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6415926,
      1538149103,
      0,
      0,
      500000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6418178,
      1538181015,
      0,
      0,
      16295138888888888,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6426567,
      1538299934,
      0,
      0,
      21203125000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6428646,
      1538329407,
      0,
      0,
      16000000000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6428648,
      1538329451,
      0,
      0,
      10434027777777777,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6430028,
      1538348569,
      0,
      0,
      9694444444444445,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6430079,
      1538349219,
      0,
      0,
      16062500000000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6430186,
      1538350717,
      0,
      0,
      32664930555555555,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      6434986,
      1538418643,
      0,
      0,
      10307291666666666,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7409448,
      1553134431,
      0,
      0,
      5936207500000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7409448,
      1553134431,
      0,
      0,
      5936207500000000,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7415192,
      1553212512,
      0,
      0,
      53631985815972222,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7415373,
      1553214767,
      0,
      0,
      1525275538194444,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7416018,
      1553223885,
      0,
      0,
      6265996805555556,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      7420387,
      1553282606,
      0,
      0,
      40357966267361111,
      2300,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  ],
  "sourcecode": "pragma solidity ^0.4.24;\n\n/**\n*\n2DAYS\n*/\ncontract TwoDaysProfit{\n    \n    using SafeMath for uint256;\n\n    mapping(address => uint256) investments;\n    mapping(address => uint256) joined;\n    mapping(address => uint256) withdrawals;\n    mapping(address => uint256) referrer;\n\n    uint256 public minimum = 10000000000000000;\n    uint256 public step = 50;\n    address public ownerWallet;\n    address public owner;\n    address public bountyManager;\n    address promoter = 0x47b609eb4d6fd781fb2d6617e9a8db183398bed5;\n\n    event Invest(address investor, uint256 amount);\n    event Withdraw(address investor, uint256 amount);\n    event Bounty(address hunter, uint256 amount);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    \n    /**\n     * @dev \u0421onstructor Sets the original roles of the contract \n     */\n     \n    constructor(address _bountyManager) public {\n        owner = msg.sender;\n        ownerWallet = msg.sender;\n        bountyManager = _bountyManager;\n    }\n\n    /**\n     * @dev Modifiers\n     */\n     \n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    modifier onlyBountyManager() {\n        require(msg.sender == bountyManager);\n        _;\n\t}\n\n    /**\n     * @dev Allows current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     * @param newOwnerWallet The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner, address newOwnerWallet) public onlyOwner {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n        ownerWallet = newOwnerWallet;\n    }\n\n    /**\n     * @dev Investments\n     */\n    function () external payable {\n        require(msg.value >= minimum);\n        if (investments[msg.sender] > 0){\n            if (withdraw()){\n                withdrawals[msg.sender] = 0;\n            }\n        }\n        investments[msg.sender] = investments[msg.sender].add(msg.value);\n        joined[msg.sender] = block.timestamp;\n        ownerWallet.transfer(msg.value.div(100).mul(5));\n        promoter.transfer(msg.value.div(100).mul(5));\n        emit Invest(msg.sender, msg.value);\n    }\n\n    /**\n    * @dev Evaluate current balance\n    * @param _address Address of investor\n    */\n    function getBalance(address _address) view public returns (uint256) {\n        uint256 minutesCount = now.sub(joined[_address]).div(1 minutes);\n        uint256 percent = investments[_address].mul(step).div(100);\n        uint256 different = percent.mul(minutesCount).div(1440);\n        uint256 balance = different.sub(withdrawals[_address]);\n\n        return balance;\n    }\n\n    /**\n    * @dev Withdraw dividends from contract\n    */\n    function withdraw() public returns (bool){\n        require(joined[msg.sender] > 0);\n        uint256 balance = getBalance(msg.sender);\n        if (address(this).balance > balance){\n            if (balance > 0){\n                withdrawals[msg.sender] = withdrawals[msg.sender].add(balance);\n                msg.sender.transfer(balance);\n                emit Withdraw(msg.sender, balance);\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    \n    /**\n    * @dev Bounty reward\n    */\n    function bounty() public {\n        uint256 refBalance = checkReferral(msg.sender);\n        if(refBalance >= minimum) {\n             if (address(this).balance > refBalance) {\n                referrer[msg.sender] = 0;\n                msg.sender.transfer(refBalance);\n                emit Bounty(msg.sender, refBalance);\n             }\n        }\n    }\n\n    /**\n    * @dev Gets balance of the sender address.\n    * @return An uint256 representing the amount owned by the msg.sender.\n    */\n    function checkBalance() public view returns (uint256) {\n        return getBalance(msg.sender);\n    }\n\n    /**\n    * @dev Gets withdrawals of the specified address.\n    * @param _investor The address to query the the balance of.\n    * @return An uint256 representing the amount owned by the passed address.\n    */\n    function checkWithdrawals(address _investor) public view returns (uint256) {\n        return withdrawals[_investor];\n    }\n\n    /**\n    * @dev Gets investments of the specified address.\n    * @param _investor The address to query the the balance of.\n    * @return An uint256 representing the amount owned by the passed address.\n    */\n    function checkInvestments(address _investor) public view returns (uint256) {\n        return investments[_investor];\n    }\n\n    /**\n    * @dev Gets referrer balance of the specified address.\n    * @param _hunter The address of the referrer\n    * @return An uint256 representing the referral earnings.\n    */\n    function checkReferral(address _hunter) public view returns (uint256) {\n        return referrer[_hunter];\n    }\n    \n    /**\n    * @dev Updates referrer balance \n    * @param _hunter The address of the referrer\n    * @param _amount An uint256 representing the referral earnings.\n    */\n    function updateReferral(address _hunter, uint256 _amount) onlyBountyManager public {\n        referrer[_hunter] = referrer[_hunter].add(_amount);\n    }\n    \n}\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}"
}