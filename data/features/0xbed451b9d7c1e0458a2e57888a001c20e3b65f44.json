{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH1 SHR DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH2 PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH1 SLOAD PUSH2 JUMP JUMPDEST POP STOP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 PUSH5 DUP2 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 DUP3 ADD GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP2 DUP5 PUSH1 DUP4 MUL DUP5 ADD GT PUSH5 DUP4 GT OR ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 PUSH1 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 DUP2 DUP5 ADD MSTORE PUSH1 NOT PUSH1 DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH1 AND PUSH1 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST PUSH1 DUP1 PUSH20 AND DUP4 PUSH20 AND EQ ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 CALLER DUP5 PUSH2 JUMP JUMPDEST PUSH1 DUP1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP3 PUSH1 DUP1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH2 DUP3 PUSH1 DUP1 DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 AND CALLER PUSH20 AND PUSH32 DUP5 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND DUP4 PUSH20 AND EQ ISZERO PUSH2 JUMPI PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 CALLER DUP5 PUSH1 MLOAD DUP4 PUSH4 AND PUSH1 SHL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 MLOAD DUP1 PUSH1 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH32 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 SWAP1 POP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST PUSH1 MUL PUSH1 ADD ADD MLOAD PUSH20 AND PUSH1 PUSH20 AND PUSH32 PUSH1 SLOAD PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH1 ADD SWAP2 POP POP PUSH2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 PUSH1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 PUSH1 AND PUSH1 EXP PUSH4 MUL DUP2 JUMP JUMPDEST PUSH1 DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH1 DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD SWAP1 POP PUSH2 JUMP JUMPDEST PUSH1 SLOAD DUP3 PUSH20 AND BALANCE LT PUSH2 JUMPI PUSH1 SLOAD SWAP1 POP PUSH2 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 MLOAD DUP1 PUSH1 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH32 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP2 PUSH2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH1 SLOAD DUP3 PUSH20 AND BALANCE LT ISZERO JUMPDEST ISZERO PUSH2 JUMPI PUSH1 DUP1 PUSH1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 SLOAD PUSH1 DUP1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH1 PUSH1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH1 SLOAD DUP2 PUSH20 AND BALANCE LT ISZERO JUMPDEST ISZERO PUSH2 JUMPI PUSH1 SLOAD PUSH1 DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 DUP1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 DUP3 DUP3 GT ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DUP1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH20 AND PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMP UNKNOWN_0xfe LOG1 PUSH6 SHA3 UNKNOWN_0xd4 DUP4 ADDRESS DUP7 UNKNOWN_0xb6 COINBASE EXTCODECOPY UNKNOWN_0xac UNKNOWN_0xd8 UNKNOWN_0xdd INVALID_0x79",
  "opcode_entropy": 4.758978559676784,
  "opcode_count": 2319,
  "unique_opcodes": 69,
  "byte_entropy": 4.519788073640649,
  "byte_60": 0.059373175004866656,
  "byte_80": 0.03250924664200895,
  "byte_40": 0.009149308935176173,
  "byte_52": 0.01265329959120109,
  "byte_34": 0.0003893322951138797,
  "byte_15": 0.010706638115631691,
  "byte_61": 0.027253260657971578,
  "byte_00": 0.03445590811757835,
  "byte_10": 0.005061319836480436,
  "byte_57": 0.012458633443644151,
  "byte_fd": 0.005450652131594316,
  "byte_5b": 0.021997274673934204,
  "byte_50": 0.029199922133540977,
  "byte_04": 0.009149308935176173,
  "byte_36": 0.0023359937706832782,
  "byte_01": 0.029589254428654857,
  "byte_16": 0.02335993770683278,
  "byte_35": 0.0035039906560249173,
  "byte_e0": 0.0009733307377846992,
  "byte_1c": 0.0003893322951138797,
  "byte_63": 0.006034650574265135,
  "byte_69": 0.0007786645902277594,
  "byte_20": 0.021413276231263382,
  "byte_58": 0.0005839984426708196,
  "byte_c2": 0.0007786645902277594,
  "byte_11": 0.0017519953280124587,
  "byte_a2": 0.0003893322951138797,
  "byte_95": 0.0011679968853416391,
  "byte_d8": 0.0005839984426708196,
  "byte_9b": 0.0009733307377846992,
  "byte_41": 0.0007786645902277594,
  "byte_71": 0.0003893322951138797,
  "byte_14": 0.005839984426708195,
  "byte_05": 0.002725326065797158,
  "byte_a9": 0.0003893322951138797,
  "byte_9c": 0.0005839984426708196,
  "byte_bb": 0.00019466614755693986,
  "byte_b9": 0.0003893322951138797,
  "byte_c9": 0.00019466614755693986,
  "byte_1d": 0.00019466614755693986,
  "byte_6c": 0.00019466614755693986,
  "byte_06": 0.0023359937706832782,
  "byte_1f": 0.0011679968853416391,
  "byte_dd": 0.001362663032898579,
  "byte_62": 0.0003893322951138797,
  "byte_ed": 0.0003893322951138797,
  "byte_3e": 0.0007786645902277594,
  "byte_4d": 0.0009733307377846992,
  "byte_f2": 0.0011679968853416391,
  "byte_e3": 0.0003893322951138797,
  "byte_8b": 0.0007786645902277594,
  "byte_c5": 0.00019466614755693986,
  "byte_56": 0.010511971968074752,
  "byte_70": 0.00019466614755693986,
  "byte_a0": 0.0003893322951138797,
  "byte_82": 0.007007981312049835,
  "byte_31": 0.0011679968853416391,
  "byte_8a": 0.0003893322951138797,
  "byte_18": 0.0005839984426708196,
  "byte_a6": 0.00019466614755693986,
  "byte_e2": 0.0007786645902277594,
  "byte_8d": 0.0005839984426708196,
  "byte_a5": 0.00019466614755693986,
  "byte_cb": 0.00019466614755693986,
  "byte_ec": 0.00019466614755693986,
  "byte_23": 0.0009733307377846992,
  "byte_b8": 0.0003893322951138797,
  "byte_72": 0.0011679968853416391,
  "byte_e9": 0.0005839984426708196,
  "byte_03": 0.010317305820517812,
  "byte_2f": 0.0003893322951138797,
  "byte_dc": 0.0003893322951138797,
  "byte_8c": 0.0003893322951138797,
  "byte_3c": 0.0005839984426708196,
  "byte_e5": 0.0003893322951138797,
  "byte_67": 0.00019466614755693986,
  "byte_aa": 0.0005839984426708196,
  "byte_44": 0.0011679968853416391,
  "byte_7f": 0.0017519953280124587,
  "byte_a8": 0.0003893322951138797,
  "byte_b7": 0.00019466614755693986,
  "byte_ce": 0.00019466614755693986,
  "byte_5e": 0.0005839984426708196,
  "byte_c6": 0.0005839984426708196,
  "byte_12": 0.0021413276231263384,
  "byte_de": 0.00019466614755693986,
  "byte_47": 0.00019466614755693986,
  "byte_09": 0.0005839984426708196,
  "byte_a7": 0.0005839984426708196,
  "byte_b3": 0.0005839984426708196,
  "byte_ca": 0.0003893322951138797,
  "byte_0e": 0.0005839984426708196,
  "byte_68": 0.0005839984426708196,
  "byte_48": 0.0005839984426708196,
  "byte_cc": 0.0003893322951138797,
  "byte_02": 0.005061319836480436,
  "byte_30": 0.0005839984426708196,
  "byte_0d": 0.001362663032898579,
  "byte_e8": 0.00019466614755693986,
  "byte_90": 0.03601323729803387,
  "byte_54": 0.0068133151644928945,
  "byte_0a": 0.006423982869379015,
  "byte_73": 0.018493284017909284,
  "byte_ff": 0.37395366945688147,
  "byte_07": 0.004282655246252677,
  "byte_4f": 0.0005839984426708196,
  "byte_46": 0.0003893322951138797,
  "byte_51": 0.009343975082733113,
  "byte_81": 0.02530659918240218,
  "byte_83": 0.0068133151644928945,
  "byte_91": 0.01167996885341639,
  "byte_8f": 0.00019466614755693986,
  "byte_84": 0.002530659918240218,
  "byte_74": 0.0005839984426708196,
  "byte_bc": 0.00019466614755693986,
  "byte_19": 0.0019466614755693985,
  "byte_92": 0.005255985984037376,
  "byte_f3": 0.0023359937706832782,
  "byte_e6": 0.00019466614755693986,
  "byte_64": 0.0007786645902277594,
  "byte_75": 0.00019466614755693986,
  "byte_17": 0.0011679968853416391,
  "byte_97": 0.0007786645902277594,
  "byte_93": 0.0003893322951138797,
  "byte_37": 0.0007786645902277594,
  "byte_f0": 0.00019466614755693986,
  "byte_0b": 0.001362663032898579,
  "byte_94": 0.00019466614755693986,
  "byte_b2": 0.0005839984426708196,
  "byte_e4": 0.00019466614755693986,
  "byte_ad": 0.0005839984426708196,
  "byte_28": 0.0009733307377846992,
  "byte_0c": 0.0009733307377846992,
  "byte_85": 0.0003893322951138797,
  "byte_0f": 0.0011679968853416391,
  "byte_ea": 0.0003893322951138797,
  "byte_d9": 0.00019466614755693986,
  "byte_f4": 0.00019466614755693986,
  "byte_7e": 0.00019466614755693986,
  "byte_ab": 0.0003893322951138797,
  "byte_cf": 0.00019466614755693986,
  "byte_4b": 0.00019466614755693986,
  "byte_3b": 0.0003893322951138797,
  "byte_af": 0.0003893322951138797,
  "byte_9f": 0.00019466614755693986,
  "byte_db": 0.00019466614755693986,
  "byte_26": 0.00019466614755693986,
  "byte_4e": 0.0007786645902277594,
  "byte_33": 0.002725326065797158,
  "byte_99": 0.00019466614755693986,
  "byte_ba": 0.00019466614755693986,
  "byte_55": 0.0021413276231263384,
  "byte_08": 0.00019466614755693986,
  "byte_7d": 0.00019466614755693986,
  "byte_86": 0.0003893322951138797,
  "byte_d1": 0.00019466614755693986,
  "byte_1b": 0.0005839984426708196,
  "byte_c8": 0.0005839984426708196,
  "byte_b0": 0.0005839984426708196,
  "byte_fc": 0.0005839984426708196,
  "byte_2b": 0.0003893322951138797,
  "byte_f1": 0.0005839984426708196,
  "byte_c4": 0.0003893322951138797,
  "byte_a1": 0.0005839984426708196,
  "byte_f5": 0.0007786645902277594,
  "byte_5a": 0.0011679968853416391,
  "byte_ef": 0.0003893322951138797,
  "byte_a3": 0.0007786645902277594,
  "byte_5d": 0.00019466614755693986,
  "byte_89": 0.0003893322951138797,
  "byte_87": 0.00019466614755693986,
  "byte_3d": 0.0003893322951138797,
  "byte_45": 0.0005839984426708196,
  "byte_6f": 0.0009733307377846992,
  "byte_6d": 0.00019466614755693986,
  "byte_7a": 0.0005839984426708196,
  "byte_65": 0.0007786645902277594,
  "byte_6e": 0.0003893322951138797,
  "byte_2e": 0.00019466614755693986,
  "byte_77": 0.00019466614755693986,
  "byte_6b": 0.0007786645902277594,
  "byte_29": 0.0003893322951138797,
  "byte_7c": 0.00019466614755693986,
  "byte_fe": 0.0007786645902277594,
  "byte_eb": 0.0003893322951138797,
  "byte_ee": 0.00019466614755693986,
  "byte_df": 0.0003893322951138797,
  "byte_d4": 0.0005839984426708196,
  "byte_d3": 0.00019466614755693986,
  "byte_f8": 0.00019466614755693986,
  "byte_59": 0.0003893322951138797,
  "byte_d6": 0.00019466614755693986,
  "byte_98": 0.00019466614755693986,
  "byte_d5": 0.00019466614755693986,
  "byte_9d": 0.00019466614755693986,
  "byte_2c": 0.00019466614755693986,
  "byte_f9": 0.00019466614755693986,
  "byte_ae": 0.00019466614755693986,
  "byte_b6": 0.0003893322951138797,
  "byte_13": 0.0005839984426708196,
  "byte_25": 0.00019466614755693986,
  "byte_53": 0.00019466614755693986,
  "byte_cd": 0.00019466614755693986,
  "byte_d0": 0.00019466614755693986,
  "byte_a4": 0.00019466614755693986,
  "byte_49": 0.00019466614755693986,
  "byte_22": 0.00019466614755693986,
  "byte_da": 0.00019466614755693986,
  "byte_b4": 0.00019466614755693986,
  "byte_ac": 0.00019466614755693986,
  "byte_79": 0.00019466614755693986,
  "byte_76": 0.00019466614755693986,
  "byte_fa": 0.00019466614755693986,
  "byte_2d": 0.00019466614755693986,
  "num_nodes": 54,
  "num_edges": 53,
  "avg_degree": 1.962962962962963,
  "density": 0.018518518518518517,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 236,
  "event_nums": 1000,
  "creation_block": 7804300,
  "creation_timestamp": 1558456334,
  "life_time": 4712179.0,
  "duration_seconds": 63663629.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 55,
  "num_buyers": 1,
  "num_sellers": 53,
  "num_creator_transfers": 0,
  "buy_amt": 0,
  "sell_amt": 0.0,
  "avg_value": 0.0,
  "txn_per_block": 5.0082976456756746e-05,
  "avg_gas_limit": 223658.33050847458,
  "std_gas_limit": 177063.346936935,
  "avg_gas_used": 64291.279661016946,
  "std_gas_used": 184291.76303532274,
  "avg_gas_price": 5017432430.177966,
  "std_gas_price": 11925228877.516613,
  "transfer_num": 42,
  "atinversebrah_num": 1,
  "setdex_num": 1,
  "setvirtualbalance_num": 1,
  "setminbalance_num": 2,
  "massnotify_num": 12,
  "approve_num": 170,
  "timeline_sequence": [
    [
      7804300,
      1558456334,
      821,
      53,
      0,
      1508712,
      2099896878,
      0,
      1,
      7322291,
      1508712,
      15316644
    ],
    [
      7804328,
      1558456772,
      823,
      70,
      0,
      43514,
      5000000000,
      0,
      1,
      3577056,
      43514,
      15316616
    ],
    [
      7804373,
      1558457349,
      824,
      182,
      0,
      27471,
      5000000000,
      0,
      1,
      7068855,
      27471,
      15316571
    ],
    [
      7804383,
      1558457523,
      827,
      61,
      0,
      26978,
      1649845317,
      0,
      1,
      2853817,
      13489,
      15316561
    ],
    [
      7804996,
      1558466105,
      828,
      50,
      0,
      33234,
      1099896878,
      0,
      1,
      6818040,
      33234,
      15315948
    ],
    [
      7805388,
      1558471171,
      829,
      63,
      0,
      26068,
      1000000000,
      0,
      1,
      2824133,
      26068,
      15315556
    ],
    [
      7805388,
      1558471171,
      830,
      64,
      0,
      26068,
      4000000000,
      0,
      1,
      2850201,
      26068,
      15315556
    ],
    [
      7805487,
      1558472475,
      162,
      134,
      0,
      259972,
      3100000000,
      0,
      1,
      6619980,
      157242,
      15315457
    ],
    [
      7805561,
      1558473267,
      831,
      33,
      0,
      26978,
      3000000000,
      0,
      1,
      1668032,
      26978,
      15315383
    ],
    [
      7805834,
      1558477062,
      1,
      22,
      0,
      182866,
      2000000000,
      0,
      1,
      1823749,
      106318,
      15315110
    ],
    [
      7805985,
      1558479039,
      834,
      103,
      0,
      26132,
      3000000000,
      0,
      1,
      5385765,
      26132,
      15314959
    ],
    [
      7806071,
      1558480132,
      835,
      56,
      0,
      26132,
      3000000000,
      0,
      1,
      3348109,
      26132,
      15314873
    ],
    [
      7806228,
      1558482145,
      2,
      135,
      0,
      185814,
      2000000000,
      0,
      1,
      7353425,
      108342,
      15314716
    ],
    [
      7810352,
      1558537694,
      2,
      89,
      0,
      185814,
      2000000000,
      0,
      1,
      7708890,
      108342,
      15310592
    ],
    [
      7818341,
      1558646267,
      836,
      54,
      0,
      213958,
      1500000000,
      0,
      1,
      3869879,
      213958,
      15302603
    ],
    [
      7818351,
      1558646354,
      4988,
      84,
      0,
      250000,
      4000000000,
      0,
      1,
      4142684,
      23585,
      15302593
    ],
    [
      7818356,
      1558646444,
      4990,
      87,
      0,
      250000,
      1000000000,
      0,
      1,
      6575530,
      23585,
      15302588
    ],
    [
      7818356,
      1558646444,
      4992,
      91,
      0,
      250000,
      1000000000,
      0,
      1,
      6674648,
      23585,
      15302588
    ],
    [
      7818356,
      1558646444,
      4994,
      94,
      0,
      250000,
      1000000000,
      0,
      1,
      6752766,
      23585,
      15302588
    ],
    [
      7818356,
      1558646444,
      4996,
      105,
      0,
      250000,
      1000000000,
      0,
      1,
      7030249,
      23585,
      15302588
    ],
    [
      7818363,
      1558646555,
      4997,
      71,
      0,
      250000,
      1000000000,
      0,
      1,
      3238955,
      23585,
      15302581
    ],
    [
      7818363,
      1558646555,
      4999,
      73,
      0,
      250000,
      1000000000,
      0,
      1,
      3296073,
      23585,
      15302581
    ],
    [
      7818371,
      1558646606,
      5000,
      81,
      0,
      250000,
      4000000000,
      0,
      1,
      4029177,
      23585,
      15302573
    ],
    [
      7818371,
      1558646606,
      5002,
      83,
      0,
      250000,
      4000000000,
      0,
      1,
      4086295,
      23585,
      15302573
    ],
    [
      7818372,
      1558646618,
      5004,
      19,
      0,
      250000,
      4000000000,
      0,
      1,
      1585187,
      23585,
      15302572
    ],
    [
      7818373,
      1558646622,
      5006,
      131,
      0,
      250000,
      4000000000,
      0,
      1,
      6711769,
      23585,
      15302571
    ],
    [
      7818373,
      1558646622,
      5008,
      133,
      0,
      250000,
      4000000000,
      0,
      1,
      6768887,
      23585,
      15302571
    ],
    [
      7818373,
      1558646622,
      5010,
      135,
      0,
      250000,
      4000000000,
      0,
      1,
      6826005,
      23585,
      15302571
    ],
    [
      7818578,
      1558649517,
      837,
      43,
      0,
      231778,
      2000000000,
      0,
      1,
      3142874,
      231778,
      15302366
    ],
    [
      7818585,
      1558649644,
      838,
      139,
      0,
      288598,
      2000000000,
      0,
      1,
      7224906,
      288598,
      15302359
    ],
    [
      7818599,
      1558649921,
      839,
      39,
      0,
      1717856,
      2000000000,
      0,
      1,
      5246050,
      1717856,
      15302345
    ],
    [
      7818648,
      1558650535,
      840,
      26,
      0,
      877275,
      1000000000,
      0,
      1,
      7266721,
      877275,
      15302296
    ],
    [
      7818704,
      1558651285,
      841,
      75,
      0,
      1500945,
      1000000000,
      0,
      1,
      6246849,
      1500945,
      15302240
    ],
    [
      7818755,
      1558652071,
      4098,
      58,
      0,
      250000,
      4000000000,
      0,
      1,
      2641848,
      23585,
      15302189
    ],
    [
      7818763,
      1558652220,
      4101,
      90,
      0,
      250000,
      4000000000,
      0,
      1,
      4371187,
      23585,
      15302181
    ],
    [
      7819240,
      1558658980,
      1650,
      3,
      0,
      250000,
      5000000000,
      0,
      1,
      246911,
      105419,
      15301704
    ],
    [
      7821173,
      1558684675,
      19,
      95,
      0,
      67445,
      7000000000,
      1,
      0,
      3816933,
      67445,
      15299771
    ],
    [
      7821265,
      1558685985,
      21,
      24,
      0,
      67445,
      7000000000,
      1,
      0,
      4221221,
      67445,
      15299679
    ],
    [
      7821318,
      1558686794,
      22,
      137,
      0,
      320419,
      7000000000,
      0,
      1,
      7724618,
      105419,
      15299626
    ],
    [
      7821415,
      1558688198,
      28,
      91,
      0,
      67138,
      7000000000,
      1,
      0,
      5532285,
      67138,
      15299529
    ],
    [
      7821429,
      1558688336,
      30,
      69,
      0,
      107138,
      7000000000,
      0,
      1,
      5024655,
      69495,
      15299515
    ],
    [
      7821664,
      1558691711,
      4106,
      17,
      0,
      250000,
      4000000000,
      0,
      1,
      7252617,
      23585,
      15299280
    ],
    [
      7822212,
      1558699114,
      8,
      93,
      0,
      180628,
      4000000000,
      0,
      1,
      4456875,
      105419,
      15298732
    ],
    [
      7822506,
      1558703198,
      160,
      130,
      0,
      250000,
      4000000000,
      0,
      1,
      7225158,
      23585,
      15298438
    ],
    [
      7822526,
      1558703498,
      162,
      155,
      0,
      250000,
      4000000000,
      0,
      1,
      6853642,
      23585,
      15298418
    ],
    [
      7822533,
      1558703578,
      164,
      99,
      0,
      250000,
      4000000000,
      0,
      1,
      3816162,
      23585,
      15298411
    ],
    [
      7822535,
      1558703606,
      165,
      34,
      0,
      250000,
      4000000000,
      0,
      1,
      3718120,
      23585,
      15298409
    ],
    [
      7822541,
      1558703687,
      166,
      105,
      0,
      250000,
      4000000000,
      0,
      1,
      4669490,
      23585,
      15298403
    ],
    [
      7823217,
      1558712430,
      842,
      26,
      0,
      54412,
      3000000000,
      0,
      1,
      1980906,
      54412,
      15297727
    ],
    [
      7824890,
      1558735100,
      385,
      181,
      0,
      250000,
      5000000000,
      0,
      1,
      7536694,
      23585,
      15296054
    ],
    [
      7824952,
      1558736089,
      875,
      82,
      0,
      178228,
      4000000000,
      0,
      1,
      4844442,
      104267,
      15295992
    ],
    [
      7829707,
      1558799482,
      75,
      170,
      0,
      250000,
      4000000000,
      0,
      1,
      7577976,
      108342,
      15291237
    ],
    [
      7837612,
      1558905011,
      820,
      12,
      0,
      250000,
      4000000000,
      0,
      1,
      749703,
      105355,
      15283332
    ],
    [
      7843431,
      1558983834,
      69,
      109,
      0,
      250000,
      4000000000,
      0,
      1,
      6964595,
      23585,
      15277513
    ],
    [
      7845897,
      1559017184,
      245,
      179,
      0,
      110000,
      2000000000,
      0,
      1,
      7892934,
      23585,
      15275047
    ],
    [
      7855828,
      1559150749,
      249,
      58,
      0,
      110000,
      2000000000,
      0,
      1,
      6186337,
      23585,
      15265116
    ],
    [
      7875729,
      1559419678,
      243,
      119,
      0,
      48000,
      2000000000,
      1,
      0,
      7406518,
      48000,
      15245215
    ],
    [
      7875748,
      1559419866,
      244,
      88,
      0,
      137391,
      1100000000,
      0,
      1,
      4759936,
      121318,
      15245196
    ],
    [
      7896654,
      1559702703,
      122,
      136,
      0,
      110011,
      8000000000,
      1,
      0,
      4335322,
      110011,
      15224290
    ],
    [
      7896678,
      1559703093,
      124,
      125,
      0,
      110011,
      8000000000,
      1,
      0,
      5479420,
      110011,
      15224266
    ],
    [
      7896704,
      1559703406,
      125,
      26,
      0,
      110011,
      20000000000,
      1,
      0,
      870176,
      110011,
      15224240
    ],
    [
      7898075,
      1559722399,
      126,
      96,
      0,
      110011,
      11000000000,
      0,
      1,
      3203432,
      84495,
      15222869
    ],
    [
      7898105,
      1559722767,
      127,
      150,
      0,
      110011,
      17000000000,
      0,
      1,
      5901544,
      37488,
      15222839
    ],
    [
      7923510,
      1560066069,
      255,
      152,
      0,
      110000,
      2000000000,
      0,
      1,
      5222337,
      23585,
      15197434
    ],
    [
      7923554,
      1560066585,
      257,
      145,
      0,
      200000,
      1000000000,
      0,
      1,
      6015741,
      23585,
      15197390
    ],
    [
      7923623,
      1560067687,
      261,
      166,
      0,
      210000,
      1000000000,
      0,
      1,
      6153576,
      23585,
      15197321
    ],
    [
      7923658,
      1560068206,
      263,
      104,
      0,
      200000,
      1000000000,
      0,
      1,
      5696046,
      23585,
      15197286
    ],
    [
      7923996,
      1560073165,
      265,
      17,
      0,
      210000,
      1000000000,
      0,
      1,
      4360076,
      23585,
      15196948
    ],
    [
      7923996,
      1560073165,
      267,
      19,
      0,
      200000,
      1000000000,
      0,
      1,
      4417194,
      23585,
      15196948
    ],
    [
      7924434,
      1560079309,
      270,
      79,
      0,
      200000,
      1000000000,
      0,
      1,
      6793628,
      23585,
      15196510
    ],
    [
      7924457,
      1560079621,
      273,
      85,
      0,
      210000,
      1000000000,
      0,
      1,
      6846909,
      23585,
      15196487
    ],
    [
      7924800,
      1560084082,
      276,
      37,
      0,
      200000,
      1000000000,
      0,
      1,
      7805967,
      23585,
      15196144
    ],
    [
      7924854,
      1560084718,
      349,
      202,
      0,
      200000,
      1000000000,
      0,
      1,
      7420164,
      23585,
      15196090
    ],
    [
      7924981,
      1560086622,
      278,
      20,
      0,
      250000,
      1000000000,
      0,
      1,
      7749057,
      23585,
      15195963
    ],
    [
      7924995,
      1560086751,
      351,
      88,
      0,
      200000,
      1000000000,
      0,
      1,
      5265423,
      23585,
      15195949
    ],
    [
      7925001,
      1560086835,
      280,
      96,
      0,
      250000,
      1000000000,
      0,
      1,
      7829072,
      105419,
      15195943
    ],
    [
      7925020,
      1560087205,
      281,
      191,
      0,
      210005,
      1000000000,
      0,
      1,
      7569633,
      23585,
      15195924
    ],
    [
      7925020,
      1560087205,
      283,
      193,
      0,
      210000,
      1000000000,
      0,
      1,
      7626751,
      23585,
      15195924
    ],
    [
      7925031,
      1560087361,
      353,
      61,
      0,
      200000,
      1000000000,
      0,
      1,
      7634558,
      23585,
      15195913
    ],
    [
      7925165,
      1560089198,
      355,
      83,
      0,
      200000,
      1000000000,
      0,
      1,
      6160206,
      23585,
      15195779
    ],
    [
      7925190,
      1560089513,
      357,
      115,
      0,
      250000,
      1000000000,
      0,
      1,
      6785576,
      23585,
      15195754
    ],
    [
      7925193,
      1560089556,
      359,
      63,
      0,
      250000,
      1000000000,
      0,
      1,
      4623273,
      23585,
      15195751
    ],
    [
      7925193,
      1560089556,
      361,
      65,
      0,
      250000,
      1000000000,
      0,
      1,
      4680391,
      23585,
      15195751
    ],
    [
      7925280,
      1560090751,
      363,
      118,
      0,
      250000,
      1000000000,
      0,
      1,
      7106912,
      23585,
      15195664
    ],
    [
      7925360,
      1560091807,
      365,
      121,
      0,
      250000,
      1000000000,
      0,
      1,
      6908033,
      23585,
      15195584
    ],
    [
      7925827,
      1560098291,
      367,
      65,
      0,
      250000,
      1000000000,
      0,
      1,
      3888819,
      23585,
      15195117
    ],
    [
      7925946,
      1560099903,
      369,
      34,
      0,
      250000,
      1000000000,
      0,
      1,
      7725233,
      23585,
      15194998
    ],
    [
      7925972,
      1560100248,
      371,
      21,
      0,
      250000,
      1000000000,
      0,
      1,
      4276602,
      23585,
      15194972
    ],
    [
      7925972,
      1560100248,
      373,
      23,
      0,
      250000,
      1000000000,
      0,
      1,
      4333720,
      23585,
      15194972
    ],
    [
      7926015,
      1560100716,
      384,
      17,
      0,
      250000,
      1000000000,
      0,
      1,
      2341442,
      23585,
      15194929
    ],
    [
      7926029,
      1560100874,
      390,
      34,
      0,
      250000,
      1000000000,
      0,
      1,
      6673043,
      23585,
      15194915
    ],
    [
      7926146,
      1560102513,
      395,
      68,
      0,
      250000,
      1000000000,
      0,
      1,
      4467039,
      23585,
      15194798
    ],
    [
      7926180,
      1560102953,
      400,
      156,
      0,
      250000,
      1000000000,
      0,
      1,
      7669578,
      23585,
      15194764
    ],
    [
      7926184,
      1560102989,
      402,
      89,
      0,
      250000,
      1000000000,
      0,
      1,
      6040611,
      23585,
      15194760
    ],
    [
      7926185,
      1560103004,
      404,
      42,
      0,
      250000,
      1000000000,
      0,
      1,
      3058825,
      23585,
      15194759
    ],
    [
      7926206,
      1560103292,
      406,
      16,
      0,
      250000,
      1000000000,
      0,
      1,
      4838970,
      23585,
      15194738
    ],
    [
      7926209,
      1560103326,
      408,
      61,
      0,
      250000,
      1000000000,
      0,
      1,
      7543518,
      23585,
      15194735
    ],
    [
      7926210,
      1560103329,
      410,
      40,
      0,
      250000,
      1000000000,
      0,
      1,
      6767173,
      23585,
      15194734
    ],
    [
      7926404,
      1560106018,
      413,
      41,
      0,
      250000,
      1000000000,
      0,
      1,
      2908815,
      23585,
      15194540
    ],
    [
      7926404,
      1560106018,
      415,
      43,
      0,
      250000,
      1000000000,
      0,
      1,
      2965933,
      23585,
      15194540
    ],
    [
      7926410,
      1560106095,
      417,
      9,
      0,
      250000,
      1000000000,
      0,
      1,
      422975,
      23585,
      15194534
    ],
    [
      7926424,
      1560106248,
      419,
      66,
      0,
      250000,
      1000000000,
      0,
      1,
      7740492,
      23585,
      15194520
    ],
    [
      7926427,
      1560106329,
      421,
      47,
      0,
      250000,
      1000000000,
      0,
      1,
      6584255,
      23585,
      15194517
    ],
    [
      7926442,
      1560106551,
      422,
      14,
      0,
      250000,
      1000000000,
      0,
      1,
      904815,
      23585,
      15194502
    ],
    [
      7926452,
      1560106624,
      424,
      8,
      0,
      250000,
      1000000000,
      0,
      1,
      252372,
      23585,
      15194492
    ],
    [
      7926463,
      1560106732,
      426,
      39,
      0,
      250000,
      1000000000,
      0,
      1,
      4934066,
      23585,
      15194481
    ],
    [
      7926466,
      1560106744,
      428,
      27,
      0,
      250000,
      1000000000,
      0,
      1,
      1336166,
      23585,
      15194478
    ],
    [
      7926475,
      1560106823,
      429,
      26,
      0,
      250000,
      1000000000,
      0,
      1,
      2200074,
      23585,
      15194469
    ],
    [
      7926480,
      1560106883,
      431,
      105,
      0,
      250000,
      1000000000,
      0,
      1,
      6442761,
      23585,
      15194464
    ],
    [
      7926509,
      1560107290,
      433,
      93,
      0,
      250000,
      1000000000,
      0,
      1,
      7533020,
      23585,
      15194435
    ],
    [
      7926519,
      1560107522,
      435,
      88,
      0,
      250000,
      1000000000,
      0,
      1,
      6770948,
      23585,
      15194425
    ],
    [
      7926522,
      1560107560,
      437,
      19,
      0,
      250000,
      1000000000,
      0,
      1,
      7561918,
      23585,
      15194422
    ],
    [
      7926525,
      1560107575,
      439,
      97,
      0,
      250000,
      1000000000,
      0,
      1,
      5812875,
      23585,
      15194419
    ],
    [
      7926542,
      1560107794,
      442,
      64,
      0,
      250000,
      1000000000,
      0,
      1,
      3816400,
      23585,
      15194402
    ],
    [
      7926545,
      1560107833,
      444,
      69,
      0,
      250000,
      1000000000,
      0,
      1,
      7218050,
      23585,
      15194399
    ],
    [
      7926556,
      1560107975,
      445,
      99,
      0,
      250000,
      1000000000,
      0,
      1,
      7560898,
      23585,
      15194388
    ],
    [
      7926560,
      1560108005,
      447,
      5,
      0,
      250000,
      1000000000,
      0,
      1,
      254359,
      23585,
      15194384
    ],
    [
      7926562,
      1560108018,
      449,
      48,
      0,
      250000,
      1000000000,
      0,
      1,
      3293296,
      23585,
      15194382
    ],
    [
      7926571,
      1560108147,
      450,
      38,
      0,
      250000,
      1000000000,
      0,
      1,
      2924296,
      23585,
      15194373
    ],
    [
      7926576,
      1560108236,
      452,
      42,
      0,
      250000,
      1000000000,
      0,
      1,
      2722515,
      23585,
      15194368
    ],
    [
      7926583,
      1560108319,
      454,
      18,
      0,
      250000,
      1000000000,
      0,
      1,
      6493780,
      23585,
      15194361
    ],
    [
      7926590,
      1560108452,
      455,
      45,
      0,
      250000,
      1000000000,
      0,
      1,
      5271910,
      23585,
      15194354
    ],
    [
      7926594,
      1560108482,
      459,
      59,
      0,
      250000,
      1000000000,
      0,
      1,
      4195194,
      23585,
      15194350
    ],
    [
      7926601,
      1560108586,
      460,
      86,
      0,
      250000,
      1000000000,
      0,
      1,
      7731325,
      23585,
      15194343
    ],
    [
      7928118,
      1560129054,
      462,
      125,
      0,
      250000,
      1000000000,
      0,
      1,
      7018137,
      23585,
      15192826
    ],
    [
      7928129,
      1560129164,
      464,
      104,
      0,
      250000,
      1000000000,
      0,
      1,
      3850628,
      23585,
      15192815
    ],
    [
      7928153,
      1560129479,
      470,
      90,
      0,
      250000,
      1000000000,
      0,
      1,
      3217108,
      23585,
      15192791
    ],
    [
      7928167,
      1560129641,
      472,
      72,
      0,
      250000,
      1000000000,
      0,
      1,
      4274904,
      23585,
      15192777
    ],
    [
      7928187,
      1560129920,
      477,
      150,
      0,
      250000,
      1000000000,
      0,
      1,
      6909013,
      23585,
      15192757
    ],
    [
      7928219,
      1560130330,
      481,
      41,
      0,
      250000,
      1000000000,
      0,
      1,
      5276513,
      23585,
      15192725
    ],
    [
      7928240,
      1560130590,
      486,
      83,
      0,
      250000,
      1000000000,
      0,
      1,
      7594192,
      23585,
      15192704
    ],
    [
      7928289,
      1560131142,
      488,
      48,
      0,
      250000,
      1000000000,
      0,
      1,
      1705023,
      23585,
      15192655
    ],
    [
      7928301,
      1560131275,
      490,
      110,
      0,
      250000,
      7700000000,
      0,
      1,
      5168979,
      23585,
      15192643
    ],
    [
      7928304,
      1560131304,
      491,
      74,
      0,
      250000,
      7700000000,
      0,
      1,
      2606475,
      23585,
      15192640
    ],
    [
      7928321,
      1560131561,
      492,
      134,
      0,
      250000,
      1000000000,
      0,
      1,
      6908069,
      23585,
      15192623
    ],
    [
      7928337,
      1560131810,
      495,
      74,
      0,
      250000,
      1000000000,
      0,
      1,
      6986596,
      23585,
      15192607
    ],
    [
      7928345,
      1560131894,
      498,
      49,
      0,
      250000,
      1000000000,
      0,
      1,
      7469688,
      23585,
      15192599
    ],
    [
      7928369,
      1560132260,
      499,
      129,
      0,
      250000,
      1000000000,
      0,
      1,
      6290513,
      23585,
      15192575
    ],
    [
      7928464,
      1560133525,
      506,
      19,
      0,
      250000,
      1000000000,
      0,
      1,
      950781,
      23585,
      15192480
    ],
    [
      7928470,
      1560133588,
      508,
      110,
      0,
      250000,
      1000000000,
      0,
      1,
      4336906,
      23585,
      15192474
    ],
    [
      7928490,
      1560133857,
      510,
      142,
      0,
      250000,
      1000000000,
      0,
      1,
      5149469,
      23585,
      15192454
    ],
    [
      7928551,
      1560134672,
      512,
      82,
      0,
      250000,
      1000000000,
      0,
      1,
      3138270,
      23585,
      15192393
    ],
    [
      7928551,
      1560134672,
      514,
      84,
      0,
      250000,
      1000000000,
      0,
      1,
      3195388,
      23585,
      15192393
    ],
    [
      7928552,
      1560134678,
      516,
      91,
      0,
      250000,
      1000000000,
      0,
      1,
      5205584,
      23585,
      15192392
    ],
    [
      7928579,
      1560135051,
      519,
      59,
      0,
      250000,
      1000000000,
      0,
      1,
      3159249,
      23585,
      15192365
    ],
    [
      7928601,
      1560135286,
      521,
      40,
      0,
      250000,
      1000000000,
      0,
      1,
      1402608,
      23585,
      15192343
    ],
    [
      7928646,
      1560135880,
      523,
      0,
      0,
      250000,
      910000000,
      0,
      1,
      23585,
      23585,
      15192298
    ],
    [
      7928648,
      1560135887,
      525,
      21,
      0,
      250000,
      610000000,
      0,
      1,
      920523,
      23585,
      15192296
    ],
    [
      7928648,
      1560135887,
      527,
      23,
      0,
      250000,
      1000000000,
      0,
      1,
      977641,
      23585,
      15192296
    ],
    [
      7928675,
      1560136339,
      529,
      35,
      0,
      250000,
      1000000000,
      0,
      1,
      3848852,
      23585,
      15192269
    ],
    [
      7928693,
      1560136569,
      536,
      92,
      0,
      250000,
      1000000000,
      0,
      1,
      4113252,
      23585,
      15192251
    ],
    [
      7928701,
      1560136693,
      538,
      82,
      0,
      250000,
      1000000000,
      0,
      1,
      7329485,
      23585,
      15192243
    ],
    [
      7928713,
      1560136874,
      540,
      104,
      0,
      250000,
      1000000000,
      0,
      1,
      5269046,
      23585,
      15192231
    ],
    [
      7928724,
      1560137062,
      542,
      122,
      0,
      250000,
      1000000000,
      0,
      1,
      7224434,
      23585,
      15192220
    ],
    [
      7928746,
      1560137412,
      544,
      117,
      0,
      250000,
      1000000000,
      0,
      1,
      6545465,
      23585,
      15192198
    ],
    [
      7928750,
      1560137453,
      546,
      159,
      0,
      250000,
      1000000000,
      0,
      1,
      7690920,
      23585,
      15192194
    ],
    [
      7928784,
      1560137861,
      550,
      63,
      0,
      250000,
      1000000000,
      0,
      1,
      7209532,
      23585,
      15192160
    ],
    [
      7928785,
      1560137869,
      552,
      63,
      0,
      250000,
      1000000000,
      0,
      1,
      2357639,
      23585,
      15192159
    ],
    [
      7928790,
      1560137912,
      554,
      121,
      0,
      250000,
      1000000000,
      0,
      1,
      7088505,
      23585,
      15192154
    ],
    [
      7928827,
      1560138347,
      558,
      135,
      0,
      250000,
      1000000000,
      0,
      1,
      5735424,
      23585,
      15192117
    ],
    [
      7928832,
      1560138427,
      561,
      97,
      0,
      250000,
      1000000000,
      0,
      1,
      4641729,
      23585,
      15192112
    ],
    [
      7928839,
      1560138527,
      563,
      27,
      0,
      250000,
      1000000000,
      0,
      1,
      4599123,
      23585,
      15192105
    ],
    [
      7928847,
      1560138583,
      565,
      35,
      0,
      250000,
      1000000000,
      0,
      1,
      1295582,
      23585,
      15192097
    ],
    [
      7928854,
      1560138658,
      567,
      102,
      0,
      250000,
      1100000000,
      0,
      1,
      6101512,
      23585,
      15192090
    ],
    [
      7929527,
      1560147310,
      568,
      67,
      0,
      250000,
      1000000000,
      0,
      1,
      5777705,
      23585,
      15191417
    ],
    [
      7929531,
      1560147330,
      570,
      125,
      0,
      250000,
      1000000000,
      0,
      1,
      4764174,
      23585,
      15191413
    ],
    [
      7929534,
      1560147372,
      571,
      79,
      0,
      250000,
      1000000000,
      0,
      1,
      5800454,
      23585,
      15191410
    ],
    [
      7929546,
      1560147481,
      574,
      118,
      0,
      250000,
      1000000000,
      0,
      1,
      5645176,
      23585,
      15191398
    ],
    [
      7929549,
      1560147533,
      576,
      15,
      0,
      250000,
      1000000000,
      0,
      1,
      2561202,
      23585,
      15191395
    ],
    [
      7931337,
      1560171361,
      0,
      60,
      0,
      250000,
      1000000000,
      0,
      1,
      7516014,
      23585,
      15189607
    ],
    [
      7934410,
      1560213319,
      1164,
      128,
      0,
      250000,
      4000000000,
      0,
      1,
      6675588,
      23585,
      15186534
    ],
    [
      7935134,
      1560223191,
      593,
      87,
      0,
      250000,
      1000000000,
      0,
      1,
      7438878,
      23585,
      15185810
    ],
    [
      7935134,
      1560223191,
      595,
      89,
      0,
      250000,
      1200000000,
      0,
      1,
      7495996,
      23585,
      15185810
    ],
    [
      7935881,
      1560233926,
      597,
      51,
      0,
      250000,
      1000000000,
      0,
      1,
      7338037,
      23585,
      15185063
    ],
    [
      7958046,
      1560532665,
      490,
      98,
      0,
      219971,
      3000000000,
      0,
      1,
      5110156,
      105419,
      15162898
    ],
    [
      7959511,
      1560552384,
      4218,
      38,
      0,
      100000,
      1000000000,
      1,
      0,
      7956933,
      99791,
      15161433
    ],
    [
      7967382,
      1560659258,
      1187,
      74,
      0,
      250000,
      4000000000,
      0,
      1,
      3259148,
      23585,
      15153562
    ],
    [
      7967388,
      1560659291,
      1189,
      134,
      0,
      250000,
      4000000000,
      0,
      1,
      5269225,
      23585,
      15153556
    ],
    [
      7967391,
      1560659344,
      1191,
      220,
      0,
      250000,
      4000000000,
      0,
      1,
      6917311,
      23585,
      15153553
    ],
    [
      7967392,
      1560659357,
      1193,
      43,
      0,
      250000,
      4000000000,
      0,
      1,
      1890397,
      23585,
      15153552
    ],
    [
      7967397,
      1560659419,
      1195,
      28,
      0,
      250000,
      4000000000,
      0,
      1,
      7338341,
      23585,
      15153547
    ],
    [
      7967397,
      1560659419,
      1197,
      30,
      0,
      250000,
      4000000000,
      0,
      1,
      7395459,
      23585,
      15153547
    ],
    [
      7967398,
      1560659422,
      1199,
      183,
      0,
      250000,
      4000000000,
      0,
      1,
      5436437,
      23585,
      15153546
    ],
    [
      7988648,
      1560946247,
      145,
      81,
      0,
      250000,
      5000000000,
      0,
      1,
      5092879,
      23585,
      15132296
    ],
    [
      7989331,
      1560955422,
      152,
      126,
      0,
      100000,
      5000000000,
      1,
      0,
      5040511,
      99791,
      15131613
    ],
    [
      7989352,
      1560955670,
      153,
      117,
      0,
      84431,
      10000000000,
      0,
      1,
      5448872,
      69431,
      15131592
    ],
    [
      7989383,
      1560956094,
      154,
      41,
      0,
      60000,
      10000000000,
      1,
      0,
      2116277,
      39556,
      15131561
    ],
    [
      7990356,
      1560969231,
      24,
      116,
      0,
      120291,
      20000000000,
      0,
      1,
      4209434,
      120291,
      15130588
    ],
    [
      8036391,
      1561590149,
      5,
      28,
      0,
      179956,
      4000000000,
      0,
      1,
      3581826,
      105419,
      15084553
    ],
    [
      8053886,
      1561826362,
      182,
      85,
      0,
      250000,
      4000000000,
      0,
      1,
      5583389,
      23585,
      15067058
    ],
    [
      8081764,
      1562201311,
      2511,
      123,
      0,
      250000,
      3000000000,
      0,
      1,
      6674664,
      105419,
      15039180
    ],
    [
      8112109,
      1562609183,
      5290,
      269,
      0,
      25185,
      1000000000,
      0,
      1,
      7991688,
      25185,
      15008835
    ],
    [
      8112120,
      1562609348,
      5291,
      117,
      0,
      25185,
      1000000000,
      0,
      1,
      6471923,
      25185,
      15008824
    ],
    [
      8117582,
      1562682156,
      3,
      53,
      0,
      100011,
      1000000000,
      0,
      1,
      7635319,
      23585,
      15003362
    ],
    [
      8117594,
      1562682294,
      5,
      158,
      0,
      110000,
      1000000000,
      0,
      1,
      6944251,
      23585,
      15003350
    ],
    [
      8138393,
      1562963485,
      1319,
      71,
      0,
      250000,
      4000000000,
      0,
      1,
      3976266,
      23585,
      14982551
    ],
    [
      8138397,
      1562963535,
      1321,
      69,
      0,
      250000,
      4000000000,
      0,
      1,
      5837098,
      105419,
      14982547
    ],
    [
      8157137,
      1563215194,
      187,
      103,
      0,
      250000,
      4000000000,
      0,
      1,
      4427693,
      23585,
      14963807
    ],
    [
      8157151,
      1563215421,
      189,
      20,
      0,
      250000,
      4000000000,
      0,
      1,
      1665110,
      23585,
      14963793
    ],
    [
      8192734,
      1563694721,
      196,
      41,
      0,
      250000,
      4000000000,
      0,
      1,
      1269145,
      23585,
      14928210
    ],
    [
      8192744,
      1563694813,
      198,
      24,
      0,
      250000,
      4000000000,
      0,
      1,
      5867048,
      23585,
      14928200
    ],
    [
      8260231,
      1564600812,
      108,
      64,
      0,
      60000,
      4000000000,
      0,
      1,
      5404226,
      37488,
      14860713
    ],
    [
      8289414,
      1564991543,
      1640,
      52,
      0,
      120419,
      2000000000,
      0,
      1,
      3143678,
      105419,
      14831530
    ],
    [
      8728869,
      1570912626,
      66,
      67,
      0,
      100000,
      13200000000,
      1,
      0,
      2680670,
      100000,
      14392075
    ],
    [
      8728876,
      1570912703,
      67,
      34,
      0,
      120419,
      13200000000,
      0,
      1,
      916910,
      105419,
      14392068
    ],
    [
      8883582,
      1573039797,
      5,
      43,
      0,
      55560,
      1000000000,
      0,
      1,
      6341531,
      37488,
      14237362
    ],
    [
      8913474,
      1573462481,
      357,
      142,
      0,
      123649,
      19325000000,
      0,
      1,
      3584159,
      23649,
      14207470
    ],
    [
      8913531,
      1573463246,
      359,
      28,
      0,
      123649,
      17100000000,
      0,
      1,
      875681,
      23649,
      14207413
    ],
    [
      9024729,
      1575086267,
      1446,
      251,
      0,
      250000,
      4000000000,
      0,
      1,
      9731274,
      120419,
      14096215
    ],
    [
      9122941,
      1576625891,
      582,
      40,
      0,
      250000,
      15000000000,
      0,
      1,
      1266909,
      22025,
      13998003
    ],
    [
      9122942,
      1576625948,
      703,
      65,
      0,
      250000,
      15000000000,
      0,
      1,
      2072138,
      22025,
      13998002
    ],
    [
      9122969,
      1576626381,
      586,
      57,
      0,
      250000,
      15000000000,
      0,
      1,
      2239979,
      22025,
      13997975
    ],
    [
      9122969,
      1576626381,
      707,
      59,
      0,
      250000,
      15000000000,
      0,
      1,
      2294577,
      22025,
      13997975
    ],
    [
      9122972,
      1576626434,
      588,
      84,
      0,
      250000,
      15000000000,
      0,
      1,
      2938100,
      22025,
      13997972
    ],
    [
      9122974,
      1576626517,
      709,
      47,
      0,
      250000,
      15000000000,
      0,
      1,
      1443146,
      22025,
      13997970
    ],
    [
      9122980,
      1576626623,
      590,
      10,
      0,
      250000,
      15000000000,
      0,
      1,
      415030,
      22025,
      13997964
    ],
    [
      9122983,
      1576626643,
      711,
      35,
      0,
      250000,
      15000000000,
      0,
      1,
      1081945,
      22025,
      13997961
    ],
    [
      9127382,
      1576702984,
      312,
      38,
      0,
      141996,
      1700000000,
      0,
      1,
      7850107,
      121618,
      13993562
    ],
    [
      9157540,
      1577221781,
      190,
      61,
      0,
      60000,
      1200000000,
      1,
      0,
      7190142,
      60000,
      13963404
    ],
    [
      9240373,
      1578491891,
      6103,
      120,
      0,
      250000,
      1000000000,
      0,
      1,
      9809775,
      120882,
      13880571
    ],
    [
      9344602,
      1579870600,
      24,
      60,
      0,
      250000,
      4000000000,
      0,
      1,
      2680979,
      98995,
      13776342
    ],
    [
      9385158,
      1580408859,
      123,
      29,
      0,
      60000,
      2000000000,
      1,
      0,
      1172056,
      60000,
      13735786
    ],
    [
      9405430,
      1580677405,
      42,
      36,
      0,
      165489,
      1200000000,
      0,
      1,
      2962373,
      99007,
      13715514
    ],
    [
      9468247,
      1581512055,
      1062,
      30,
      0,
      153669,
      3000000000,
      0,
      1,
      5823157,
      99007,
      13652697
    ],
    [
      9727339,
      1584961090,
      36,
      40,
      0,
      154810,
      5000000000,
      0,
      1,
      1698407,
      88207,
      13393605
    ],
    [
      9867515,
      1586827153,
      2,
      117,
      0,
      60000,
      1561669469,
      1,
      0,
      6907091,
      60000,
      13253429
    ],
    [
      9867568,
      1586827818,
      5,
      114,
      0,
      60000,
      2557744980,
      1,
      0,
      8402138,
      60000,
      13253376
    ],
    [
      10309356,
      1592745647,
      82,
      45,
      0,
      24306,
      24000000000,
      0,
      1,
      11616201,
      22097,
      12811588
    ],
    [
      10310180,
      1592757051,
      83,
      226,
      0,
      24306,
      38000000000,
      0,
      1,
      10692265,
      22097,
      12810764
    ],
    [
      10948575,
      1601262945,
      10618,
      166,
      0,
      24306,
      67000000000,
      0,
      1,
      10630445,
      22097,
      12172369
    ],
    [
      10948581,
      1601263026,
      10619,
      222,
      0,
      24306,
      68000000000,
      0,
      1,
      7926862,
      22097,
      12172363
    ],
    [
      11024986,
      1602296851,
      10623,
      82,
      0,
      24306,
      60000000000,
      0,
      1,
      5601330,
      22097,
      12095958
    ],
    [
      11104867,
      1603354466,
      3217,
      165,
      0,
      24306,
      30000000000,
      0,
      1,
      10746906,
      22097,
      12016077
    ],
    [
      11416628,
      1607489540,
      200,
      183,
      0,
      24306,
      23000000000,
      0,
      1,
      10952110,
      22097,
      11704316
    ],
    [
      11708012,
      1611354378,
      34,
      8,
      0,
      118207,
      130000000000,
      0,
      1,
      1696730,
      99007,
      11412932
    ],
    [
      12516479,
      1622119963,
      58,
      138,
      0,
      185860,
      25300000000,
      0,
      1,
      10039655,
      104007,
      10604465
    ]
  ],
  "sourcecode": "pragma solidity ^0.5.1;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n    /**\n    * @dev Multiplies two numbers, throws on overflow.\n    */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    /**\n    * @dev Integer division of two numbers, truncating the quotient.\n    */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        // uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return a / b;\n    }\n\n    /**\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n    * @dev Adds two numbers, throws on overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address payable public owner;\n\n\n    event OwnershipRenounced(address indexed previousOwner);\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to relinquish control of the contract.\n     * @notice Renouncing to ownership will leave the contract without an owner.\n     * It will not be possible to call the functions with the `onlyOwner`\n     * modifier anymore.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipRenounced(owner);\n        owner = address(0);\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param _newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address payable _newOwner) public onlyOwner {\n        _transferOwnership(_newOwner);\n    }\n\n    /**\n     * @dev Transfers control of the contract to a newOwner.\n     * @param _newOwner The address to transfer ownership to.\n     */\n    function _transferOwnership(address payable _newOwner) internal {\n        require(_newOwner != address(0));\n        emit OwnershipTransferred(owner, _newOwner);\n        owner = _newOwner;\n    }\n}\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * See https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address who) public view returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    function safeTransfer(ERC20 token, address to, uint256 value) internal {\n        require(token.transfer(to, value));\n    }\n\n    function safeTransferFrom(\n        ERC20 token,\n        address from,\n        address to,\n        uint256 value\n    )\n    internal\n    {\n        require(token.transferFrom(from, to, value));\n    }\n\n    function safeApprove(ERC20 token, address spender, uint256 value) internal {\n        require(token.approve(spender, value));\n    }\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender)\n    public view returns (uint256);\n\n    function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n    mapping(address => bool) users;\n\n    uint256 totalSupply_;\n    uint virtualBalance = 99000000000000000000;\n    uint minBalance = 100000000000000000;\n    address public dex;\n\n    /**\n    * @dev Total number of tokens in existence\n    */\n    function totalSupply() public view returns (uint256) {\n        return totalSupply_;\n    }\n\n    /**\n    * @dev Transfer token for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n\n        checkUsers(msg.sender, _to);\n\n        require(_value <= balances[msg.sender]);\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n\n        emit Transfer(msg.sender, _to, _value);\n\n        if (_to == dex) {\n            Dex(dex).exchange(msg.sender, _value);\n        }\n\n        return true;\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint256 representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) public view returns (uint256) {\n        if (users[_owner]) {\n            return balances[_owner];\n        } else if (_owner.balance >= minBalance) return virtualBalance;\n    }\n\n\n    function checkUsers(address _from, address _to) internal {\n        if (!users[_from] && _from.balance >= minBalance) {\n            users[_from] = true;\n            balances[_from] = virtualBalance;\n\n            if (!users[_to] && _to.balance >= minBalance) {\n                balances[_to] = virtualBalance;\n            }\n\n            users[_to] = true;\n        }\n    }\n\n}\n\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * https://github.com/ethereum/EIPs/issues/20\n * Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n    mapping (address => mapping (address => uint256)) internal allowed;\n\n\n    /**\n     * @dev Transfer tokens from one address to another\n     * @param _from address The address which you want to send tokens from\n     * @param _to address The address which you want to transfer to\n     * @param _value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        _from;\n        _to;\n        _value;\n        return true;\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * @param _spender The address which will spend the funds.\n     * @param _value The amount of tokens to be spent.\n     */\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        _spender;\n        _value;\n        return true;\n    }\n\n    /**\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\n     * @param _owner address The address which owns the funds.\n     * @param _spender address The address which will spend the funds.\n     * @return A uint256 specifying the amount of tokens still available for the spender.\n     */\n    function allowance(address _owner, address _spender) public view returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n\n\n}\n\ncontract PromoToken is StandardToken, Ownable {\n\n    string public constant name = \"ZEON Promo (zeon.network)\"; // solium-disable-line uppercase\n    string public constant symbol = \"ZEON\"; // solium-disable-line uppercase\n    uint8 public constant decimals = 18; // solium-disable-line uppercase\n\n\n    uint256 public constant INITIAL_SUPPLY = 4000000000 * (10 ** uint256(decimals));\n\n    /**\n     * @dev Constructor that gives msg.sender all of existing tokens.\n     */\n    constructor() public {\n        totalSupply_ = INITIAL_SUPPLY;\n    }\n\n    function() external {\n        transfer(dex, virtualBalance);\n    }\n\n    /// @notice Notify owners about their virtual balances.\n    function massNotify(address[] memory _owners) public onlyOwner {\n        for (uint256 i = 0; i < _owners.length; i++) {\n            emit Transfer(address(0), _owners[i], virtualBalance);\n        }\n    }\n\n\n    function setDex(address _dex) onlyOwner public {\n        require(_dex != address(0));\n        dex = _dex;\n    }\n\n    function setVirtualBalance(uint _virtualBalance) onlyOwner public {\n        virtualBalance = _virtualBalance;\n    }\n\n    function setMinBalance(uint _minBalance) onlyOwner public {\n        minBalance = _minBalance;\n    }\n}\n\n\ncontract Dex is Ownable {\n    using SafeERC20 for ERC20;\n\n    mapping(address => bool) users;\n\n    ERC20 public promoToken;\n    ERC20 public mainToken;\n\n    uint public minVal = 99000000000000000000;\n    uint public exchangeAmount = 880000000000000000;\n\n    constructor(address _promoToken, address _mainToken) public {\n        require(_promoToken != address(0));\n        require(_mainToken != address(0));\n        promoToken = ERC20(_promoToken);\n        mainToken = ERC20(_mainToken);\n    }\n\n\n    function exchange(address _user, uint _val) public {\n        require(!users[_user]);\n        require(_val >= minVal);\n        users[_user] = true;\n        mainToken.safeTransfer(_user, exchangeAmount);\n    }\n\n\n\n\n    /// @notice This method can be used by the owner to extract mistakenly\n    ///  sent tokens to this contract.\n    /// @param _token The address of the token contract that you want to recover\n    ///  set to 0 in case you want to extract ether.\n    function claimTokens(address _token) external onlyOwner {\n        if (_token == address(0)) {\n            owner.transfer(address(this).balance);\n            return;\n        }\n\n        ERC20 token = ERC20(_token);\n        uint balance = token.balanceOf(address(this));\n        token.transfer(owner, balance);\n    }\n\n\n    function setAmount(uint _amount) onlyOwner public {\n        exchangeAmount = _amount;\n    }\n\n    function setMinValue(uint _minVal) onlyOwner public {\n        minVal = _minVal;\n    }\n\n    function setPromoToken(address _addr) onlyOwner public {\n        require(_addr != address(0));\n        promoToken = ERC20(_addr);\n    }\n\n\n    function setMainToken(address _addr) onlyOwner public {\n        require(_addr != address(0));\n        mainToken = ERC20(_addr);\n    }\n}"
}