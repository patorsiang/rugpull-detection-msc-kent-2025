{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH29 SWAP1 DIV PUSH4 AND DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH1 AND PUSH1 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST PUSH1 DUP1 PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SWAP2 POP DUP2 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI PUSH2 JUMP JUMPDEST JUMPDEST PUSH1 PUSH20 AND PUSH1 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ ISZERO DUP1 ISZERO PUSH2 JUMPI POP CALLER PUSH20 AND PUSH1 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ ISZERO JUMPDEST ISZERO PUSH2 JUMPI PUSH1 PUSH1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND SWAP3 POP PUSH2 JUMP JUMPDEST CALLER PUSH20 AND DUP4 PUSH20 AND EQ ISZERO PUSH2 JUMPI PUSH2 JUMP JUMPDEST PUSH1 DUP3 PUSH1 ADD PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP3 PUSH1 ADD PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH1 PUSH1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SWAP1 POP DUP1 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO PUSH2 JUMPI DUP2 PUSH1 ADD SLOAD PUSH1 DUP3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND PUSH1 AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 ADD PUSH1 ADD PUSH1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 JUMP JUMPDEST DUP2 PUSH1 ADD SLOAD DUP2 PUSH1 ADD PUSH1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP1 SWAP2 POP PUSH1 SWAP1 POP JUMPDEST PUSH1 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 AND LT ISZERO PUSH2 JUMPI DUP2 PUSH1 DUP3 PUSH1 AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 ADD PUSH1 ADD SLOAD GT ISZERO PUSH2 JUMPI PUSH1 DUP2 PUSH1 AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 ADD PUSH1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 ADD SWAP2 POP POP PUSH2 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST CALLER PUSH1 DUP1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH1 DUP1 PUSH1 DUP1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 AND PUSH1 DUP2 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND JUMPDEST ISZERO PUSH2 JUMPI PUSH2 JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SWAP1 POP DUP1 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND DUP1 PUSH2 JUMPI POP PUSH1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 AND LT ISZERO JUMPDEST ISZERO PUSH2 JUMPI PUSH2 JUMP JUMPDEST PUSH1 DUP2 PUSH1 ADD PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 ADD PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 PUSH1 AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 ADD SLOAD PUSH1 DUP4 PUSH1 AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 ADD PUSH1 ADD PUSH1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 JUMPI DUP2 DUP4 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP1 DUP3 ADD PUSH1 SWAP1 SSTORE POP PUSH1 ADD PUSH2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 SHA3 PUSH27 INVALID_0x7a",
  "opcode_entropy": 4.582666643609892,
  "opcode_count": 1039,
  "unique_opcodes": 47,
  "byte_entropy": 4.254671364677142,
  "byte_60": 0.07446808510638298,
  "byte_80": 0.024514338575393153,
  "byte_40": 0.0013876040703052729,
  "byte_52": 0.012025901942645698,
  "byte_04": 0.010638297872340425,
  "byte_36": 0.002312673450508788,
  "byte_10": 0.0037002775208140612,
  "byte_61": 0.03145235892691952,
  "byte_00": 0.05689176688251619,
  "byte_6d": 0.00046253469010175765,
  "byte_57": 0.014338575393154487,
  "byte_35": 0.002312673450508788,
  "byte_7c": 0.00046253469010175765,
  "byte_01": 0.05272895467160037,
  "byte_90": 0.04070305272895467,
  "byte_63": 0.0027752081406105457,
  "byte_ff": 0.35337650323774283,
  "byte_16": 0.027752081406105456,
  "byte_5c": 0.0009250693802035153,
  "byte_19": 0.0032377428307123032,
  "byte_a9": 0.00046253469010175765,
  "byte_14": 0.005087881591119334,
  "byte_72": 0.0009250693802035153,
  "byte_9f": 0.0013876040703052729,
  "byte_f1": 0.00046253469010175765,
  "byte_bd": 0.00046253469010175765,
  "byte_b5": 0.00046253469010175765,
  "byte_94": 0.00046253469010175765,
  "byte_0f": 0.00046253469010175765,
  "byte_85": 0.0013876040703052729,
  "byte_1c": 0.00046253469010175765,
  "byte_e6": 0.00046253469010175765,
  "byte_9e": 0.0009250693802035153,
  "byte_7b": 0.00046253469010175765,
  "byte_8d": 0.00046253469010175765,
  "byte_b3": 0.0009250693802035153,
  "byte_f9": 0.00046253469010175765,
  "byte_8a": 0.00046253469010175765,
  "byte_dc": 0.0009250693802035153,
  "byte_59": 0.00046253469010175765,
  "byte_5b": 0.02312673450508788,
  "byte_fd": 0.0027752081406105457,
  "byte_34": 0.002312673450508788,
  "byte_15": 0.014801110083256245,
  "byte_7e": 0.00046253469010175765,
  "byte_50": 0.030064754856614247,
  "byte_03": 0.0037002775208140612,
  "byte_81": 0.028677150786308975,
  "byte_73": 0.01757631822386679,
  "byte_20": 0.019888991674375578,
  "byte_92": 0.004162812210915819,
  "byte_91": 0.006938020351526364,
  "byte_89": 0.00046253469010175765,
  "byte_56": 0.010638297872340425,
  "byte_c1": 0.00046253469010175765,
  "byte_ca": 0.00046253469010175765,
  "byte_db": 0.00046253469010175765,
  "byte_51": 0.0009250693802035153,
  "byte_82": 0.00786308973172988,
  "byte_f3": 0.0009250693802035153,
  "byte_f2": 0.00046253469010175765,
  "byte_05": 0.002312673450508788,
  "byte_22": 0.00046253469010175765,
  "byte_06": 0.0018501387604070306,
  "byte_65": 0.0009250693802035153,
  "byte_87": 0.00046253469010175765,
  "byte_07": 0.0032377428307123032,
  "byte_11": 0.0018501387604070306,
  "byte_33": 0.0032377428307123032,
  "byte_54": 0.013876040703052728,
  "byte_0a": 0.006938020351526364,
  "byte_e9": 0.00046253469010175765,
  "byte_d6": 0.0009250693802035153,
  "byte_02": 0.00971322849213691,
  "byte_17": 0.0027752081406105457,
  "byte_86": 0.00046253469010175765,
  "byte_84": 0.0013876040703052729,
  "byte_ea": 0.00046253469010175765,
  "byte_83": 0.005087881591119334,
  "byte_bf": 0.00046253469010175765,
  "byte_55": 0.005550416281221091,
  "byte_be": 0.00046253469010175765,
  "byte_fe": 0.0018501387604070306,
  "byte_d5": 0.00046253469010175765,
  "byte_0b": 0.00046253469010175765,
  "byte_45": 0.00046253469010175765,
  "byte_31": 0.0009250693802035153,
  "byte_e8": 0.00046253469010175765,
  "byte_bc": 0.00046253469010175765,
  "byte_c6": 0.00046253469010175765,
  "byte_0e": 0.00046253469010175765,
  "byte_79": 0.00046253469010175765,
  "byte_ef": 0.00046253469010175765,
  "byte_d4": 0.00046253469010175765,
  "byte_08": 0.0027752081406105457,
  "byte_1a": 0.00046253469010175765,
  "byte_1f": 0.00046253469010175765,
  "byte_43": 0.00046253469010175765,
  "byte_3f": 0.00046253469010175765,
  "byte_25": 0.00046253469010175765,
  "byte_a1": 0.00046253469010175765,
  "byte_62": 0.00046253469010175765,
  "byte_7a": 0.0018501387604070306,
  "byte_30": 0.00046253469010175765,
  "byte_58": 0.00046253469010175765,
  "byte_78": 0.00046253469010175765,
  "byte_37": 0.00046253469010175765,
  "byte_67": 0.0009250693802035153,
  "byte_5f": 0.00046253469010175765,
  "byte_f8": 0.00046253469010175765,
  "byte_a8": 0.00046253469010175765,
  "byte_64": 0.00046253469010175765,
  "byte_c8": 0.00046253469010175765,
  "byte_3b": 0.00046253469010175765,
  "byte_0d": 0.00046253469010175765,
  "byte_77": 0.00046253469010175765,
  "byte_48": 0.00046253469010175765,
  "byte_ed": 0.00046253469010175765,
  "byte_c5": 0.00046253469010175765,
  "byte_f0": 0.00046253469010175765,
  "byte_b9": 0.00046253469010175765,
  "byte_95": 0.00046253469010175765,
  "byte_a0": 0.00046253469010175765,
  "byte_42": 0.00046253469010175765,
  "byte_29": 0.00046253469010175765,
  "num_nodes": 2,
  "num_edges": 1,
  "avg_degree": 1.0,
  "density": 0.5,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 2,
  "event_nums": 0,
  "creation_block": 5671848,
  "creation_timestamp": 1527213272,
  "life_time": 5653.0,
  "duration_seconds": 87378.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 3,
  "num_buyers": 1,
  "num_sellers": 1,
  "num_creator_transfers": 0,
  "buy_amt": 0,
  "sell_amt": 0.0,
  "avg_value": 0.0,
  "txn_per_block": 0.00035373187124159886,
  "avg_gas_limit": 347172.5,
  "std_gas_limit": 279631.5,
  "avg_gas_used": 347172.5,
  "std_gas_used": 279631.5,
  "avg_gas_price": 4500000000.0,
  "std_gas_price": 1500000000.0,
  "atinversebrah_num": 1,
  "ballot_num": 1,
  "timeline_sequence": [
    [
      5671848,
      1527213272,
      0,
      105,
      0,
      626804,
      6000000000,
      0,
      1,
      7468986,
      626804,
      17449102
    ],
    [
      5677501,
      1527300650,
      1,
      107,
      0,
      67541,
      3000000000,
      0,
      1,
      7992989,
      67541,
      17443449
    ]
  ],
  "sourcecode": "pragma solidity ^0.4.0;\ncontract BTC666 {\n\n    struct Voter {\n        uint weight;\n        bool voted;\n        uint8 vote;\n        address delegate;\n    }\n    struct Proposal {\n        uint voteCount;\n    }\n\n    address chairperson;\n    mapping(address => Voter) voters;\n    Proposal[] proposals;\n\n    /// Create a new ballot with $(_numProposals) different proposals.\n    function Ballot(uint8 _numProposals) public {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 1;\n        proposals.length = _numProposals;\n    }\n\n    /// Give $(toVoter) the right to vote on this ballot.\n    /// May only be called by $(chairperson).\n    function giveRightToVote(address toVoter) public {\n        if (msg.sender != chairperson || voters[toVoter].voted) return;\n        voters[toVoter].weight = 1;\n    }\n\n    /// Delegate your vote to the voter $(to).\n    function delegate(address to) public {\n        Voter storage sender = voters[msg.sender]; // assigns reference\n        if (sender.voted) return;\n        while (voters[to].delegate != address(0) && voters[to].delegate != msg.sender)\n            to = voters[to].delegate;\n        if (to == msg.sender) return;\n        sender.voted = true;\n        sender.delegate = to;\n        Voter storage delegateTo = voters[to];\n        if (delegateTo.voted)\n            proposals[delegateTo.vote].voteCount += sender.weight;\n        else\n            delegateTo.weight += sender.weight;\n    }\n\n    /// Give a single vote to proposal $(toProposal).\n    function vote(uint8 toProposal) public {\n        Voter storage sender = voters[msg.sender];\n        if (sender.voted || toProposal >= proposals.length) return;\n        sender.voted = true;\n        sender.vote = toProposal;\n        proposals[toProposal].voteCount += sender.weight;\n    }\n\n    function winningProposal() public constant returns (uint8 _winningProposal) {\n        uint256 winningVoteCount = 0;\n        for (uint8 prop = 0; prop < proposals.length; prop++)\n            if (proposals[prop].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[prop].voteCount;\n                _winningProposal = prop;\n            }\n    }\n}"
}