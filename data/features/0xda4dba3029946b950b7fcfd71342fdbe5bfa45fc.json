{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH1 SHR DUP1 PUSH4 GT PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI PUSH2 JUMP JUMPDEST DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 CALLVALUE GT PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD EQ ISZERO PUSH2 JUMPI PUSH1 PUSH1 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH4 AND DUP1 SWAP3 SWAP2 SWAP1 PUSH1 ADD SWAP2 SWAP1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH4 MUL NOT AND SWAP1 DUP4 PUSH4 AND MUL OR SWAP1 SSTORE POP POP JUMPDEST CALLVALUE PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 AND PUSH32 CALLVALUE PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH1 AND PUSH1 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH4 AND PUSH4 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB PUSH1 DUP2 LT ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO PUSH2 JUMPI PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH1 DUP1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP4 PUSH20 AND EQ ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 PUSH1 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 AND PUSH32 DUP4 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND DUP4 PUSH20 AND EQ ISZERO PUSH2 JUMPI PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH2 DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP PUSH2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND PUSH1 AND DUP5 MUL DUP2 PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV SWAP1 POP DUP1 DUP4 SUB SWAP3 POP DUP4 PUSH20 AND PUSH2 DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH2 DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH4 AND DUP2 JUMP JUMPDEST PUSH1 DUP1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP5 PUSH20 AND EQ ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH20 AND DUP4 PUSH20 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH1 DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 PUSH1 PUSH1 DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 AND DUP5 PUSH20 AND PUSH32 DUP5 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 PUSH1 PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND PUSH1 AND DUP5 MUL DUP2 PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DIV SWAP1 POP DUP1 DUP4 SUB SWAP3 POP DUP3 PUSH1 PUSH1 DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH2 DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 JUMPI RETURNDATASIZE PUSH1 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 REVERT JUMPDEST POP PUSH1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP UNKNOWN_0xfe LOG1 PUSH6 SHA3 UNKNOWN_0xeb PUSH7 DUP14 SWAP4 BASEFEE UNKNOWN_0x23 UNKNOWN_0xe6 UNKNOWN_0xb4 RETURNDATASIZE UNKNOWN_0xf8 OR DUP15 UNKNOWN_0x22 UNKNOWN_0xf9 DUP3 UNKNOWN_0x5c CREATE2 DUP3 UNKNOWN_0xdb PUSH6 UNKNOWN_0x29",
  "opcode_entropy": 4.904498941821264,
  "opcode_count": 1345,
  "unique_opcodes": 69,
  "byte_entropy": 4.399217822117712,
  "byte_60": 0.05827505827505827,
  "byte_80": 0.030969030969030968,
  "byte_40": 0.008991008991008992,
  "byte_52": 0.008658008658008658,
  "byte_04": 0.007992007992007992,
  "byte_36": 0.001998001998001998,
  "byte_10": 0.001998001998001998,
  "byte_61": 0.02564102564102564,
  "byte_00": 0.03296703296703297,
  "byte_70": 0.000999000999000999,
  "byte_57": 0.01332001332001332,
  "byte_35": 0.002664002664002664,
  "byte_e0": 0.000333000333000333,
  "byte_1c": 0.000333000333000333,
  "byte_63": 0.004662004662004662,
  "byte_c6": 0.000999000999000999,
  "byte_06": 0.002331002331002331,
  "byte_62": 0.001332001332001332,
  "byte_72": 0.000999000999000999,
  "byte_11": 0.002331002331002331,
  "byte_4e": 0.000333000333000333,
  "byte_14": 0.006327006327006327,
  "byte_02": 0.009657009657009658,
  "byte_6b": 0.000333000333000333,
  "byte_dd": 0.000666000666000666,
  "byte_ca": 0.000333000333000333,
  "byte_3f": 0.000666000666000666,
  "byte_43": 0.000666000666000666,
  "byte_de": 0.000333000333000333,
  "byte_f2": 0.000333000333000333,
  "byte_75": 0.000333000333000333,
  "byte_03": 0.012321012321012322,
  "byte_0f": 0.000666000666000666,
  "byte_f7": 0.000666000666000666,
  "byte_0c": 0.000333000333000333,
  "byte_b2": 0.000333000333000333,
  "byte_f1": 0.001665001665001665,
  "byte_46": 0.000666000666000666,
  "byte_56": 0.005328005328005328,
  "byte_5b": 0.018648018648018648,
  "byte_42": 0.000333000333000333,
  "byte_33": 0.002664002664002664,
  "byte_01": 0.024309024309024308,
  "byte_9e": 0.000999000999000999,
  "byte_79": 0.000999000999000999,
  "byte_ba": 0.000333000333000333,
  "byte_50": 0.031302031302031304,
  "byte_97": 0.000333000333000333,
  "byte_a6": 0.000999000999000999,
  "byte_f9": 0.000999000999000999,
  "byte_da": 0.000666000666000666,
  "byte_e1": 0.000333000333000333,
  "byte_1a": 0.000333000333000333,
  "byte_34": 0.003663003663003663,
  "byte_7d": 0.000666000666000666,
  "byte_fd": 0.006993006993006993,
  "byte_73": 0.01998001998001998,
  "byte_ff": 0.39693639693639693,
  "byte_16": 0.023643023643023644,
  "byte_81": 0.019647019647019648,
  "byte_20": 0.013986013986013986,
  "byte_90": 0.036297036297036296,
  "byte_54": 0.008325008325008326,
  "byte_15": 0.015318015318015318,
  "byte_0a": 0.005994005994005994,
  "byte_92": 0.005328005328005328,
  "byte_91": 0.00999000999000999,
  "byte_19": 0.001665001665001665,
  "byte_83": 0.005328005328005328,
  "byte_17": 0.001332001332001332,
  "byte_55": 0.002664002664002664,
  "byte_82": 0.009657009657009658,
  "byte_7f": 0.001332001332001332,
  "byte_71": 0.000333000333000333,
  "byte_bc": 0.000666000666000666,
  "byte_8e": 0.001332001332001332,
  "byte_ea": 0.000666000666000666,
  "byte_39": 0.000333000333000333,
  "byte_69": 0.000999000999000999,
  "byte_f5": 0.000999000999000999,
  "byte_09": 0.001998001998001998,
  "byte_8f": 0.000333000333000333,
  "byte_2d": 0.000333000333000333,
  "byte_af": 0.000333000333000333,
  "byte_b9": 0.000666000666000666,
  "byte_25": 0.000333000333000333,
  "byte_45": 0.000333000333000333,
  "byte_32": 0.000333000333000333,
  "byte_db": 0.000999000999000999,
  "byte_b6": 0.000333000333000333,
  "byte_7b": 0.000666000666000666,
  "byte_d3": 0.000333000333000333,
  "byte_4a": 0.000333000333000333,
  "byte_5f": 0.000333000333000333,
  "byte_3d": 0.003663003663003663,
  "byte_51": 0.007992007992007992,
  "byte_a2": 0.000666000666000666,
  "byte_aa": 0.000333000333000333,
  "byte_ed": 0.000333000333000333,
  "byte_c1": 0.000333000333000333,
  "byte_d9": 0.000333000333000333,
  "byte_f3": 0.001998001998001998,
  "byte_18": 0.000666000666000666,
  "byte_22": 0.000666000666000666,
  "byte_26": 0.000333000333000333,
  "byte_77": 0.000333000333000333,
  "byte_c4": 0.000333000333000333,
  "byte_05": 0.001332001332001332,
  "byte_7a": 0.000999000999000999,
  "byte_08": 0.00333000333000333,
  "byte_1b": 0.000666000666000666,
  "byte_24": 0.000333000333000333,
  "byte_bf": 0.000333000333000333,
  "byte_cf": 0.000333000333000333,
  "byte_d5": 0.000999000999000999,
  "byte_12": 0.000333000333000333,
  "byte_5d": 0.000333000333000333,
  "byte_84": 0.002997002997002997,
  "byte_66": 0.000999000999000999,
  "byte_85": 0.001998001998001998,
  "byte_47": 0.000666000666000666,
  "byte_d8": 0.000333000333000333,
  "byte_e6": 0.000666000666000666,
  "byte_0b": 0.000666000666000666,
  "byte_ef": 0.000333000333000333,
  "byte_0d": 0.000333000333000333,
  "byte_ad": 0.000333000333000333,
  "byte_b8": 0.000333000333000333,
  "byte_3e": 0.001665001665001665,
  "byte_28": 0.000333000333000333,
  "byte_8d": 0.000666000666000666,
  "byte_4c": 0.000333000333000333,
  "byte_76": 0.000333000333000333,
  "byte_07": 0.000999000999000999,
  "byte_c3": 0.000333000333000333,
  "byte_fc": 0.001332001332001332,
  "byte_88": 0.002664002664002664,
  "byte_93": 0.001998001998001998,
  "byte_bd": 0.000333000333000333,
  "byte_9c": 0.000333000333000333,
  "byte_64": 0.000666000666000666,
  "byte_e3": 0.000333000333000333,
  "byte_fe": 0.000999000999000999,
  "byte_31": 0.000333000333000333,
  "byte_99": 0.000333000333000333,
  "byte_2a": 0.000333000333000333,
  "byte_94": 0.000999000999000999,
  "byte_a0": 0.000333000333000333,
  "byte_eb": 0.000666000666000666,
  "byte_f4": 0.000333000333000333,
  "byte_86": 0.000666000666000666,
  "byte_89": 0.000333000333000333,
  "byte_30": 0.000666000666000666,
  "byte_ac": 0.000333000333000333,
  "byte_cb": 0.000333000333000333,
  "byte_1f": 0.000333000333000333,
  "byte_c0": 0.000333000333000333,
  "byte_13": 0.000333000333000333,
  "byte_98": 0.000333000333000333,
  "byte_ae": 0.000333000333000333,
  "byte_74": 0.000333000333000333,
  "byte_38": 0.000333000333000333,
  "byte_3b": 0.000333000333000333,
  "byte_fb": 0.000333000333000333,
  "byte_5c": 0.000666000666000666,
  "byte_bb": 0.000666000666000666,
  "byte_a3": 0.000333000333000333,
  "byte_a1": 0.000333000333000333,
  "byte_65": 0.000999000999000999,
  "byte_58": 0.000333000333000333,
  "byte_b4": 0.000666000666000666,
  "byte_5a": 0.000333000333000333,
  "byte_c8": 0.000333000333000333,
  "byte_a5": 0.000333000333000333,
  "byte_48": 0.000333000333000333,
  "byte_23": 0.000333000333000333,
  "byte_f8": 0.000333000333000333,
  "byte_cd": 0.000333000333000333,
  "byte_29": 0.000333000333000333,
  "num_nodes": 3,
  "num_edges": 2,
  "avg_degree": 1.3333333333333333,
  "density": 0.3333333333333333,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 2,
  "event_nums": 1,
  "creation_block": 7700497,
  "creation_timestamp": 1557054251,
  "life_time": 21.0,
  "duration_seconds": 189.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 4,
  "num_buyers": 1,
  "num_sellers": 2,
  "num_creator_transfers": 0,
  "buy_amt": 0,
  "sell_amt": 1024480000000000.0,
  "avg_value": 341493333333333.3,
  "txn_per_block": 0.09090909090909091,
  "avg_gas_limit": 496337.0,
  "std_gas_limit": 447561.0,
  "avg_gas_used": 496337.0,
  "std_gas_used": 447561.0,
  "avg_gas_price": 11500000000.0,
  "std_gas_price": 8500000000.0,
  "staked_num": 1,
  "atinversebrah_num": 1,
  "timeline_sequence": [
    [
      7700497,
      1557054251,
      190,
      102,
      0,
      943898,
      3000000000,
      0,
      1,
      5995080,
      943898,
      15420455
    ],
    [
      7700518,
      1557054440,
      3,
      21,
      1024480000000000,
      48776,
      20000000000,
      0,
      1,
      856894,
      48776,
      15420434
    ]
  ],
  "sourcecode": "pragma solidity ^0.5.8;\n\ncontract Owned {\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n    address payable owner;\n    address payable newOwner;\n    function changeOwner(address payable _newOwner) public onlyOwner {\n        newOwner = _newOwner;\n    }\n    function acceptOwnership() public {\n        if (msg.sender == newOwner) {\n            owner = newOwner;\n        }\n    }\n}\n\ncontract Stake is Owned {\n    uint8 public fee;\n    uint32 public users;\n    string domain;\n    mapping (address=>uint256) stakes;\n    event Staked(address indexed _from, uint256 _value);\n    event Transfered(address indexed _from, address indexed _to, uint256 _value);\n    event Withdrawn(address indexed _from, uint256 _value);\n    function stakeOf(address _user) view public returns (uint256 stake) {return stakes[_user];}\n    function transferStake(address _from, address _to, uint256 _amount) public onlyOwner returns (bool ok){\n        require(_from!=address(0)&&_to!=address(0)&&_amount>0&&_amount<=stakes[_from]);\n        stakes[_from]-=_amount;\n        emit Transfered(_from,_to,_amount);\n        uint256 fees = _amount*fee/100;\n        _amount-=fees;\n        stakes[_to]+=_amount;\n        owner.transfer(fees);\n        return true;\n    }\n    function withdrawStake(address payable _from, uint256 _amount) public onlyOwner returns (bool ok){\n        require(_from!=address(0)&&_amount>0&&_amount<=stakes[_from]);\n        stakes[_from]-=_amount;\n        emit Withdrawn(_from,_amount);\n        if (_from==owner) owner.transfer(_amount);\n        else {\n            uint256 fees = _amount*fee/100;\n            _amount-=fees;\n            _from.transfer(_amount);\n            owner.transfer(fees);\n        }\n        return true;\n    }\n}\n\ncontract EtherBox is Stake{\n    \n    constructor() public{\n        fee = 1;\n        users = 0;\n        domain = 'www.etherbox.io';\n        owner = msg.sender;\n    }\n    \n    function () payable external {\n        require(msg.value>0);\n        if (stakes[msg.sender]==0) users++;\n        stakes[msg.sender]+=msg.value;\n        emit Staked(msg.sender,msg.value);\n    }\n}"
}