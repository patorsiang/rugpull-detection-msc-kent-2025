{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH29 SWAP1 DIV PUSH4 AND DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 NOT AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 NOT AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 NOT AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 NOT AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 NOT AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST PUSH1 DUP1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP3 PUSH1 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 DUP4 LT ISZERO ISZERO PUSH2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 DUP3 ADD SWAP2 POP PUSH1 DUP2 ADD SWAP1 POP PUSH1 DUP4 SUB SWAP3 POP PUSH2 JUMP JUMPDEST PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 SHA3 SWAP1 POP PUSH2 DUP2 DUP4 PUSH2 JUMP JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 JUMPI PUSH1 PUSH1 DUP3 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP1 DUP3 ADD PUSH1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD PUSH1 PUSH2 EXP DUP2 SLOAD SWAP1 PUSH1 MUL NOT AND SWAP1 SSTORE PUSH1 DUP3 ADD PUSH1 PUSH2 EXP DUP2 SLOAD SWAP1 PUSH1 MUL NOT AND SWAP1 SSTORE POP POP PUSH2 JUMP JUMPDEST PUSH1 PUSH1 DUP3 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP1 DUP3 ADD PUSH1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD PUSH1 PUSH2 EXP DUP2 SLOAD SWAP1 PUSH1 MUL NOT AND SWAP1 SSTORE PUSH1 DUP3 ADD PUSH1 PUSH2 EXP DUP2 SLOAD SWAP1 PUSH1 MUL NOT AND SWAP1 SSTORE POP POP JUMPDEST PUSH32 DUP4 DUP4 PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP1 DUP5 PUSH1 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 DUP4 LT ISZERO ISZERO PUSH2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 DUP3 ADD SWAP2 POP PUSH1 DUP2 ADD SWAP1 POP PUSH1 DUP4 SUB SWAP3 POP PUSH2 JUMP JUMPDEST PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 SHA3 SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 DUP4 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SWAP1 POP DUP1 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 DUP1 PUSH1 PUSH1 DUP5 MLOAD LT ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP5 PUSH2 JUMP JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND SWAP3 POP DUP3 PUSH20 AND PUSH4 CALLER PUSH1 MLOAD DUP3 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST GAS CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 MLOAD DUP1 MLOAD SWAP1 POP SWAP2 POP PUSH1 SLOAD DUP3 LT ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP4 PUSH1 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 DUP4 LT ISZERO ISZERO PUSH2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 DUP3 ADD SWAP2 POP PUSH1 DUP2 ADD SWAP1 POP PUSH1 DUP4 SUB SWAP3 POP PUSH2 JUMP JUMPDEST PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 SHA3 SWAP1 POP PUSH2 DUP2 PUSH1 PUSH2 JUMP JUMPDEST ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 ADD PUSH1 ISZERO ISZERO DUP2 MSTORE PUSH1 ADD PUSH1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 PUSH1 DUP4 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 PUSH2 SWAP3 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST POP PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 DUP5 PUSH1 PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 DUP6 PUSH20 AND PUSH1 DUP7 DUP7 DUP7 DUP7 PUSH1 MLOAD PUSH1 DUP2 MSTORE PUSH1 ADD PUSH1 MSTORE PUSH1 MLOAD DUP1 DUP6 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD DUP5 PUSH1 AND PUSH1 AND DUP2 MSTORE PUSH1 ADD DUP4 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD DUP3 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP5 POP POP POP POP POP PUSH1 PUSH1 MLOAD PUSH1 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 DUP7 GAS CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP PUSH1 PUSH1 MLOAD SUB MLOAD PUSH20 AND EQ SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP6 PUSH1 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 DUP4 LT ISZERO ISZERO PUSH2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 DUP3 ADD SWAP2 POP PUSH1 DUP2 ADD SWAP1 POP PUSH1 DUP4 SUB SWAP3 POP PUSH2 JUMP JUMPDEST PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 SHA3 SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 DUP4 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND SWAP1 POP PUSH2 DUP2 PUSH1 MLOAD DUP1 DUP1 PUSH32 DUP2 MSTORE POP PUSH1 ADD SWAP1 POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 SHA3 DUP8 DUP8 DUP8 PUSH2 JUMP JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 DUP4 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP1 DUP3 ADD PUSH1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD PUSH1 PUSH2 EXP DUP2 SLOAD SWAP1 PUSH20 MUL NOT AND SWAP1 SSTORE PUSH1 DUP3 ADD PUSH1 PUSH2 EXP DUP2 SLOAD SWAP1 PUSH1 MUL NOT AND SWAP1 SSTORE PUSH1 DUP3 ADD PUSH1 PUSH2 EXP DUP2 SLOAD SWAP1 PUSH1 MUL NOT AND SWAP1 SSTORE POP POP PUSH32 DUP7 DUP3 PUSH1 PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP2 PUSH1 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 DUP4 LT ISZERO ISZERO PUSH2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 DUP3 ADD SWAP2 POP PUSH1 DUP2 ADD SWAP1 POP PUSH1 DUP4 SUB SWAP3 POP PUSH2 JUMP JUMPDEST PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 SHA3 SWAP1 POP PUSH2 DUP2 PUSH1 PUSH2 JUMP JUMPDEST ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 ADD PUSH1 ISZERO ISZERO DUP2 MSTORE PUSH1 ADD PUSH1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 PUSH1 DUP4 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 PUSH2 SWAP3 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST POP PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 DUP3 PUSH1 PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH20 AND PUSH2 ADDRESS PUSH20 AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 MLOAD PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP4 PUSH1 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 DUP4 LT ISZERO ISZERO PUSH2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 DUP3 ADD SWAP2 POP PUSH1 DUP2 ADD SWAP1 POP PUSH1 DUP4 SUB SWAP3 POP PUSH2 JUMP JUMPDEST PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 SHA3 SWAP1 POP PUSH1 PUSH1 DUP3 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND PUSH1 PUSH1 DUP4 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 DUP2 MLOAD LT ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SLOAD CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP2 CALLER PUSH1 PUSH2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP3 DUP3 PUSH1 PUSH2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 DUP1 DUP3 PUSH1 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 DUP4 LT ISZERO ISZERO PUSH2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 DUP3 ADD SWAP2 POP PUSH1 DUP2 ADD SWAP1 POP PUSH1 DUP4 SUB SWAP3 POP PUSH2 JUMP JUMPDEST PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 SHA3 SWAP1 POP PUSH1 PUSH1 DUP3 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 DUP1 DUP3 PUSH1 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 DUP4 LT ISZERO ISZERO PUSH2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 DUP3 ADD SWAP2 POP PUSH1 DUP2 ADD SWAP1 POP PUSH1 DUP4 SUB SWAP3 POP PUSH2 JUMP JUMPDEST PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 SHA3 SWAP2 POP PUSH2 DUP3 PUSH2 JUMP JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 DUP4 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND SWAP1 POP CALLER PUSH20 AND DUP2 PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 DUP4 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP1 DUP3 ADD PUSH1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST PUSH1 DUP3 ADD PUSH1 PUSH2 EXP DUP2 SLOAD SWAP1 PUSH20 MUL NOT AND SWAP1 SSTORE PUSH1 DUP3 ADD PUSH1 PUSH2 EXP DUP2 SLOAD SWAP1 PUSH1 MUL NOT AND SWAP1 SSTORE PUSH1 DUP3 ADD PUSH1 PUSH2 EXP DUP2 SLOAD SWAP1 PUSH1 MUL NOT AND SWAP1 SSTORE POP POP PUSH32 DUP4 DUP3 PUSH1 PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 DUP1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP3 SWAP1 POP DUP1 PUSH20 AND PUSH4 DUP4 DUP4 PUSH20 AND PUSH4 ADDRESS PUSH1 MLOAD DUP3 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST GAS CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 MLOAD DUP1 MLOAD SWAP1 POP PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST GAS CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 MLOAD DUP1 MLOAD SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH20 AND DUP2 PUSH20 AND EQ ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP1 PUSH20 AND PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH32 PUSH1 MLOAD PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 DUP1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 DUP2 ISZERO PUSH2 JUMPI PUSH1 PUSH1 DUP5 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND SWAP1 POP PUSH2 JUMP JUMPDEST PUSH1 PUSH1 DUP5 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 DUP4 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH2 PUSH2 JUMP JUMPDEST PUSH1 DUP4 SWAP2 POP PUSH1 SWAP1 POP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 JUMPI PUSH1 PUSH32 MUL DUP3 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP1 PUSH1 ADD ADD MLOAD PUSH32 SWAP1 DIV PUSH32 MUL PUSH31 NOT AND LT ISZERO DUP1 ISZERO PUSH2 JUMPI POP PUSH1 PUSH32 MUL DUP3 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST SWAP1 PUSH1 ADD ADD MLOAD PUSH32 SWAP1 DIV PUSH32 MUL PUSH31 NOT AND GT ISZERO JUMPDEST ISZERO PUSH2 JUMPI PUSH1 SWAP3 POP PUSH2 JUMP JUMPDEST DUP1 DUP1 PUSH1 ADD SWAP2 POP POP PUSH2 JUMP JUMPDEST PUSH1 SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 DUP4 PUSH1 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 DUP4 LT ISZERO ISZERO PUSH2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 DUP3 ADD SWAP2 POP PUSH1 DUP2 ADD SWAP1 POP PUSH1 DUP4 SUB SWAP3 POP PUSH2 JUMP JUMPDEST PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 SHA3 SWAP1 POP PUSH2 DUP2 PUSH2 JUMP JUMPDEST ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 ADD DUP5 PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 ADD PUSH1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 PUSH1 DUP4 PUSH1 NOT AND PUSH1 NOT AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 PUSH2 SWAP3 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST POP PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 DUP5 DUP5 DUP5 PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV PUSH1 DUP3 SSTORE DUP1 PUSH1 LT PUSH2 JUMPI POP PUSH2 JUMP JUMPDEST PUSH1 ADD PUSH1 SWAP1 DIV SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 DUP2 ADD SWAP1 PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 PUSH1 ADD PUSH1 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 LT PUSH2 JUMPI DUP1 MLOAD PUSH1 NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 ADD SWAP2 SWAP1 PUSH1 ADD SWAP1 PUSH2 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP2 PUSH1 SWAP1 SSTORE POP PUSH1 ADD PUSH2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 SHA3 PUSH22 UNKNOWN_0x49 UNKNOWN_0xc7 GT CODECOPY LOG0 UNKNOWN_0xe1 UNKNOWN_0xc9 INVALID_0x64",
  "opcode_entropy": 4.691880980448272,
  "opcode_count": 5483,
  "unique_opcodes": 68,
  "byte_entropy": 5.063351020775937,
  "byte_60": 0.08117962466487935,
  "byte_40": 0.011260053619302948,
  "byte_52": 0.015656836461126006,
  "byte_04": 0.00868632707774799,
  "byte_36": 0.00032171581769437,
  "byte_10": 0.0036461126005361932,
  "byte_61": 0.03131367292225201,
  "byte_01": 0.050723860589812333,
  "byte_33": 0.001715817694369973,
  "byte_57": 0.01254691689008043,
  "byte_00": 0.06670241286863271,
  "byte_35": 0.004396782841823057,
  "byte_7c": 0.0005361930294906167,
  "byte_90": 0.04621983914209115,
  "byte_63": 0.0032171581769436996,
  "byte_ff": 0.1981769436997319,
  "byte_16": 0.02166219839142091,
  "byte_80": 0.04214477211796246,
  "byte_1e": 0.0007506702412868633,
  "byte_41": 0.00021447721179624664,
  "byte_be": 0.0005361930294906167,
  "byte_58": 0.0004289544235924933,
  "byte_14": 0.005361930294906166,
  "byte_38": 0.00021447721179624664,
  "byte_3a": 0.00032171581769437,
  "byte_4c": 0.0005361930294906167,
  "byte_11": 0.0010723860589812334,
  "byte_b0": 0.0005361930294906167,
  "byte_a0": 0.0004289544235924933,
  "byte_4b": 0.0004289544235924933,
  "byte_50": 0.04975871313672922,
  "byte_09": 0.0015013404825737265,
  "byte_c3": 0.0004289544235924933,
  "byte_5f": 0.00032171581769437,
  "byte_37": 0.0013941018766756032,
  "byte_3c": 0.00010723860589812332,
  "byte_22": 0.0008579088471849866,
  "byte_02": 0.006970509383378016,
  "byte_6b": 0.0005361930294906167,
  "byte_62": 0.0005361930294906167,
  "byte_d1": 0.00021447721179624664,
  "byte_da": 0.0004289544235924933,
  "byte_c2": 0.00010723860589812332,
  "byte_a4": 0.00032171581769437,
  "byte_ee": 0.0004289544235924933,
  "byte_92": 0.0037533512064343165,
  "byte_2b": 0.00032171581769437,
  "byte_c7": 0.00064343163538874,
  "byte_75": 0.0004289544235924933,
  "byte_d7": 0.00032171581769437,
  "byte_e4": 0.00010723860589812332,
  "byte_bd": 0.00010723860589812332,
  "byte_f0": 0.00021447721179624664,
  "byte_7e": 0.0007506702412868633,
  "byte_81": 0.028203753351206434,
  "byte_9a": 0.0004289544235924933,
  "byte_03": 0.01093833780160858,
  "byte_45": 0.00032171581769437,
  "byte_85": 0.0024664879356568366,
  "byte_77": 0.00021447721179624664,
  "byte_c1": 0.0007506702412868633,
  "byte_97": 0.00021447721179624664,
  "byte_3f": 0.00032171581769437,
  "byte_67": 0.00032171581769437,
  "byte_c0": 0.00021447721179624664,
  "byte_86": 0.0008579088471849866,
  "byte_eb": 0.0007506702412868633,
  "byte_e8": 0.00032171581769437,
  "byte_e3": 0.00096514745308311,
  "byte_8d": 0.00064343163538874,
  "byte_a5": 0.00032171581769437,
  "byte_cb": 0.0004289544235924933,
  "byte_5b": 0.022949061662198393,
  "byte_9c": 0.0004289544235924933,
  "byte_9d": 0.00010723860589812332,
  "byte_d0": 0.0005361930294906167,
  "byte_bc": 0.0004289544235924933,
  "byte_24": 0.0011796246648793566,
  "byte_d8": 0.0004289544235924933,
  "byte_e5": 0.00032171581769437,
  "byte_26": 0.00010723860589812332,
  "byte_ef": 0.00032171581769437,
  "byte_05": 0.0018230563002680966,
  "byte_68": 0.00010723860589812332,
  "byte_af": 0.0004289544235924933,
  "byte_93": 0.002037533512064343,
  "byte_3b": 0.0005361930294906167,
  "byte_c5": 0.00021447721179624664,
  "byte_bf": 0.00010723860589812332,
  "byte_1c": 0.0007506702412868633,
  "byte_30": 0.00064343163538874,
  "byte_f5": 0.00010723860589812332,
  "byte_fe": 0.0004289544235924933,
  "byte_cc": 0.00021447721179624664,
  "byte_2f": 0.00021447721179624664,
  "byte_20": 0.031099195710455763,
  "byte_06": 0.0011796246648793566,
  "byte_ce": 0.0004289544235924933,
  "byte_83": 0.01479892761394102,
  "byte_d3": 0.0004289544235924933,
  "byte_5e": 0.00021447721179624664,
  "byte_65": 0.0005361930294906167,
  "byte_07": 0.0011796246648793566,
  "byte_69": 0.00032171581769437,
  "byte_51": 0.018123324396782842,
  "byte_ec": 0.00032171581769437,
  "byte_fb": 0.0004289544235924933,
  "byte_e7": 0.0005361930294906167,
  "byte_0c": 0.0005361930294906167,
  "byte_08": 0.0013941018766756032,
  "byte_f2": 0.0004289544235924933,
  "byte_fd": 0.006327077747989276,
  "byte_8b": 0.00021447721179624664,
  "byte_76": 0.00021447721179624664,
  "byte_34": 0.00257372654155496,
  "byte_15": 0.024021447721179624,
  "byte_43": 0.00032171581769437,
  "byte_9e": 0.00032171581769437,
  "byte_82": 0.018445040214477213,
  "byte_1f": 0.00386058981233244,
  "byte_91": 0.01619302949061662,
  "byte_84": 0.004932975871313673,
  "byte_56": 0.010723860589812333,
  "byte_ab": 0.00021447721179624664,
  "byte_0a": 0.007184986595174263,
  "byte_0b": 0.0008579088471849866,
  "byte_73": 0.0096514745308311,
  "byte_f3": 0.0011796246648793566,
  "byte_a2": 0.00021447721179624664,
  "byte_2e": 0.00021447721179624664,
  "byte_cd": 0.00021447721179624664,
  "byte_d2": 0.00010723860589812332,
  "byte_0d": 0.0008579088471849866,
  "byte_32": 0.00010723860589812332,
  "byte_95": 0.00032171581769437,
  "byte_aa": 0.0004289544235924933,
  "byte_49": 0.0005361930294906167,
  "byte_e1": 0.00032171581769437,
  "byte_4f": 0.00010723860589812332,
  "byte_4d": 0.00010723860589812332,
  "byte_19": 0.009329758713136729,
  "byte_b4": 0.00032171581769437,
  "byte_72": 0.00021447721179624664,
  "byte_7a": 0.00032171581769437,
  "byte_cf": 0.0004289544235924933,
  "byte_8e": 0.00010723860589812332,
  "byte_66": 0.00021447721179624664,
  "byte_94": 0.00064343163538874,
  "byte_fc": 0.0007506702412868633,
  "byte_59": 0.00032171581769437,
  "byte_17": 0.002680965147453083,
  "byte_db": 0.00032171581769437,
  "byte_4a": 0.00021447721179624664,
  "byte_18": 0.00128686327077748,
  "byte_a7": 0.0004289544235924933,
  "byte_29": 0.0005361930294906167,
  "byte_74": 0.00032171581769437,
  "byte_1b": 0.00064343163538874,
  "byte_8c": 0.00032171581769437,
  "byte_ad": 0.00021447721179624664,
  "byte_1d": 0.00064343163538874,
  "byte_54": 0.005576407506702413,
  "byte_42": 0.00010723860589812332,
  "byte_7b": 0.00032171581769437,
  "byte_b8": 0.00032171581769437,
  "byte_23": 0.001715817694369973,
  "byte_55": 0.003002680965147453,
  "byte_3e": 0.0004289544235924933,
  "byte_13": 0.0004289544235924933,
  "byte_7f": 0.0016085790884718498,
  "byte_ca": 0.00032171581769437,
  "byte_47": 0.00032171581769437,
  "byte_0f": 0.00064343163538874,
  "byte_d9": 0.0004289544235924933,
  "byte_f4": 0.00010723860589812332,
  "byte_f9": 0.0004289544235924933,
  "byte_d5": 0.00032171581769437,
  "byte_e2": 0.00010723860589812332,
  "byte_6c": 0.00032171581769437,
  "byte_9b": 0.00010723860589812332,
  "byte_48": 0.00032171581769437,
  "byte_53": 0.00032171581769437,
  "byte_a1": 0.0007506702412868633,
  "byte_46": 0.00010723860589812332,
  "byte_c4": 0.00010723860589812332,
  "byte_89": 0.00021447721179624664,
  "byte_28": 0.0005361930294906167,
  "byte_64": 0.0005361930294906167,
  "byte_98": 0.00010723860589812332,
  "byte_70": 0.00021447721179624664,
  "byte_31": 0.00032171581769437,
  "byte_87": 0.00064343163538874,
  "byte_0e": 0.0007506702412868633,
  "byte_5a": 0.0005361930294906167,
  "byte_f1": 0.00064343163538874,
  "byte_b7": 0.00010723860589812332,
  "byte_88": 0.0005361930294906167,
  "byte_c8": 0.00021447721179624664,
  "byte_b9": 0.00021447721179624664,
  "byte_c9": 0.0005361930294906167,
  "byte_96": 0.0005361930294906167,
  "byte_e0": 0.0004289544235924933,
  "byte_71": 0.00021447721179624664,
  "byte_ac": 0.00021447721179624664,
  "byte_39": 0.00032171581769437,
  "byte_5c": 0.00032171581769437,
  "byte_ed": 0.00021447721179624664,
  "byte_12": 0.0008579088471849866,
  "byte_44": 0.00032171581769437,
  "byte_25": 0.00010723860589812332,
  "byte_bb": 0.0004289544235924933,
  "byte_e9": 0.00032171581769437,
  "byte_dd": 0.00032171581769437,
  "byte_6e": 0.00010723860589812332,
  "byte_2c": 0.00010723860589812332,
  "byte_8a": 0.00010723860589812332,
  "byte_ae": 0.00010723860589812332,
  "byte_6f": 0.00032171581769437,
  "byte_b2": 0.00010723860589812332,
  "byte_1a": 0.00032171581769437,
  "byte_2d": 0.00010723860589812332,
  "byte_78": 0.00021447721179624664,
  "byte_a9": 0.00010723860589812332,
  "byte_a3": 0.00032171581769437,
  "byte_b6": 0.00021447721179624664,
  "byte_dc": 0.00010723860589812332,
  "byte_21": 0.0004289544235924933,
  "byte_f6": 0.00021447721179624664,
  "byte_f8": 0.00010723860589812332,
  "byte_4e": 0.00010723860589812332,
  "byte_f7": 0.00032171581769437,
  "num_nodes": 2,
  "num_edges": 1,
  "avg_degree": 1.0,
  "density": 0.5,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 2,
  "event_nums": 0,
  "creation_block": 5434122,
  "creation_timestamp": 1523636931,
  "life_time": 292.0,
  "duration_seconds": 4453.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 3,
  "num_buyers": 1,
  "num_sellers": 1,
  "num_creator_transfers": 0,
  "buy_amt": 0,
  "sell_amt": 0.0,
  "avg_value": 0.0,
  "txn_per_block": 0.006825938566552901,
  "avg_gas_limit": 2521729.5,
  "std_gas_limit": 2478270.5,
  "avg_gas_used": 1291611.0,
  "std_gas_used": 1248152.0,
  "avg_gas_price": 21500000000.0,
  "std_gas_price": 19500000000.0,
  "sethydrocontractaddress_num": 1,
  "timeline_sequence": [
    [
      5434122,
      1523636931,
      338,
      76,
      0,
      5000000,
      2000000000,
      0,
      1,
      5431286,
      2539763,
      17686833
    ],
    [
      5434414,
      1523641384,
      339,
      16,
      0,
      43459,
      41000000000,
      0,
      1,
      728929,
      43459,
      17686541
    ]
  ],
  "sourcecode": "pragma solidity ^0.4.21;\n\nlibrary StringUtils {\n    // Tests for uppercase characters in a given string\n    function allLower(string memory _string) internal pure returns (bool) {\n        bytes memory bytesString = bytes(_string);\n        for (uint i = 0; i < bytesString.length; i++) {\n            if ((bytesString[i] >= 65) && (bytesString[i] <= 90)) {  // Uppercase characters\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\ncontract Ownable {\n    address public owner;\n\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n    /**\n    * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n    * account.\n    */\n    function Ownable() public {\n        owner = msg.sender;\n    }\n\n    /**\n    * @dev Throws if called by any account other than the owner.\n    */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n\n}\n\ncontract ERC20Basic {\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address who) public view returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract Withdrawable is Ownable {\n    // Allows owner to withdraw ether from the contract\n    function withdrawEther(address to) public onlyOwner {\n        to.transfer(address(this).balance);\n    }\n\n    // Allows owner to withdraw ERC20 tokens from the contract\n    function withdrawERC20Token(address tokenAddress, address to) public onlyOwner {\n        ERC20Basic token = ERC20Basic(tokenAddress);\n        token.transfer(to, token.balanceOf(address(this)));\n    }\n}\n\n\ninterface HydroToken {\n    function balanceOf(address _owner) external returns (uint256 balance);\n}\n\n\ncontract RaindropClient is Withdrawable {\n    // Events for when a user signs up for Raindrop Client and when their account is deleted\n    event UserSignUp(string userName, address userAddress, bool official);\n    event UserDeleted(string userName, address userAddress, bool official);\n    // Events for when an application signs up for Raindrop Client and when their account is deleted\n    event ApplicationSignUp(string applicationName, bool official);\n    event ApplicationDeleted(string applicationName, bool official);\n\n    using StringUtils for string;\n\n    // Fees that unofficial users/applications must pay to sign up for Raindrop Client\n    uint public unofficialUserSignUpFee;\n    uint public unofficialApplicationSignUpFee;\n\n    address public hydroTokenAddress;\n    uint public hydroStakingMinimum;\n\n    // User accounts\n    struct User {\n        string userName;\n        address userAddress;\n        bool official;\n        bool _initialized;\n    }\n\n    // Application accounts\n    struct Application {\n        string applicationName;\n        bool official;\n        bool _initialized;\n    }\n\n    // Internally, users and applications are identified by the hash of their names\n    mapping (bytes32 => User) internal userDirectory;\n    mapping (bytes32 => Application) internal officialApplicationDirectory;\n    mapping (bytes32 => Application) internal unofficialApplicationDirectory;\n\n    // Allows the Hydro API to sign up official users with their app-generated address\n    function officialUserSignUp(string userName, address userAddress) public onlyOwner {\n        _userSignUp(userName, userAddress, true);\n    }\n\n    // Allows anyone to sign up as an unofficial user with their own address\n    function unofficialUserSignUp(string userName) public payable {\n        require(bytes(userName).length < 100);\n        require(msg.value >= unofficialUserSignUpFee);\n\n        return _userSignUp(userName, msg.sender, false);\n    }\n\n    // Allows the Hydro API to delete official users iff they've signed keccak256(\"Delete\") with their private key\n    function deleteUserForUser(string userName, uint8 v, bytes32 r, bytes32 s) public onlyOwner {\n        bytes32 userNameHash = keccak256(userName);\n        require(userNameHashTaken(userNameHash));\n        address userAddress = userDirectory[userNameHash].userAddress;\n        require(isSigned(userAddress, keccak256(\"Delete\"), v, r, s));\n\n        delete userDirectory[userNameHash];\n\n        emit UserDeleted(userName, userAddress, true);\n    }\n\n    // Allows unofficial users to delete their account\n    function deleteUser(string userName) public {\n        bytes32 userNameHash = keccak256(userName);\n        require(userNameHashTaken(userNameHash));\n        address userAddress = userDirectory[userNameHash].userAddress;\n        require(userAddress == msg.sender);\n\n        delete userDirectory[userNameHash];\n\n        emit UserDeleted(userName, userAddress, true);\n    }\n\n    // Allows the Hydro API to sign up official applications\n    function officialApplicationSignUp(string applicationName) public onlyOwner {\n        bytes32 applicationNameHash = keccak256(applicationName);\n        require(!applicationNameHashTaken(applicationNameHash, true));\n        officialApplicationDirectory[applicationNameHash] = Application(applicationName, true, true);\n\n        emit ApplicationSignUp(applicationName, true);\n    }\n\n    // Allows anyone to sign up as an unofficial application\n    function unofficialApplicationSignUp(string applicationName) public payable {\n        require(bytes(applicationName).length < 100);\n        require(msg.value >= unofficialApplicationSignUpFee);\n        require(applicationName.allLower());\n\n        HydroToken hydro = HydroToken(hydroTokenAddress);\n        uint256 hydroBalance = hydro.balanceOf(msg.sender);\n        require(hydroBalance >= hydroStakingMinimum);\n\n        bytes32 applicationNameHash = keccak256(applicationName);\n        require(!applicationNameHashTaken(applicationNameHash, false));\n        unofficialApplicationDirectory[applicationNameHash] = Application(applicationName, false, true);\n\n        emit ApplicationSignUp(applicationName, false);\n    }\n\n    // Allows the Hydro API to delete applications unilaterally\n    function deleteApplication(string applicationName, bool official) public onlyOwner {\n        bytes32 applicationNameHash = keccak256(applicationName);\n        require(applicationNameHashTaken(applicationNameHash, official));\n        if (official) {\n            delete officialApplicationDirectory[applicationNameHash];\n        } else {\n            delete unofficialApplicationDirectory[applicationNameHash];\n        }\n\n        emit ApplicationDeleted(applicationName, official);\n    }\n\n    // Allows the Hydro API to changes the unofficial user fee\n    function setUnofficialUserSignUpFee(uint newFee) public onlyOwner {\n        unofficialUserSignUpFee = newFee;\n    }\n\n    // Allows the Hydro API to changes the unofficial application fee\n    function setUnofficialApplicationSignUpFee(uint newFee) public onlyOwner {\n        unofficialApplicationSignUpFee = newFee;\n    }\n\n    // Allows the Hydro API to link to the Hydro token\n    function setHydroContractAddress(address _hydroTokenAddress) public onlyOwner {\n        hydroTokenAddress = _hydroTokenAddress;\n    }\n\n    // Allows the Hydro API to set a minimum hydro balance required to register unofficially\n    function setHydroStakingMinimum(uint newMinimum) public onlyOwner {\n        hydroStakingMinimum = newMinimum;\n    }\n\n    // Indicates whether a given user name has been claimed\n    function userNameTaken(string userName) public view returns (bool taken) {\n        bytes32 userNameHash = keccak256(userName);\n        return userDirectory[userNameHash]._initialized;\n    }\n\n    // Indicates whether a given application name has been claimed for official and unofficial applications\n    function applicationNameTaken(string applicationName)\n        public\n        view\n        returns (bool officialTaken, bool unofficialTaken)\n    {\n        bytes32 applicationNameHash = keccak256(applicationName);\n        return (\n            officialApplicationDirectory[applicationNameHash]._initialized,\n            unofficialApplicationDirectory[applicationNameHash]._initialized\n        );\n    }\n\n    // Returns user details by user name\n    function getUserByName(string userName) public view returns (address userAddress, bool official) {\n        bytes32 userNameHash = keccak256(userName);\n        require(userNameHashTaken(userNameHash));\n        User storage _user = userDirectory[userNameHash];\n\n        return (_user.userAddress, _user.official);\n    }\n\n    // Checks whether the provided (v, r, s) signature was created by the private key associated with _address\n    function isSigned(address _address, bytes32 messageHash, uint8 v, bytes32 r, bytes32 s) public pure returns (bool) {\n        return ecrecover(messageHash, v, r, s) == _address;\n    }\n\n    // Common internal logic for all user signups\n    function _userSignUp(string userName, address userAddress, bool official) internal {\n        bytes32 userNameHash = keccak256(userName);\n        require(!userNameHashTaken(userNameHash));\n        userDirectory[userNameHash] = User(userName, userAddress, official, true);\n\n        emit UserSignUp(userName, userAddress, official);\n    }\n\n    // Internal check for whether a user name has been taken\n    function userNameHashTaken(bytes32 userNameHash) internal view returns (bool) {\n        return userDirectory[userNameHash]._initialized;\n    }\n\n    // Internal check for whether an application name has been taken\n    function applicationNameHashTaken(bytes32 applicationNameHash, bool official) internal view returns (bool) {\n        if (official) {\n            return officialApplicationDirectory[applicationNameHash]._initialized;\n        } else {\n            return unofficialApplicationDirectory[applicationNameHash]._initialized;\n        }\n    }\n}"
}