{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE CALLVALUE ISZERO PUSH3 JUMPI PUSH1 DUP1 REVERT JUMPDEST CALLER PUSH1 DUP1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH1 DUP1 PUSH1 DUP1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 DUP1 PUSH1 ADDRESS PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH1 PUSH1 DUP2 SWAP1 SSTORE POP PUSH3 PUSH1 DUP2 SWAP1 SSTORE POP PUSH3 PUSH1 DUP2 SWAP1 SSTORE POP PUSH2 PUSH1 DUP2 SWAP1 SSTORE POP PUSH1 PUSH1 DUP2 SWAP1 SSTORE POP PUSH1 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH32 DUP2 MSTORE POP PUSH1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 PUSH3 SWAP3 SWAP2 SWAP1 PUSH3 JUMP JUMPDEST POP PUSH10 PUSH1 DUP2 SWAP1 SSTORE POP PUSH3 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 PUSH1 ADD PUSH1 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 LT PUSH3 JUMPI DUP1 MLOAD PUSH1 NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 ADD SWAP2 SWAP1 PUSH1 ADD SWAP1 PUSH3 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 SWAP2 SWAP1 PUSH3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 JUMPI PUSH1 DUP2 PUSH1 SWAP1 SSTORE POP PUSH1 ADD PUSH3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 DUP1 PUSH3 PUSH1 CODECOPY PUSH1 RETURN STOP PUSH1 PUSH1 MSTORE PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH29 SWAP1 DIV PUSH4 AND DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 ADD DUP5 DUP2 MSTORE PUSH1 ADD DUP4 DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP5 POP POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 PUSH1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 ADD DUP6 DUP2 MSTORE PUSH1 ADD DUP5 DUP2 MSTORE PUSH1 ADD DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 ADD SWAP1 PUSH1 ADD DUP1 DUP4 GT PUSH2 JUMPI DUP3 SWAP1 SUB PUSH1 AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP1 PUSH1 ADD PUSH1 DUP1 SWAP2 DIV MUL PUSH1 ADD PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 ADD DUP3 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV DUP1 ISZERO PUSH2 JUMPI DUP1 PUSH1 LT PUSH2 JUMPI PUSH2 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 ADD SWAP2 PUSH2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 ADD SWAP1 PUSH1 ADD DUP1 DUP4 GT PUSH2 JUMPI DUP3 SWAP1 SUB PUSH1 AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 DUP1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP1 PUSH1 DUP1 PUSH1 DUP1 PUSH1 SLOAD DUP10 MUL SWAP4 POP PUSH1 SLOAD DUP10 MUL SWAP3 POP PUSH1 SLOAD DUP10 MUL SWAP2 POP PUSH1 SLOAD DUP10 MUL SWAP1 POP PUSH1 PUSH8 DUP4 DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST MOD GT ISZERO PUSH2 JUMPI PUSH8 DUP3 DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST MOD DUP3 SUB SWAP2 POP JUMPDEST PUSH1 PUSH8 DUP3 DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST MOD GT ISZERO PUSH2 JUMPI PUSH8 DUP2 DUP2 ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST MOD DUP2 SUB SWAP1 POP JUMPDEST DUP4 DUP4 DUP4 DUP4 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND CALLER PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH1 DUP7 PUSH1 PUSH1 MLOAD PUSH1 ADD MSTORE PUSH1 MLOAD DUP7 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP6 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP5 DUP2 MSTORE PUSH1 ADD DUP4 DUP2 MSTORE PUSH1 ADD DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 MLOAD DUP1 MLOAD SWAP1 POP POP POP JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP1 PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SWAP4 POP PUSH1 SWAP3 POP PUSH1 SWAP2 POP PUSH1 SWAP1 POP PUSH2 PUSH1 SLOAD PUSH2 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP DUP3 SWAP7 POP DUP4 SWAP8 POP POP POP POP POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP7 PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP6 PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP5 PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP4 PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH32 ADDRESS PUSH1 SLOAD PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP8 DUP8 DUP8 DUP8 PUSH1 MLOAD DUP1 DUP9 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP8 DUP2 MSTORE PUSH1 ADD DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP6 DUP2 MSTORE PUSH1 ADD DUP5 DUP2 MSTORE PUSH1 ADD DUP4 DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 SLOAD PUSH1 PUSH1 DUP1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD ADD PUSH1 PUSH1 DUP1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH1 SLOAD PUSH1 SLOAD ADD PUSH1 DUP2 SWAP1 SSTORE POP PUSH1 PUSH1 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP6 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 ADDRESS PUSH1 MLOAD DUP3 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 ADDRESS PUSH1 MLOAD DUP3 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 ADDRESS PUSH1 MLOAD DUP3 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 ADDRESS PUSH1 MLOAD DUP3 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 PUSH1 MSTORE DUP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 PUSH1 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 PUSH1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 ADD DUP4 DUP2 MSTORE PUSH1 ADD TIMESTAMP DUP2 MSTORE PUSH1 ADD DUP6 PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE POP PUSH1 PUSH1 PUSH1 SLOAD DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD SSTORE PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD SSTORE PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD SSTORE PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP PUSH1 DUP3 ADD MLOAD DUP2 PUSH1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 PUSH2 SWAP3 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 DUP6 DUP6 PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 DUP6 DUP5 PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP1 PUSH1 PUSH2 DUP7 MUL SWAP5 POP DUP5 PUSH1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 SWAP4 POP PUSH1 SWAP3 POP PUSH1 SWAP2 POP PUSH1 SWAP1 POP PUSH2 DUP7 PUSH2 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP DUP3 SWAP7 POP DUP4 SWAP8 POP POP POP POP POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 CALLER DUP7 PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 CALLER DUP6 PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 CALLER DUP5 PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 CALLER DUP4 PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH32 ADDRESS DUP7 CALLER DUP8 DUP8 DUP8 DUP8 PUSH1 MLOAD DUP1 DUP9 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP8 DUP2 MSTORE PUSH1 ADD DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP6 DUP2 MSTORE PUSH1 ADD DUP5 DUP2 MSTORE PUSH1 ADD DUP4 DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP5 PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD ADD PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND PUSH4 CALLER PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP9 PUSH1 PUSH1 MLOAD PUSH1 ADD MSTORE PUSH1 MLOAD DUP5 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP4 POP POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 MLOAD DUP1 MLOAD SWAP1 POP POP DUP5 PUSH1 SLOAD ADD PUSH1 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 SLOAD SUB PUSH1 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 DUP3 PUSH20 AND PUSH4 PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP5 PUSH1 PUSH1 MLOAD PUSH1 ADD MSTORE PUSH1 MLOAD DUP4 PUSH4 AND PUSH29 MUL DUP2 MSTORE PUSH1 ADD DUP1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD DUP3 DUP2 MSTORE PUSH1 ADD SWAP3 POP POP POP PUSH1 PUSH1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 GAS SUB CALL ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP POP POP PUSH1 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 SLOAD DUP2 JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 MSTORE DUP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 PUSH1 SWAP2 POP SWAP1 POP DUP1 PUSH1 ADD SLOAD SWAP1 DUP1 PUSH1 ADD SLOAD SWAP1 DUP1 PUSH1 ADD SLOAD SWAP1 DUP1 PUSH1 ADD PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND SWAP1 DUP1 PUSH1 ADD SWAP1 POP DUP6 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 DUP2 PUSH1 AND ISZERO PUSH2 MUL SUB AND PUSH1 SWAP1 DIV SWAP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 SWAP1 PUSH1 ADD PUSH1 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 LT PUSH2 JUMPI DUP1 MLOAD PUSH1 NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 ADD SWAP2 SWAP1 PUSH1 ADD SWAP1 PUSH2 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 SWAP2 SWAP1 PUSH2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 JUMPI PUSH1 DUP2 PUSH1 SWAP1 SSTORE POP PUSH1 ADD PUSH2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 SHA3 CALLDATACOPY UNKNOWN_0xad UNKNOWN_0xbd PUSH30",
  "opcode_entropy": 4.823828172697355,
  "opcode_count": 4987,
  "unique_opcodes": 69,
  "byte_entropy": 4.5546193134105195,
  "byte_0x": 9.284189026088571e-05,
  "byte_60": 0.0636895367189676,
  "byte_40": 0.009655556587132115,
  "byte_52": 0.014576176770959057,
  "byte_34": 0.002878098598087457,
  "byte_15": 0.015318911893046143,
  "byte_62": 0.0017639959149568286,
  "byte_00": 0.07984402562436171,
  "byte_10": 0.0016711540246959428,
  "byte_57": 0.011512394392349828,
  "byte_80": 0.030452140005570512,
  "byte_fd": 0.006870299879305542,
  "byte_5b": 0.018846903722959798,
  "byte_33": 0.0015783121344350572,
  "byte_61": 0.02618141305356977,
  "byte_01": 0.03370160616470151,
  "byte_0a": 0.006684616098783771,
  "byte_81": 0.02423173335809117,
  "byte_54": 0.009005663355305914,
  "byte_73": 0.016804382137220315,
  "byte_ff": 0.33636616841518896,
  "byte_02": 0.0103982917092192,
  "byte_19": 0.0023210472565221426,
  "byte_16": 0.020889425308699285,
  "byte_90": 0.033051712932875316,
  "byte_83": 0.008819979574784143,
  "byte_17": 0.0015783121344350572,
  "byte_55": 0.0037136756104354284,
  "byte_50": 0.032587503481570884,
  "byte_04": 0.009934082257914771,
  "byte_20": 0.017361433478785628,
  "byte_30": 0.0008355770123479714,
  "byte_03": 0.00928418902608857,
  "byte_12": 0.0007427351220870857,
  "byte_93": 0.001021260792869743,
  "byte_e0": 0.0009284189026088571,
  "byte_0c": 0.0007427351220870857,
  "byte_0d": 0.0021353634760003714,
  "byte_f4": 0.00027852567078265713,
  "byte_0e": 0.0006498932318262,
  "byte_64": 0.0007427351220870857,
  "byte_0f": 0.0009284189026088571,
  "byte_51": 0.010769659270262742,
  "byte_7f": 0.00027852567078265713,
  "byte_43": 0.00037136756104354284,
  "byte_4e": 0.00018568378052177142,
  "byte_5f": 9.284189026088571e-05,
  "byte_72": 0.00037136756104354284,
  "byte_6f": 9.284189026088571e-05,
  "byte_77": 9.284189026088571e-05,
  "byte_6c": 0.00018568378052177142,
  "byte_65": 0.00037136756104354284,
  "byte_db": 0.00018568378052177142,
  "byte_92": 0.0024138891467830287,
  "byte_91": 0.0103982917092192,
  "byte_f3": 0.0024138891467830287,
  "byte_56": 0.0077987187819144,
  "byte_69": 0.00037136756104354284,
  "byte_d3": 0.00037136756104354284,
  "byte_c2": 0.00018568378052177142,
  "byte_1b": 0.0008355770123479714,
  "byte_ce": 0.00018568378052177142,
  "byte_cc": 9.284189026088571e-05,
  "byte_ed": 0.00018568378052177142,
  "byte_a1": 0.00037136756104354284,
  "byte_0b": 0.0019496796954786,
  "byte_a2": 0.00037136756104354284,
  "byte_82": 0.008912821465045028,
  "byte_1f": 0.0015783121344350572,
  "byte_36": 0.00037136756104354284,
  "byte_85": 0.0017639959149568286,
  "byte_67": 0.0006498932318262,
  "byte_11": 0.0011141026831306285,
  "byte_66": 0.00018568378052177142,
  "byte_49": 9.284189026088571e-05,
  "byte_76": 0.00018568378052177142,
  "byte_7a": 0.0005570513415653143,
  "byte_9f": 0.00046420945130442855,
  "byte_9b": 9.284189026088571e-05,
  "byte_27": 0.0007427351220870857,
  "byte_b2": 0.00027852567078265713,
  "byte_39": 0.00018568378052177142,
  "byte_75": 0.00027852567078265713,
  "byte_35": 0.0021353634760003714,
  "byte_7c": 0.0017639959149568286,
  "byte_63": 0.005941880976696685,
  "byte_bf": 0.00027852567078265713,
  "byte_48": 0.00037136756104354284,
  "byte_14": 0.003435149939652771,
  "byte_ea": 0.00018568378052177142,
  "byte_b1": 0.00037136756104354284,
  "byte_e1": 0.0007427351220870857,
  "byte_b3": 0.00046420945130442855,
  "byte_06": 0.0018568378052177142,
  "byte_de": 0.00046420945130442855,
  "byte_dc": 0.00018568378052177142,
  "byte_8e": 0.00037136756104354284,
  "byte_f9": 0.00018568378052177142,
  "byte_3e": 0.00018568378052177142,
  "byte_6a": 0.00037136756104354284,
  "byte_18": 0.00027852567078265713,
  "byte_3d": 0.00018568378052177142,
  "byte_4c": 0.00018568378052177142,
  "byte_f7": 0.00018568378052177142,
  "byte_97": 0.0011141026831306285,
  "byte_25": 0.00046420945130442855,
  "byte_ec": 9.284189026088571e-05,
  "byte_2b": 0.00018568378052177142,
  "byte_29": 0.00018568378052177142,
  "byte_8d": 0.00018568378052177142,
  "byte_a9": 0.00027852567078265713,
  "byte_d0": 0.00037136756104354284,
  "byte_47": 9.284189026088571e-05,
  "byte_ee": 9.284189026088571e-05,
  "byte_94": 0.00046420945130442855,
  "byte_23": 0.00018568378052177142,
  "byte_c0": 0.00027852567078265713,
  "byte_f8": 0.00018568378052177142,
  "byte_08": 0.0017639959149568286,
  "byte_bd": 0.00037136756104354284,
  "byte_21": 0.00027852567078265713,
  "byte_99": 0.00037136756104354284,
  "byte_71": 9.284189026088571e-05,
  "byte_aa": 0.00037136756104354284,
  "byte_c1": 9.284189026088571e-05,
  "byte_b9": 0.00018568378052177142,
  "byte_eb": 0.00018568378052177142,
  "byte_a5": 0.00027852567078265713,
  "byte_cb": 0.00018568378052177142,
  "byte_05": 0.0011141026831306285,
  "byte_46": 0.00037136756104354284,
  "byte_c6": 0.0018568378052177142,
  "byte_9d": 0.00018568378052177142,
  "byte_a3": 0.00018568378052177142,
  "byte_cf": 9.284189026088571e-05,
  "byte_79": 0.0008355770123479714,
  "byte_86": 0.0012069445733915143,
  "byte_f6": 0.00027852567078265713,
  "byte_45": 0.0005570513415653143,
  "byte_b8": 0.00037136756104354284,
  "byte_07": 0.0013926283539132858,
  "byte_28": 0.00027852567078265713,
  "byte_e3": 0.00018568378052177142,
  "byte_c7": 9.284189026088571e-05,
  "byte_31": 0.00018568378052177142,
  "byte_24": 0.00037136756104354284,
  "byte_38": 0.00018568378052177142,
  "byte_c9": 0.00027852567078265713,
  "byte_8b": 0.00046420945130442855,
  "byte_70": 9.284189026088571e-05,
  "byte_d9": 0.0008355770123479714,
  "byte_09": 0.0013926283539132858,
  "byte_4a": 9.284189026088571e-05,
  "byte_8a": 0.00027852567078265713,
  "byte_6d": 9.284189026088571e-05,
  "byte_ad": 0.00027852567078265713,
  "byte_f0": 0.00018568378052177142,
  "byte_4b": 0.00046420945130442855,
  "byte_fc": 0.00018568378052177142,
  "byte_f1": 0.0016711540246959428,
  "byte_cd": 0.00018568378052177142,
  "byte_af": 0.00037136756104354284,
  "byte_42": 0.00027852567078265713,
  "byte_be": 9.284189026088571e-05,
  "byte_3c": 0.00046420945130442855,
  "byte_e7": 0.00018568378052177142,
  "byte_ef": 9.284189026088571e-05,
  "byte_2f": 9.284189026088571e-05,
  "byte_84": 0.0024138891467830287,
  "byte_5c": 0.00037136756104354284,
  "byte_7d": 0.00027852567078265713,
  "byte_ca": 0.00018568378052177142,
  "byte_6b": 9.284189026088571e-05,
  "byte_2c": 0.00018568378052177142,
  "byte_26": 0.0009284189026088571,
  "byte_89": 0.00046420945130442855,
  "byte_37": 0.00027852567078265713,
  "byte_fb": 9.284189026088571e-05,
  "byte_53": 0.00027852567078265713,
  "byte_f2": 0.00046420945130442855,
  "byte_a8": 9.284189026088571e-05,
  "byte_b0": 9.284189026088571e-05,
  "byte_4d": 9.284189026088571e-05,
  "byte_e6": 0.00037136756104354284,
  "byte_3b": 0.0019496796954786,
  "byte_68": 9.284189026088571e-05,
  "byte_a7": 0.00046420945130442855,
  "byte_b5": 9.284189026088571e-05,
  "byte_1e": 0.0005570513415653143,
  "byte_c8": 0.00018568378052177142,
  "byte_74": 0.00037136756104354284,
  "byte_95": 0.00046420945130442855,
  "byte_ab": 0.0005570513415653143,
  "byte_d4": 9.284189026088571e-05,
  "byte_1d": 0.00037136756104354284,
  "byte_1a": 0.00027852567078265713,
  "byte_a6": 9.284189026088571e-05,
  "byte_3a": 0.00018568378052177142,
  "byte_96": 0.00037136756104354284,
  "byte_d8": 0.00018568378052177142,
  "byte_bb": 0.00037136756104354284,
  "byte_b6": 0.00037136756104354284,
  "byte_8f": 0.00018568378052177142,
  "byte_fe": 0.0005570513415653143,
  "byte_c4": 0.00037136756104354284,
  "byte_e4": 0.00018568378052177142,
  "byte_87": 0.0025067310370439143,
  "byte_5a": 0.0015783121344350572,
  "byte_78": 9.284189026088571e-05,
  "byte_df": 0.0007427351220870857,
  "byte_41": 0.0007427351220870857,
  "byte_88": 0.00037136756104354284,
  "byte_13": 0.00018568378052177142,
  "byte_8c": 0.00027852567078265713,
  "byte_2d": 0.00027852567078265713,
  "byte_58": 0.00027852567078265713,
  "byte_da": 0.00018568378052177142,
  "byte_e5": 0.00027852567078265713,
  "byte_9e": 0.00027852567078265713,
  "byte_9c": 0.00027852567078265713,
  "byte_d7": 0.00018568378052177142,
  "byte_bc": 0.00018568378052177142,
  "byte_7b": 9.284189026088571e-05,
  "byte_1c": 9.284189026088571e-05,
  "byte_a0": 9.284189026088571e-05,
  "byte_d6": 9.284189026088571e-05,
  "byte_ae": 9.284189026088571e-05,
  "byte_e8": 9.284189026088571e-05,
  "byte_22": 0.00018568378052177142,
  "byte_dd": 9.284189026088571e-05,
  "byte_e2": 9.284189026088571e-05,
  "byte_ba": 9.284189026088571e-05,
  "byte_d5": 9.284189026088571e-05,
  "num_nodes": 3,
  "num_edges": 2,
  "avg_degree": 1.3333333333333333,
  "density": 0.3333333333333333,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 52,
  "event_nums": 1,
  "creation_block": 5530543,
  "creation_timestamp": 1525067850,
  "life_time": 184694.0,
  "duration_seconds": 2809593.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 4,
  "num_buyers": 1,
  "num_sellers": 2,
  "num_creator_transfers": 0,
  "buy_amt": 0,
  "sell_amt": 0.0,
  "avg_value": 0.0,
  "txn_per_block": 0.0002815452502774845,
  "avg_gas_limit": 4595301.423076923,
  "std_gas_limit": 1253170.2874783885,
  "avg_gas_used": 221279.5,
  "std_gas_used": 383595.80600481125,
  "avg_gas_price": 9826923076.923077,
  "std_gas_price": 1918745121.2281132,
  "sale_num": 1,
  "init_num": 1,
  "buy_num": 1,
  "reward_num": 49,
  "timeline_sequence": [
    [
      5530543,
      1525067850,
      17,
      87,
      0,
      2955674,
      5000000000,
      0,
      1,
      6732128,
      2955674,
      17561568
    ],
    [
      5530565,
      1525068164,
      19,
      35,
      0,
      6000000,
      4000000000,
      0,
      1,
      2012532,
      313195,
      17561546
    ],
    [
      5646816,
      1526829228,
      51,
      58,
      0,
      3000000,
      10000000000,
      0,
      1,
      2661732,
      225653,
      17445295
    ],
    [
      5647551,
      1526840448,
      22,
      13,
      0,
      5000000,
      5000000000,
      0,
      1,
      869034,
      180901,
      17444560
    ],
    [
      5647553,
      1526840496,
      23,
      30,
      0,
      5000000,
      8000000000,
      0,
      1,
      3015764,
      187028,
      17444558
    ],
    [
      5648250,
      1526850962,
      24,
      23,
      0,
      5000000,
      8000000000,
      0,
      1,
      1060252,
      165901,
      17443861
    ],
    [
      5649404,
      1526869114,
      25,
      33,
      0,
      5000000,
      8000000000,
      0,
      1,
      2945283,
      165901,
      17442707
    ],
    [
      5658044,
      1527000879,
      26,
      0,
      0,
      5000000,
      10000000000,
      0,
      1,
      165901,
      165901,
      17434067
    ],
    [
      5659532,
      1527024231,
      27,
      1,
      0,
      5000000,
      10000000000,
      0,
      1,
      234992,
      165901,
      17432579
    ],
    [
      5659551,
      1527024575,
      28,
      5,
      0,
      5000000,
      12000000000,
      0,
      1,
      367109,
      165837,
      17432560
    ],
    [
      5659567,
      1527024826,
      29,
      56,
      0,
      5000000,
      10000000000,
      0,
      1,
      2755376,
      165901,
      17432544
    ],
    [
      5659601,
      1527025370,
      30,
      35,
      0,
      5000000,
      10000000000,
      0,
      1,
      2538483,
      165837,
      17432510
    ],
    [
      5663660,
      1527087974,
      31,
      22,
      0,
      5000000,
      10000000000,
      0,
      1,
      1271269,
      165901,
      17428451
    ],
    [
      5664291,
      1527097307,
      32,
      44,
      0,
      5000000,
      9000000000,
      0,
      1,
      2758391,
      165901,
      17427820
    ],
    [
      5664291,
      1527097307,
      33,
      45,
      0,
      5000000,
      10000000000,
      0,
      1,
      2924292,
      165901,
      17427820
    ],
    [
      5664291,
      1527097307,
      34,
      46,
      0,
      5000000,
      10000000000,
      0,
      1,
      3090193,
      165901,
      17427820
    ],
    [
      5664303,
      1527097545,
      35,
      21,
      0,
      5000000,
      10000000000,
      0,
      1,
      2001948,
      165901,
      17427808
    ],
    [
      5664306,
      1527097581,
      36,
      40,
      0,
      5000000,
      10000000000,
      0,
      1,
      2982580,
      165901,
      17427805
    ],
    [
      5664687,
      1527103494,
      37,
      67,
      0,
      5000000,
      8000000000,
      0,
      1,
      2624961,
      165837,
      17427424
    ],
    [
      5664797,
      1527105250,
      38,
      8,
      0,
      5000000,
      10000000000,
      0,
      1,
      496590,
      165837,
      17427314
    ],
    [
      5669235,
      1527173728,
      39,
      74,
      0,
      5000000,
      10000000000,
      0,
      1,
      2849691,
      165901,
      17422876
    ],
    [
      5669370,
      1527175699,
      40,
      39,
      0,
      5000000,
      10000000000,
      0,
      1,
      2474044,
      150901,
      17422741
    ],
    [
      5674691,
      1527256913,
      41,
      10,
      0,
      5000000,
      10000000000,
      0,
      1,
      899987,
      165901,
      17417420
    ],
    [
      5681102,
      1527354234,
      42,
      33,
      0,
      5000000,
      8000000000,
      0,
      1,
      1937286,
      165837,
      17411009
    ],
    [
      5694582,
      1527559787,
      45,
      12,
      0,
      5000000,
      8000000000,
      0,
      1,
      815171,
      150965,
      17397529
    ],
    [
      5694595,
      1527559969,
      46,
      24,
      0,
      5000000,
      8000000000,
      0,
      1,
      1569387,
      150965,
      17397516
    ],
    [
      5694743,
      1527562265,
      47,
      70,
      0,
      5000000,
      9000000000,
      0,
      1,
      2608714,
      165965,
      17397368
    ],
    [
      5697004,
      1527596745,
      48,
      64,
      0,
      5000000,
      11000000000,
      0,
      1,
      3105335,
      165837,
      17395107
    ],
    [
      5697029,
      1527597093,
      49,
      28,
      0,
      5000000,
      11000000000,
      0,
      1,
      1391703,
      165837,
      17395082
    ],
    [
      5697030,
      1527597100,
      50,
      18,
      0,
      5000000,
      11000000000,
      0,
      1,
      1849455,
      165837,
      17395081
    ],
    [
      5697035,
      1527597152,
      51,
      50,
      0,
      5000000,
      11000000000,
      0,
      1,
      2540736,
      165837,
      17395076
    ],
    [
      5698568,
      1527620950,
      52,
      58,
      0,
      5000000,
      11000000000,
      0,
      1,
      3027814,
      165837,
      17393543
    ],
    [
      5699019,
      1527627778,
      53,
      73,
      0,
      5000000,
      10000000000,
      0,
      1,
      3151049,
      165965,
      17393092
    ],
    [
      5699036,
      1527628082,
      54,
      26,
      0,
      5000000,
      10000000000,
      0,
      1,
      1419301,
      165965,
      17393075
    ],
    [
      5699047,
      1527628279,
      55,
      15,
      0,
      5000000,
      10000000000,
      0,
      1,
      782571,
      150965,
      17393064
    ],
    [
      5699047,
      1527628279,
      56,
      41,
      0,
      5000000,
      10000000000,
      0,
      1,
      2449325,
      165965,
      17393064
    ],
    [
      5699047,
      1527628279,
      57,
      47,
      0,
      5000000,
      10000000000,
      0,
      1,
      2805056,
      150965,
      17393064
    ],
    [
      5699051,
      1527628332,
      58,
      50,
      0,
      5000000,
      11000000000,
      0,
      1,
      1764497,
      150965,
      17393060
    ],
    [
      5699059,
      1527628519,
      59,
      68,
      0,
      5000000,
      10000000000,
      0,
      1,
      2553090,
      150965,
      17393052
    ],
    [
      5704155,
      1527706906,
      60,
      39,
      0,
      5000000,
      10000000000,
      0,
      1,
      1868993,
      165453,
      17387956
    ],
    [
      5704170,
      1527707134,
      61,
      36,
      0,
      5000000,
      10000000000,
      0,
      1,
      2513262,
      165453,
      17387941
    ],
    [
      5705000,
      1527719898,
      62,
      25,
      0,
      5000000,
      12000000000,
      0,
      1,
      2031877,
      150453,
      17387111
    ],
    [
      5705015,
      1527720079,
      63,
      47,
      0,
      5000000,
      11000000000,
      0,
      1,
      2539831,
      150453,
      17387096
    ],
    [
      5705053,
      1527720625,
      64,
      111,
      0,
      5000000,
      10000000000,
      0,
      1,
      2543635,
      165453,
      17387058
    ],
    [
      5705068,
      1527720863,
      65,
      3,
      0,
      5000000,
      10000000000,
      0,
      1,
      614184,
      165453,
      17387043
    ],
    [
      5707056,
      1527751637,
      66,
      167,
      0,
      500000,
      16000000000,
      0,
      1,
      6557129,
      150453,
      17385055
    ],
    [
      5707075,
      1527751849,
      67,
      25,
      0,
      500000,
      15000000000,
      0,
      1,
      1630966,
      165453,
      17385036
    ],
    [
      5711051,
      1527812624,
      68,
      14,
      0,
      500000,
      10000000000,
      0,
      1,
      962451,
      165965,
      17381060
    ],
    [
      5714599,
      1527867836,
      69,
      29,
      0,
      5000000,
      10000000000,
      0,
      1,
      1975085,
      165965,
      17377512
    ],
    [
      5714599,
      1527867836,
      70,
      48,
      0,
      5000000,
      10000000000,
      0,
      1,
      2761281,
      165965,
      17377512
    ],
    [
      5714938,
      1527872821,
      71,
      25,
      0,
      5000000,
      10000000000,
      0,
      1,
      2663041,
      165965,
      17377173
    ],
    [
      5715237,
      1527877443,
      72,
      68,
      0,
      500000,
      11000000000,
      0,
      1,
      6761224,
      165965,
      17376874
    ]
  ],
  "sourcecode": "pragma solidity ^0.4.16;\n\n\n\n// ----------------------------------------------------------------------------\n// Currency contract\n// ----------------------------------------------------------------------------\ncontract ERC20Interface {\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n    function transfer(address to, uint tokens) public returns (bool success);\n    function approve(address spender, uint tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n\n    event Transfer(address from, address to, uint tokens);\n    event Approval(address tokenOwner, address spender, uint tokens);\n}\n\n// ----------------------------------------------------------------------------\n// CNT Currency contract extended API\n// ----------------------------------------------------------------------------\ncontract PRE_SALE_Token is ERC20Interface {\n    function ico_distribution(address to, uint tokens) public;\n    function ico_promo_reward(address to, uint tokens) public;\n    function init(address _sale) public;\n}\n\n// ----------------------------------------------------------------------------\n// NRB_Contract User Contract API\n// ----------------------------------------------------------------------------\ncontract NRB_Contract {\n    function registerUserOnToken(address _token, address _user, uint _value, uint _flc, string _json) public returns (uint);\n}\n\n\n// ----------------------------------------------------------------------------\n// contract WhiteListAccess\n// ----------------------------------------------------------------------------\ncontract WhiteListAccess { \n    \n    function WhiteListAccess() public {\n        owner = msg.sender;\n        whitelist[owner] = true;\n        whitelist[address(this)] = true;\n    }\n    \n    address public owner;\n    mapping (address => bool) whitelist;\n\n    modifier onlyOwner {require(msg.sender == owner); _;}\n    modifier onlyWhitelisted {require(whitelist[msg.sender]); _;}\n\n    function addToWhiteList(address trusted) public onlyOwner() {\n        whitelist[trusted] = true;\n    }\n\n    function removeFromWhiteList(address untrusted) public onlyOwner() {\n        whitelist[untrusted] = false;\n    }\n\n}\n// ----------------------------------------------------------------------------\n// CNT_Common contract\n// ----------------------------------------------------------------------------\ncontract CNT_Common is WhiteListAccess {\n    string  public name;\n    function CNT_Common() public { ETH_address = 0x1; }\n\n    // Deployment\n    bool public initialized;\n    address public ETH_address;    // representation of Ether as Token (0x1)\n    address public EOS_address;    // EOS Tokens\n    address public NRB_address;    // New Rich on The Block Contract\n    \n    address public CNT_address;    // Chip\n    address public BGB_address;    // BG Coin\n    address public VPE_address;    // Vapaee Token\n    address public GVPE_address;   // Golden Vapaee Token\n    \n\n}\n\n\n// ----------------------------------------------------------------------------\n// CNT_Crowdsale\n// ----------------------------------------------------------------------------\ncontract CNT_Crowdsale is CNT_Common {\n\n    uint public raised;\n    uint public remaining;\n    uint public cnt_per_Keos;\n    uint public bgb_per_Keos;\n    uint public vpe_per_Keos;\n    uint public gvpe_per_Keos;\n    mapping(address => uint) public paid;\n    \n    // a global list of users (uniques ids across)\n    mapping(uint => Reward) public rewards;\n\n    // length of prev list\n    uint public rewardslength;\n\n    struct Reward {\n        uint cnt;\n        uint bgb;\n        uint timestamp;\n        address target;\n        string concept;\n    }\n\n    event Sale(address from, uint eos_tokens, address to, uint cnt_tokens, uint mana_tokens, uint vpe_tokens, uint gvpe_tokens);\n    // --------------------------------------------------------------------------------\n\n    function CNT_Crowdsale() public {\n        rewardslength = 0;\n        cnt_per_Keos  = 300000;\n        bgb_per_Keos  = 300000;\n        vpe_per_Keos  =    500;\n        gvpe_per_Keos =    100;\n        name = \"CNT_Crowdsale\";\n        remaining = 1000000 * 10**18; // 1 million\n    }\n\n    function init(address _eos, address _cnt, address _bgb, address _vpe, address _gvpe, address _nrb) public {\n        require(!initialized);\n        EOS_address = _eos;\n        CNT_address = _cnt;\n        BGB_address = _bgb;\n        VPE_address = _vpe;\n        GVPE_address = _gvpe;\n        NRB_address = _nrb;\n        PRE_SALE_Token(CNT_address).init(address(this));\n        PRE_SALE_Token(BGB_address).init(address(this));\n        PRE_SALE_Token(VPE_address).init(address(this));\n        PRE_SALE_Token(GVPE_address).init(address(this));\n        initialized = true;\n    }\n\n    function isInit() constant public returns (bool) {\n        return initialized;\n    }\n\n    function calculateTokens(uint _Keos_amount) constant public returns (uint, uint, uint, uint) {\n        uint cnt  = _Keos_amount * cnt_per_Keos;\n        uint bgb  = _Keos_amount * bgb_per_Keos;\n        uint vpe  = _Keos_amount * vpe_per_Keos;\n        uint gvpe = _Keos_amount * gvpe_per_Keos;        \n        if (vpe % 1000000000000000000 > 0) {\n            vpe = vpe - vpe % 1000000000000000000;\n        }\n        if (gvpe % 1000000000000000000 > 0) {\n            gvpe = gvpe - gvpe % 1000000000000000000;\n        }\n        return (\n            cnt,\n            bgb,\n            vpe,\n            gvpe\n        );\n    }\n\n    function buy(uint _Keos_amount) public {\n        // calculate how much of each token must be sent\n        uint _eos_amount = _Keos_amount * 1000;\n        require(remaining >= _eos_amount);\n\n        uint cnt_amount  = 0;\n        uint bgb_amount = 0;\n        uint vpe_amount  = 0;\n        uint gvpe_amount = 0;\n\n        (cnt_amount, bgb_amount, vpe_amount, gvpe_amount) = calculateTokens(_Keos_amount);\n\n        // send the tokens\n        PRE_SALE_Token(CNT_address) .ico_distribution(msg.sender, cnt_amount);\n        PRE_SALE_Token(BGB_address) .ico_distribution(msg.sender, bgb_amount);\n        PRE_SALE_Token(VPE_address) .ico_distribution(msg.sender, vpe_amount);\n        PRE_SALE_Token(GVPE_address).ico_distribution(msg.sender, gvpe_amount);\n\n        // registro la compra\n        Sale(address(this), _eos_amount, msg.sender, cnt_amount, bgb_amount, vpe_amount, gvpe_amount);\n        paid[msg.sender] = paid[msg.sender] + _eos_amount;\n\n        // env\u00edo los eos al owner\n        ERC20Interface(EOS_address).transferFrom(msg.sender, owner, _eos_amount);\n\n        raised = raised + _eos_amount;\n        remaining = remaining - _eos_amount;\n    }\n\n    function registerUserOnToken(string _json) public {\n        NRB_Contract(CNT_address).registerUserOnToken(EOS_address, msg.sender, paid[msg.sender], 0, _json);\n    }\n\n    function finishPresale() public onlyOwner() {\n        uint cnt_amount  = 0;\n        uint bgb_amount = 0;\n        uint vpe_amount  = 0;\n        uint gvpe_amount = 0;\n\n        (cnt_amount, bgb_amount, vpe_amount, gvpe_amount) = calculateTokens(remaining);\n\n        // send the tokens\n        PRE_SALE_Token(CNT_address) .ico_distribution(owner, cnt_amount);\n        PRE_SALE_Token(BGB_address) .ico_distribution(owner, bgb_amount);\n        PRE_SALE_Token(VPE_address) .ico_distribution(owner, vpe_amount);\n        PRE_SALE_Token(GVPE_address).ico_distribution(owner, gvpe_amount);\n\n        // registro la compra\n        Sale(address(this), remaining, owner, cnt_amount, bgb_amount, vpe_amount, gvpe_amount);\n        paid[owner] = paid[owner] + remaining;\n\n        raised = raised + remaining;\n        remaining = 0;        \n    }\n\n    function reward(address _target, uint _cnt, uint _bgb,  string _concept) public onlyOwner() {\n        // register the reward\n        rewardslength++;\n        rewards[rewardslength] = Reward(_cnt, _bgb, block.timestamp, _target, _concept);\n\n        // send the tokens\n        PRE_SALE_Token(CNT_address) .ico_promo_reward(_target, _cnt);\n        PRE_SALE_Token(BGB_address) .ico_promo_reward(_target, _bgb);        \n    }\n    // ------------------------------------------------------------------------\n    // Don't accept ETH\n    // ------------------------------------------------------------------------\n    function () public payable {\n        revert();\n    }\n\n    // ------------------------------------------------------------------------\n    // Owner can transfer out any accidentally sent ERC20 tokens\n    // ------------------------------------------------------------------------\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public returns (bool success) {\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\n    }\n\n\n}"
}