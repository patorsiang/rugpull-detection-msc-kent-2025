{
  "opcode_sequence": "PUSH1 PUSH1 MSTORE PUSH1 CALLDATASIZE LT PUSH2 JUMPI PUSH1 CALLDATALOAD PUSH29 SWAP1 DIV PUSH4 AND DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI DUP1 PUSH4 EQ PUSH2 JUMPI JUMPDEST PUSH1 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP1 PUSH1 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 DUP2 ADD SWAP1 POP PUSH2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 AND DUP1 ISZERO PUSH2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 DUP4 PUSH1 SUB PUSH2 EXP SUB NOT AND DUP2 MSTORE PUSH1 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST POP PUSH2 PUSH1 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 AND SWAP1 PUSH1 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 JUMP JUMPDEST PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH32 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 DUP3 CALLER PUSH20 AND PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ DUP1 PUSH2 JUMPI POP PUSH1 ISZERO ISZERO PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO EQ JUMPDEST DUP1 PUSH2 JUMPI POP PUSH1 PUSH2 PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND CALLER PUSH2 JUMP JUMPDEST GT JUMPDEST DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND DUP2 PUSH20 AND EQ DUP1 ISZERO PUSH2 JUMPI POP PUSH1 ISZERO ISZERO PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO EQ JUMPDEST JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST DUP3 PUSH1 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 AND CALLER PUSH20 AND PUSH32 DUP6 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 PUSH1 EXP PUSH4 MUL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 DUP3 CALLER PUSH20 AND PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ DUP1 PUSH2 JUMPI POP PUSH1 ISZERO ISZERO PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO EQ JUMPDEST DUP1 PUSH2 JUMPI POP PUSH1 PUSH2 PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND CALLER PUSH2 JUMP JUMPDEST GT JUMPDEST DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND DUP2 PUSH20 AND EQ DUP1 ISZERO PUSH2 JUMPI POP PUSH1 ISZERO ISZERO PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO EQ JUMPDEST JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP4 PUSH1 DUP1 DUP9 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP1 DUP8 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH2 DUP4 PUSH1 PUSH1 DUP9 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 PUSH1 DUP8 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH2 DUP4 PUSH1 DUP1 DUP8 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP1 DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 AND DUP6 PUSH20 AND PUSH32 DUP6 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 PUSH1 MSTORE DUP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 PUSH1 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP2 JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 MSTORE DUP2 PUSH1 MSTORE PUSH1 PUSH1 SHA3 PUSH1 MSTORE DUP1 PUSH1 MSTORE PUSH1 PUSH1 SHA3 PUSH1 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 DUP1 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 EXP PUSH4 MUL DUP2 JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND DUP2 JUMP JUMPDEST PUSH1 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 MSTORE DUP1 PUSH1 DUP2 MSTORE PUSH1 ADD PUSH32 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND CALLER PUSH20 AND EQ ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH1 PUSH1 PUSH1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH1 MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 PUSH1 DUP1 PUSH2 EXP DUP2 SLOAD DUP2 PUSH20 MUL NOT AND SWAP1 DUP4 PUSH20 AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 DUP3 CALLER PUSH20 AND PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND EQ DUP1 PUSH2 JUMPI POP PUSH1 ISZERO ISZERO PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO EQ JUMPDEST DUP1 PUSH2 JUMPI POP PUSH1 PUSH2 PUSH1 DUP1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND CALLER PUSH2 JUMP JUMPDEST GT JUMPDEST DUP1 PUSH2 JUMPI POP PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH20 AND PUSH20 AND DUP2 PUSH20 AND EQ DUP1 ISZERO PUSH2 JUMPI POP PUSH1 ISZERO ISZERO PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND ISZERO ISZERO EQ JUMPDEST JUMPDEST ISZERO ISZERO PUSH2 JUMPI PUSH1 DUP1 REVERT JUMPDEST PUSH2 DUP4 PUSH1 DUP1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP1 CALLER PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP PUSH2 DUP4 PUSH1 DUP1 DUP8 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD PUSH2 SWAP1 SWAP2 SWAP1 PUSH4 AND JUMP JUMPDEST PUSH1 DUP1 DUP7 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 AND CALLER PUSH20 AND PUSH32 DUP6 PUSH1 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 ADD SWAP2 POP POP PUSH1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 PUSH1 SWAP1 SLOAD SWAP1 PUSH2 EXP SWAP1 DIV PUSH1 AND DUP2 JUMP JUMPDEST PUSH1 PUSH1 PUSH1 DUP5 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 PUSH1 DUP4 PUSH20 AND PUSH20 AND DUP2 MSTORE PUSH1 ADD SWAP1 DUP2 MSTORE PUSH1 ADD PUSH1 SHA3 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 JUMPI UNKNOWN_0xfe JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 SHA3 SWAP16 UNKNOWN_0xea UNKNOWN_0x4f PUSH21 UNKNOWN_0xe8 SWAP10 INVALID_0x7c",
  "opcode_entropy": 4.6901455292110334,
  "opcode_count": 2329,
  "unique_opcodes": 58,
  "byte_entropy": 4.501507706173152,
  "byte_60": 0.05947136563876652,
  "byte_80": 0.0368442130556668,
  "byte_40": 0.009411293552262716,
  "byte_52": 0.015018021625951141,
  "byte_04": 0.008610332398878654,
  "byte_36": 0.001802162595114137,
  "byte_10": 0.002002402883460152,
  "byte_61": 0.028634361233480177,
  "byte_00": 0.03984781738085703,
  "byte_fc": 0.001001201441730076,
  "byte_57": 0.012214657589106928,
  "byte_35": 0.0032038446135362435,
  "byte_7c": 0.0008009611533840609,
  "byte_01": 0.03063676411694033,
  "byte_90": 0.039447336804165,
  "byte_63": 0.005606728073688426,
  "byte_ff": 0.3594313175810973,
  "byte_16": 0.02262715258309972,
  "byte_06": 0.001802162595114137,
  "byte_fd": 0.005406487785342411,
  "byte_de": 0.00020024028834601522,
  "byte_03": 0.011013215859030838,
  "byte_14": 0.006607929515418502,
  "byte_09": 0.0016019223067681217,
  "byte_5e": 0.00020024028834601522,
  "byte_a7": 0.0006007208650380457,
  "byte_b3": 0.0006007208650380457,
  "byte_91": 0.01461754104925911,
  "byte_18": 0.00020024028834601522,
  "byte_0d": 0.0014016820184221065,
  "byte_dd": 0.0016019223067681217,
  "byte_f6": 0.00040048057669203043,
  "byte_23": 0.0006007208650380457,
  "byte_b8": 0.00020024028834601522,
  "byte_72": 0.0008009611533840609,
  "byte_02": 0.008009611533840609,
  "byte_21": 0.00020024028834601522,
  "byte_27": 0.00020024028834601522,
  "byte_e2": 0.0006007208650380457,
  "byte_e3": 0.00040048057669203043,
  "byte_a6": 0.0006007208650380457,
  "byte_31": 0.00040048057669203043,
  "byte_3c": 0.00020024028834601522,
  "byte_e5": 0.00040048057669203043,
  "byte_67": 0.00020024028834601522,
  "byte_4b": 0.00020024028834601522,
  "byte_0e": 0.0016019223067681217,
  "byte_28": 0.0008009611533840609,
  "byte_4d": 0.0014016820184221065,
  "byte_75": 0.00020024028834601522,
  "byte_47": 0.00020024028834601522,
  "byte_15": 0.01802162595114137,
  "byte_6b": 0.0006007208650380457,
  "byte_5c": 0.00020024028834601522,
  "byte_65": 0.0014016820184221065,
  "byte_81": 0.022827392871445733,
  "byte_9a": 0.00020024028834601522,
  "byte_70": 0.00040048057669203043,
  "byte_a0": 0.00040048057669203043,
  "byte_82": 0.006607929515418502,
  "byte_11": 0.0014016820184221065,
  "byte_d5": 0.00040048057669203043,
  "byte_ae": 0.00020024028834601522,
  "byte_05": 0.002603123748498198,
  "byte_68": 0.0006007208650380457,
  "byte_7e": 0.00020024028834601522,
  "byte_1c": 0.00020024028834601522,
  "byte_0c": 0.0008009611533840609,
  "byte_bf": 0.00020024028834601522,
  "byte_8d": 0.0006007208650380457,
  "byte_a5": 0.00020024028834601522,
  "byte_cb": 0.00040048057669203043,
  "byte_5b": 0.022426912294753704,
  "byte_ea": 0.00040048057669203043,
  "byte_95": 0.0006007208650380457,
  "byte_d8": 0.00020024028834601522,
  "byte_9b": 0.0006007208650380457,
  "byte_41": 0.00040048057669203043,
  "byte_9d": 0.0008009611533840609,
  "byte_f4": 0.00040048057669203043,
  "byte_b5": 0.00020024028834601522,
  "byte_d1": 0.00040048057669203043,
  "byte_a9": 0.00020024028834601522,
  "byte_9c": 0.00020024028834601522,
  "byte_bb": 0.00020024028834601522,
  "byte_e8": 0.00040048057669203043,
  "byte_cf": 0.00020024028834601522,
  "byte_30": 0.00040048057669203043,
  "byte_12": 0.0022026431718061676,
  "byte_62": 0.001001201441730076,
  "byte_ed": 0.00020024028834601522,
  "byte_3e": 0.00020024028834601522,
  "byte_34": 0.004004805766920304,
  "byte_50": 0.03143772527032439,
  "byte_f3": 0.003604325190228274,
  "byte_56": 0.010012014417300761,
  "byte_51": 0.00961153384060873,
  "byte_20": 0.021225470564677613,
  "byte_83": 0.005606728073688426,
  "byte_84": 0.001001201441730076,
  "byte_3b": 0.00020024028834601522,
  "byte_1f": 0.001001201441730076,
  "byte_0a": 0.007208650380456548,
  "byte_19": 0.0014016820184221065,
  "byte_92": 0.004405286343612335,
  "byte_dc": 0.00020024028834601522,
  "byte_73": 0.017821385662795355,
  "byte_07": 0.0008009611533840609,
  "byte_2c": 0.00020024028834601522,
  "byte_0b": 0.00040048057669203043,
  "byte_45": 0.00040048057669203043,
  "byte_2d": 0.0006007208650380457,
  "byte_8c": 0.0006007208650380457,
  "byte_b2": 0.00040048057669203043,
  "byte_e7": 0.00020024028834601522,
  "byte_25": 0.00040048057669203043,
  "byte_3d": 0.00020024028834601522,
  "byte_69": 0.0008009611533840609,
  "byte_42": 0.00040048057669203043,
  "byte_77": 0.00020024028834601522,
  "byte_fb": 0.00040048057669203043,
  "byte_0f": 0.0008009611533840609,
  "byte_1d": 0.00020024028834601522,
  "byte_74": 0.001001201441730076,
  "byte_7d": 0.0006007208650380457,
  "byte_d4": 0.0006007208650380457,
  "byte_a2": 0.00020024028834601522,
  "byte_b0": 0.0006007208650380457,
  "byte_96": 0.00020024028834601522,
  "byte_7b": 0.00020024028834601522,
  "byte_c3": 0.00040048057669203043,
  "byte_e6": 0.00020024028834601522,
  "byte_33": 0.0032038446135362435,
  "byte_c7": 0.00040048057669203043,
  "byte_59": 0.00020024028834601522,
  "byte_85": 0.001001201441730076,
  "byte_88": 0.0006007208650380457,
  "byte_98": 0.0008009611533840609,
  "byte_13": 0.0016019223067681217,
  "byte_7f": 0.0012014417300760913,
  "byte_6d": 0.00040048057669203043,
  "byte_6e": 0.00040048057669203043,
  "byte_4e": 0.00040048057669203043,
  "byte_38": 0.001001201441730076,
  "byte_29": 0.0006007208650380457,
  "byte_54": 0.007208650380456548,
  "byte_6f": 0.00020024028834601522,
  "byte_d2": 0.00020024028834601522,
  "byte_d0": 0.00040048057669203043,
  "byte_08": 0.0006007208650380457,
  "byte_49": 0.00040048057669203043,
  "byte_48": 0.00020024028834601522,
  "byte_86": 0.0008009611533840609,
  "byte_55": 0.002002402883460152,
  "byte_e1": 0.00020024028834601522,
  "byte_eb": 0.00020024028834601522,
  "byte_ec": 0.00020024028834601522,
  "byte_4f": 0.00040048057669203043,
  "byte_71": 0.00020024028834601522,
  "byte_1e": 0.00040048057669203043,
  "byte_c0": 0.00020024028834601522,
  "byte_f7": 0.00020024028834601522,
  "byte_c8": 0.0008009611533840609,
  "byte_b9": 0.00020024028834601522,
  "byte_a3": 0.0006007208650380457,
  "byte_87": 0.0008009611533840609,
  "byte_a1": 0.0008009611533840609,
  "byte_f2": 0.00040048057669203043,
  "byte_ad": 0.00040048057669203043,
  "byte_1b": 0.00040048057669203043,
  "byte_c2": 0.0006007208650380457,
  "byte_37": 0.00040048057669203043,
  "byte_aa": 0.001001201441730076,
  "byte_2b": 0.00040048057669203043,
  "byte_f1": 0.00040048057669203043,
  "byte_c4": 0.00040048057669203043,
  "byte_f5": 0.0008009611533840609,
  "byte_5a": 0.0006007208650380457,
  "byte_ef": 0.0006007208650380457,
  "byte_93": 0.00020024028834601522,
  "byte_17": 0.0008009611533840609,
  "byte_e4": 0.00020024028834601522,
  "byte_d3": 0.00020024028834601522,
  "byte_fe": 0.00040048057669203043,
  "byte_4c": 0.00040048057669203043,
  "byte_7a": 0.00040048057669203043,
  "byte_58": 0.00020024028834601522,
  "byte_9f": 0.00020024028834601522,
  "byte_8e": 0.00020024028834601522,
  "byte_8f": 0.00020024028834601522,
  "byte_3f": 0.00020024028834601522,
  "byte_2e": 0.00020024028834601522,
  "byte_be": 0.00020024028834601522,
  "byte_6c": 0.00020024028834601522,
  "byte_99": 0.00020024028834601522,
  "byte_da": 0.00020024028834601522,
  "num_nodes": 2,
  "num_edges": 1,
  "avg_degree": 1.0,
  "density": 0.5,
  "connected_components": 1,
  "avg_clustering": 0.0,
  "txn_nums": 6,
  "event_nums": 4,
  "creation_block": 6163880,
  "creation_timestamp": 1534511641,
  "life_time": 34731.0,
  "duration_seconds": 506978.0,
  "from_creation_to_transfer": 0.0,
  "num_addresses": 3,
  "num_buyers": 1,
  "num_sellers": 1,
  "num_creator_transfers": 0,
  "buy_amt": 0,
  "sell_amt": 0.0,
  "avg_value": 0.0,
  "txn_per_block": 0.00017275135321893355,
  "avg_gas_limit": 277031.1666666667,
  "std_gas_limit": 522578.155813532,
  "avg_gas_used": 277031.1666666667,
  "std_gas_used": 522578.155813532,
  "avg_gas_price": 17833333333.333332,
  "std_gas_price": 13259168735.46587,
  "transfer_num": 5,
  "atinversebrah_num": 1,
  "timeline_sequence": [
    [
      6163880,
      1534511641,
      0,
      91,
      0,
      1445311,
      20000000000,
      0,
      1,
      6498384,
      1445311,
      16957079
    ],
    [
      6164047,
      1534514296,
      1,
      79,
      0,
      23256,
      20000000000,
      1,
      0,
      3359094,
      23256,
      16956912
    ],
    [
      6164095,
      1534514955,
      2,
      107,
      0,
      52171,
      17000000000,
      0,
      1,
      7791883,
      52171,
      16956864
    ],
    [
      6167064,
      1534558944,
      3,
      107,
      0,
      52171,
      4000000000,
      0,
      1,
      6028167,
      52171,
      16953895
    ],
    [
      6196198,
      1534983224,
      4,
      273,
      0,
      52107,
      3000000000,
      0,
      1,
      7235530,
      52107,
      16924761
    ],
    [
      6198611,
      1535018619,
      5,
      4,
      0,
      37171,
      43000000000,
      0,
      1,
      121171,
      37171,
      16922348
    ]
  ],
  "sourcecode": "pragma solidity 0.4.24;\n\ncontract ERC20 {\n    function totalSupply() constant public returns (uint256 supply);\n    function balanceOf(address _owner) constant public returns (uint256 balance);\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n    function approve(address _spender, uint256 _value) public returns (bool success);\n    function allowance(address _owner, address _spender) constant public returns (uint256 remaining);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nlibrary SafeMath {\n  function safeSub(uint a, uint b) internal pure returns (uint) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function safeAdd(uint a, uint b) internal pure returns (uint) {\n    uint c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract EmanateToken is ERC20 {\n\n  using SafeMath for uint256;\n\n  string public constant name = \"Emanate (MN8) Token\";\n  string public constant symbol = \"MN8\";\n  uint256 public constant decimals = 18;\n  uint256 public constant totalTokens = 208000000 * (10 ** decimals);\n\n  mapping (address => uint256) public balances;\n  mapping (address => mapping (address => uint256)) public allowed;\n\n  bool public locked = true;\n  bool public burningEnabled = false;\n  address public owner;\n  address public burnAddress;\n\n  modifier unlocked (address _to) {\n    require(\n      owner == msg.sender ||\n      locked == false ||\n      allowance(owner, msg.sender) > 0 ||\n      (_to == burnAddress && burningEnabled == true)\n    );\n    _;\n  }\n\n  constructor () public {\n    balances[msg.sender] = totalTokens;\n    owner = msg.sender;\n  }\n\n  function totalSupply() public view returns (uint256) {\n    return totalTokens;\n  }\n\n  \n  function transfer(address _to, uint _tokens) unlocked(_to) public returns (bool success) {\n    balances[msg.sender] = balances[msg.sender].safeSub(_tokens);\n    balances[_to] = balances[_to].safeAdd(_tokens);\n    emit Transfer(msg.sender, _to, _tokens);\n    return true;\n  }\n\n  function transferFrom(address from, address _to, uint _tokens) unlocked(_to) public returns (bool success) {\n    balances[from] = balances[from].safeSub(_tokens);\n    allowed[from][msg.sender] = allowed[from][msg.sender].safeSub(_tokens);\n    balances[_to] = balances[_to].safeAdd(_tokens);\n    emit Transfer(from, _to, _tokens);\n    return true;\n  }\n\n  function balanceOf(address _owner) constant public returns (uint256) {\n    return balances[_owner];\n  }\n  \n\n  function approve(address _spender, uint256 _value) unlocked(_spender) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  function allowance(address _owner, address _spender) constant public returns (uint256 remaining) {\n    return allowed[_owner][_spender];\n  }\n\n  function setBurnAddress (address _burnAddress) public {\n    require(msg.sender == owner);\n    burningEnabled = true;\n    burnAddress = _burnAddress;\n  }\n\n  function unlock () public {\n    require(msg.sender == owner);\n    locked = false;\n    owner = 0x0000000000000000000000000000000000000001;\n  }\n}"
}